{
  "resource": "/add",
  "path": "/add",
  "httpMethod": "POST",
  "headers": {
    "Accept": "*/*",
    "Accept-Encoding": "gzip, deflate, br",
    "Connection": "keep-alive",
    "Content-Length": "279",
    "Content-Type": "application/json",
    "Host": "localhost:3000",
    "Origin": "http://localhost:3000.com",
    "Postman-Token": "283ebe16-57db-414b-bb76-af599aedf0cd",
    "User-Agent": "PostmanRuntime/7.26.8",
    "X-Forwarded-Port": "3000",
    "X-Forwarded-Proto": "http"
  },
  "multiValueHeaders": {
    "Accept": [
      "*/*"
    ],
    "Accept-Encoding": [
      "gzip, deflate, br"
    ],
    "Connection": [
      "keep-alive"
    ],
    "Content-Length": [
      "279"
    ],
    "Content-Type": [
      "application/json"
    ],
    "Host": [
      "localhost:3000"
    ],
    "Origin": [
      "http://localhost:3000.com"
    ],
    "Postman-Token": [
      "283ebe16-57db-414b-bb76-af599aedf0cd"
    ],
    "User-Agent": [
      "PostmanRuntime/7.26.8"
    ],
    "X-Forwarded-Port": [
      "3000"
    ],
    "X-Forwarded-Proto": [
      "http"
    ]
  },
  "queryStringParameters": null,
  "multiValueQueryStringParameters": null,
  "pathParameters": {
    "operation": "add"
  },
  "stageVariables": null,
  "requestContext": {
    "accountId": "123456789012",
    "resourceId": "123456",
    "stage": "Dev",
    "domainName": "localhost:3000",
    "domainPrefix": "",
    "requestId": "99bcc809-c651-441b-b120-a3defc2b054d",
    "protocol": "HTTP/1.1",
    "identity": {
      "cognitoIdentityPoolId": "",
      "accountId": "",
      "cognitoIdentityId": "",
      "caller": "",
      "apiKey": "",
      "apiKeyId": "",
      "accessKey": "",
      "sourceIp": "127.0.0.1",
      "cognitoAuthenticationType": "",
      "cognitoAuthenticationProvider": "",
      "userArn": "",
      "userAgent": "Custom User Agent String",
      "user": ""
    },
    "resourcePath": "/add",
    "authorizer": null,
    "httpMethod": "POST",
    "requestTime": "31/May/2021:10:34:58 +0000",
    "requestTimeEpoch": 1622457298,
    "apiId": "1234567890"
  },
  "body": "{ \"csvData\": \"VU5JVA0KTUVESTEwMDANCkZvdW5kYXRpb25zIG9mIEJpb21lZGljYWwgU2NpZW5jZQ0KVGhpcyB1bml0IGlzIGFuIGludHJvZHVjdGlvbiB0byB0aGUgdGhlb3J5IGFuZCBhcHBsaWNhdGlvbiBvZiBkaXNjaXBsaW5lcyBpbiB0aGUgYmlvbWVkaWNhbCBzY2llbmNlczogbWljcm9iaW9sb2d5LCBpbW11bm9sb2d5LCBoaXN0b3BhdGhvbG9neSwgaGFlbWF0b2xvZ3ksIGJpb2NoZW1pc3RyeSBhbmQgbW9sZWN1bGFyIGdlbmV0aWNzLiBUaGVtZXMgaW5jbHVkZSB0aGUgYmFzaWMgdGhlb3J5IG9mIHRoZSBjZWxsdWxhciBhbmQgbW9sZWN1bGFyIGNvbXBvbmVudHMgdGhhdCBmb3JtIHRoZSBmb3VuZGF0aW9ucyBvZiBiaW9tZWRpY2FsIHNjaWVuY2UsIHRoZSBpbnZlc3RpZ2F0aW9uIG9mIGRpc2Vhc2UgYW5kIGluZmVjdGlvdXMgYWdlbnRzLCBvY2N1cGF0aW9uYWwgaGVhbHRoIGNvbnNpZGVyYXRpb25zLCB0aGUgdXNlIG9mIHNwZWNpYWxpemVkIGVxdWlwbWVudCBhbmQgdGVzdGluZyBvZiBiaW9sb2dpY2FsIHNhbXBsZXMgaW4gYSBwcm9mZXNzaW9uYWwgbWFubmVyLiBUaGUgcm9sZSBhbmQgZnVuY3Rpb24gb2YgbWVkaWNhbCBhbmQgcmVzZWFyY2ggbGFib3JhdG9yaWVzIHdpbGwgYWxzbyBiZSBleHBsb3JlZC4NCjI1DQpJbnRlcm5hbA0KDQoNCg0KMTINCg0KVU5JVA0KSFVNQjEwMDANCkh1bWFuIFN0cnVjdHVyZSBhbmQgRnVuY3Rpb24NCkFuYXRvbWljYWwgb3JnYW5pc2F0aW9uIG9mIHRoZSBib2R5IGFuZCB0aGUgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIGJvZHkgc3lzdGVtcyBhbmQgY2VsbHMuIEh1bWFuIHJlcXVpcmVtZW50cyBmb3IgbWV0YWJvbGlzbSBhbmQgbGlmZS4gVGhlIHN0cnVjdHVyZSBhbmQgZnVuY3Rpb24gb2YgdGhlIGJvZHkgZnJvbSBjZWxscyB0byB0aGUgd2hvbGUgb3JnYW5pc20uIEJhc2ljIGNvbnRyb2wgYW5kIGludGVyYWN0aW9ucyBvZiB0aGUgY2lyY3VsYXRvcnksIHJlc3BpcmF0b3J5LCBkaWdlc3RpdmUgYW5kIGV4Y3JldG9yeSBzeXN0ZW1zIGZvciBob21lb3N0YXNpcy4gUHJpbWFyeSBkZWZlbmNlIGFnYWluc3QgbWljcm9vcmdhbmlzbXMuIE1lY2hhbmlzbXMgZm9yIGdyb3d0aCwgcmVwYWlyIGFuZCByZXByb2R1Y3Rpb24uDQoyNQ0KRnVsbHkgT25saW5lLEludGVybmFsDQoNCg0KMTY0Mw0KMTINCg0KVU5JVA0KQklPTDEwMDQNCkZvdW5kYXRpb25zIG9mIEJpb3NjaWVuY2UgUHJhY3RpY2UNCkluIHRoaXMgdW5pdCBzdHVkZW50cyB3aWxsIGJlIGludHJvZHVjZWQgdG8gdGhlIGFwcGxpY2F0aW9uIG9mIGFjYWRlbWljIHN0YW5kYXJkcyBhbmQgZGV2ZWxvcG1lbnQgb2Ygc2tpbGxzIHJlcXVpcmVkIGZvciBzdHVkeWluZyBhdCB1bml2ZXJzaXR5LiBJbnRyb2R1Y3Rpb24gdG8gcmVxdWlyZW1lbnRzIGZvciBwcm9mZXNzaW9uYWwsIHNhZmUgYW5kIGFjY3VyYXRlIGxhYm9yYXRvcnkgcHJhY3RpY2UuIFN0dWRlbnRzIHdpbGwgbGVhcm4gbGFib3JhdG9yeSB0ZWNobmlxdWVzIHRvIGFwcGx5IGludHJvZHVjdG9yeSBDaGVtaXN0cnkga25vd2xlZGdlLCBhbmQgcHJhY3Rpc2UgYXMgZW1lcmdpbmcgc2NpZW50aXN0cyBjYXBhYmxlIG9mIHdvcmtpbmcgaW5kaXZpZHVhbGx5IGFuZCBpbiB0ZWFtcy4gSW50cm9kdWN0aW9uIHRvIGV0aGljcyBpbiB0aGUgY29udGV4dCBvZiBodW1hbiBhbmQgYW5pbWFsIHJlc2VhcmNoLiBJbnRyb2R1Y3Rpb24gdG8gY2FyZWVycyBmb3IgaGVhbHRoIHNjaWVudGlzdHMuDQoyNQ0KSW50ZXJuYWwNCg0KDQoNCjENCg0KVU5JVA0KQ0hFTTEwMDcNCkZ1bmRhbWVudGFsIENoZW1pc3RyeSBmb3IgQmlvc2NpZW5jZXMNCg0KMjUNCkludGVybmFsDQpCSU9MMTAwNA0KQklPTDEwMDQNCkNIRU0xMDAxLENIRU0xMDA1DQoxDQoNClVOSVQNCklOREgxMDA2DQpJbmRpZ2Vub3VzIEN1bHR1cmVzIGFuZCBIZWFsdGggQmVoYXZpb3Vycw0KSW4gdGhpcyB1bml0IHN0dWRlbnRzIHdpbGwgZXhhbWluZSBjdWx0dXJlIGFuZCBkaXZlcnNpdHkgd2l0aGluIGxvY2FsLCBuYXRpb25hbCBhbmQgZ2xvYmFsIEluZGlnZW5vdXMgcG9wdWxhdGlvbnM7IGltcGFjdHMgb2Ygc3BlY2lmaWMgcG9saWNpZXMgYW5kIGhpc3RvcmljYWwgZXZlbnRzIG9uIEluZGlnZW5vdXMgQXVzdHJhbGlhbnMgYW5kIHRoZSBlZmZlY3RzIG9mIHRoZXNlIHBvbGljaWVzIG9uIGhlYWx0aCwgaWxsbmVzcyBhbmQgZGlzYWJpbGl0eSwgYW5kIGhlYWx0aCBjYXJlIGFjY2Vzcy4gQXBwbHlpbmcgdGhlb3JpZXMgb2YgaGVhbHRoIGJlaGF2aW91ciBzdHVkZW50cyB3aWxsIGFuYWx5c2UgaGVhbHRoIG91dGNvbWVzIG9mIEluZGlnZW5vdXMgQXVzdHJhbGlhbnMgYW5kIGV4cGxvcmUgdW5kZXJseWluZyBzb2NpYWwsIGVudmlyb25tZW50YWwsIHBzeWNob2xvZ2ljYWwgYW5kIGJpb2xvZ2ljYWwgZGV0ZXJtaW5hbnRzLiBXaXRoaW4gYSBwcmltYXJ5IGhlYWx0aCBjYXJlIG1vZGVsLCBzdHVkZW50cyB3aWxsIGV4cGxvcmUgaG93IGhlYWx0aCBwcm9mZXNzaW9uYWxzIGNhbiB3b3JrIGludGVyLXByb2Zlc3Npb25hbGx5IGFuZCBpbiBwYXJ0bmVyc2hpcCB3aXRoIEluZGlnZW5vdXMgaW5kaXZpZHVhbHMsIGZhbWlsaWVzLCBjb21tdW5pdGllcyBhbmQgb3JnYW5pc2F0aW9ucy4NCjI1DQpJbnRlcm5hbCxGdWxseSBPbmxpbmUNCkJJT0wxMDA0O0NNSEwxMDAwO05VUlMxMDAwOzMxMzAyNjszMTMzOTQNCg0KSU5ESDEwMDANCjEyDQoNClVOSVQNCkVQSUQxMDAwDQpGb3VuZGF0aW9ucyBvZiBCaW9zdGF0aXN0aWNzIGFuZCBFcGlkZW1pb2xvZ3kNCkZvdW5kYXRpb25zIG9mIEJpb3N0YXRpc3RpY3MgYW5kIEVwaWRlbWlvbG9neSBlbmFibGVzIHN0dWRlbnRzIHRvIGxlYXJuIGNvcmUgc2tpbGxzIGluIGVwaWRlbWlvbG9neSBhbmQgYmlvc3RhdGlzdGljcy4gU3R1ZGVudHMgY3JpdGljYWxseSBhcHByYWlzZSBwdWJsaWMgaGVhbHRoIGFuZCBjbGluaWNhbCBlcGlkZW1pb2xvZ2ljYWwgcmVzZWFyY2ggbGl0ZXJhdHVyZSBhbmQgcGVyZm9ybSBiYXNpYyBzdGF0aXN0aWNhbCBhbmFseXNpcy4gU3R1ZGVudHMgd2lsbCBlbmNvdW50ZXIgYmFzaWMgc3RhdGlzdGljYWwgYW5kIGdyYXBoaWNhbCBkZXNjcmlwdGlvbiBhbmQgYW5hbHlzaXMgb2YgZXBpZGVtaW9sb2dpY2FsIGFuZCBiaW9tZWRpY2FsIGRhdGEgd2l0aCBhcHByb3ByaWF0ZSBncmFwaHMsIHRhYmxlcywgYW5kIHN1bW1hcnkgbWVhc3VyZXM7IHN0YXRpc3RpY2FsIGluZmVyZW5jZSBhbmQgc3RhdGlzdGljYWwgaHlwb3RoZXNpcyB0ZXN0aW5nIGFwcGxpZWQgdG8gcHJvYmxlbXMgaW4gaGVhbHRoIGFuZCBjbGluaWNhbCBtZWRpY2luZSB1c2luZyBwYXJhbWV0cmljIGFuZCBub24tcGFyYW1ldHJpYyB0ZXN0czsgY2FsY3VsYXRpb24gb2YgY29tbW9uIGVwaWRlbWlvbG9naWNhbCBtZWFzdXJlcyBvZiBkaXNlYXNlIGZyZXF1ZW5jeSBhbmQgYXNzb2NpYXRpb24gc3VjaCBhcyBpbmNpZGVuY2UgcmF0ZSwgcHJldmFsZW5jZSwgYXR0cmlidXRhYmxlIHJpc2ssIHJpc2sgcmF0aW9zIGFuZCBvZGRzIHJhdGlvOyByb2xlIGFuZCBzaWduaWZpY2FuY2Ugb2YgaW5mZXJlbnRpYWwgc3RhdGlzdGljcyBzdWNoIGFzIGNvbmZpZGVuY2UgaW50ZXJ2YWxzIGFuZCBwcm9iYWJpbGl0eSB2YWx1ZXMuIFZhcmlvdXMgZXBpZGVtaW9sb2dpY2FsIHJlc2VhcmNoIGRlc2lnbnMgYW5kIHRoZWlyIHN0cmVuZ3RocyBhbmQgbGltaXRhdGlvbnMgYXMgd2VsbCBhcyB0aHJlYXRzIHRvIHRoZSBpbnRlcm5hbCB2YWxpZGl0eTsgcm9sZSBvZiBjaGFuY2UsIGJpYXMgYW5kIGNvbmZvdW5kaW5nIGFyZSBpbmNsdWRlZC4NCjI1DQpJbnRlcm5hbCxGdWxseSBPbmxpbmUNCg0KDQoNCjEyDQoNClVOSVQNCkhVTUIxMDAxDQpJbnRlZ3JhdGVkIFN5c3RlbXMgQW5hdG9teSBhbmQgUGh5c2lvbG9neQ0KQW4gaW50ZWdyYXRlZCBhcHByb2FjaCB0byB0aGUgc3R1ZHkgb2YgYm9keSBzeXN0ZW1zIGNvcnJlbGF0aW5nIHN0cnVjdHVyZSBhbmQgZnVuY3Rpb24gb2YgdGhlIG11c2N1bG9za2VsZXRhbCwgY2FyZGlvdmFzY3VsYXIsIHJlc3BpcmF0b3J5LCBkaWdlc3RpdmUsIHVyaW5hcnkgYW5kIHJlcHJvZHVjdGl2ZSBzeXN0ZW1zIHRvZ2V0aGVyIHdpdGggdGhlaXIgZW5kb2NyaW5lIGFuZCBuZXVyYWwgY29udHJvbC4gU3R1ZGVudHMgd2lsbCBpbnZlc3RpZ2F0ZSB0aGUgaW50ZXJhY3Rpb24gb2YgdGhlc2Ugc3lzdGVtcyBpbiBub3JtYWwgYm9keSBmdW5jdGlvbmluZyBhbmQgaW4gc2VsZWN0ZWQgYWx0ZXJlZCBib2R5IHN0YXRlcy4NCjI1DQpJbnRlcm5hbCxGdWxseSBPbmxpbmUNCkhVTUIxMDAwOzMxMzM5MTsxNjQzOzMwMzE0OTszMTEwMjINCg0KMTY0NA0KMTINCg0KVU5JVA0KR0VORTEwMDANCk1vbGVjdWxhciBHZW5ldGljcyBhbmQgQ2VsbCBCaW9sb2d5DQpJbiB0aGlzIHVuaXQsIHN0dWRlbnRzIHdpbGwgZXhwbG9yZSB0aGUgZnVuZGFtZW50YWwgY29uY2VwdHMgb2YgbW9sZWN1bGFyIGFuZCBjZWxsIGJpb2xvZ3ksIGluY2x1ZGluZyB0aGUgY2VudHJhbCBkb2dtYSwgdHJhZGl0aW9uYWwgTWVuZGVsaWFuLCBhbmQgbW9kZXJuIG1vbGVjdWxhciBnZW5ldGljcy4gVG9waWNzIHdpbGwgaW5jbHVkZSBETkEgc3RydWN0dXJlIGFuZCByZXBsaWNhdGlvbjsgcmVndWxhdGlvbiBvZiBnZW5lIHRyYW5zY3JpcHRpb247IHByb3RlaW4gc3ludGhlc2lzIGFuZCBwb3N0LXRyYW5zbGF0aW9uYWwgbW9kaWZpY2F0aW9uLiBDZWxsIHN0cnVjdHVyZSBhbmQgZnVuY3Rpb24gd2lsbCBhbHNvIGJlIGV4cGxvcmVkLiBUaGUgbGFib3JhdG9yeSBjb21wb25lbnQgYWxsb3dzIHN0dWRlbnRzIHRvIGFjcXVpcmUgc2tpbGxzIHRvIHBlcmZvcm0gZXhwZXJpbWVudHMgaW4gbW9sZWN1bGFyIGFuZCBjZWxsIGJpb2xvZ3kuIFRoaXMgdW5pdCBwcm92aWRlcyB0aGUgYmFja2dyb3VuZCBrbm93bGVkZ2UgbmVjZXNzYXJ5IGZvciBlbnRyeSBpbnRvIHNlY29uZCB5ZWFyIHVuaXRzLg0KMjUNCkludGVybmFsDQpNRURJMTAwMA0KDQoNCjINCg0KTUFKT1INCk1KUlUtSFVNQk0NCkh1bWFuIEJpb21lZGljaW5lDQpUaGlzIG1ham9yL3N0cmVhbSBpcyBwYXJ0IG9mIGEgbGFyZ2VyIGNvdXJzZS4gSW5mb3JtYXRpb24gaXMgc3BlY2lmaWMgdG8gdGhlIG1ham9yL3N0cmVhbSwgcGxlYXNlIHJlZmVyIHRvIHRoZSBjb3Vyc2UgZm9yIG1vcmUgaW5mb3JtYXRpb24uIEJpb21lZGljaW5lIGlzIHRoZSBhcHBsaWNhdGlvbiBvZiBiaW9sb2dpY2FsIGFuZCBwaHlzaW9sb2dpY2FsIHByaW5jaXBsZXMgdG8gY2xpbmljYWwgcHJhY3RpY2UuIEluIHRoaXMgbWFqb3IsIHN0dWRlbnRzIHdpbGwgY29tcGxldGUgc2lnbmlmaWNhbnQgaW50ZWdyYXRlZCBzdHVkeSBpbiBhcHBsaWVkIGh1bWFuIGFuYXRvbXksIHBoeXNpb2xvZ3ksIGFuZCBuZXVyb3NjaWVuY2UuIFN0dWRlbnRzIHdpbGwgZ2FpbiB2YWx1YWJsZSBoYW5kcy1vbiBleHBlcmllbmNlIGluIG91ciBoaWdoLXF1YWxpdHkgbGFib3JhdG9yeSBmYWNpbGl0aWVzIHVzaW5nIGNhZGF2ZXJpYyBzcGVjaW1lbnMgYW5kIHBoeXNpb2xvZ3kgZXF1aXBtZW50LiBUaGUgSHVtYW4gUGF0aG9sb2d5IGV4dGVuc2lvbiBzcGVjaWFsaXNhdGlvbiB3aWxsIGFsbG93IHN0dWRlbnRzIHRvIGV4dGVuZCB0aGVpciBzdHVkaWVzIGludG8gQ2xpbmljYWwgUGF0aG9waHlzaW9sb2d5IGFuZCBOZXVyb3BoeXNpb2xvZ3ksIGFuZCBtb3JlIGJyb2FkbHkgcHJlcGFyZSB0aGVtIGZvciBhIGNhcmVlciBpbiBjbGluaWNhbCBoZWFsdGguc2VydmljZXMuDQoyMDANCkhVTUIyMDEzLEhVTUIyMDE0LEhVTUIyMDExLEhVTUIyMDEyLEVDRVYzMDA0LEhVTUIzMDA5LEJJT0wzMDEwLEhVTUIzMDAzDQoNCg0KVU5JVA0KSFVNQjIwMTMNClRydW5rIEFuYXRvbXkgYW5kIEVtYnJ5b2xvZ3kNCkV4cGxvcmVzIHRoZSByZWxhdGlvbnNoaXBzIGJldHdlZW4gc3RydWN0dXJlLCBmdW5jdGlvbiBhbmQgZW1icnlvbG9naWNhbCBkZXZlbG9wbWVudCBvZiB0aGUgc29tYXRpYyBhbmQgdmlzY2VyYWwgY29tcG9uZW50cyBvZiB0aGUgbmVjaywgdGhvcmF4LCBhYmRvbWVuIGFuZCBwZWx2aXMuDQoyNQ0KSW50ZXJuYWwNCkhVTUIxMDA1O0hVTUIxMDAyO0hVTUIxMDAxO0hVTUIxMDA0DQoNCg0KMQ0KDQpVTklUDQpIVU1CMjAxNA0KVml0YWwgUGh5c2lvbG9neQ0KUGh5c2lvbG9neSBpcyB0aGUgc3R1ZHkgb2YgdGhlIGZ1bmN0aW9ucyBvZiBhbiBvcmdhbmlzbS4gVGhpcyB1bml0IGxvb2tzIGF0IHRoZSBwaHlzaW9sb2dpY2FsIHVuZGVycGlubmluZyBvZiB0aGUgc3VwcGx5IGFuZCByZW1vdmFsIG9mIG94eWdlbiwgd2F0ZXIgYW5kIHdhc3RlIHByb2R1Y3RzIHRvIGFuZCBmcm9tIHRpc3N1ZXMsIGFuZCB0aGUgbWVjaGFuaXNtcyB0aGF0IHJlZ3VsYXRlIHRoZXNlIHdpdGhpbiBob21lb3N0YXRpYyBsaW1pdHMuDQoyNQ0KSW50ZXJuYWwNCkhVTUIxMDAxDQoNCg0KMQ0KDQpVTklUDQpIVU1CMjAxMQ0KTGltYiBBbmF0b215IGFuZCBCaW9tZWNoYW5pY3MNClRoZSB1bml0IGV4cGxvcmVzLCBpbiBkZXRhaWwsIHRoZSBmdW5jdGlvbmFsIGFuYXRvbXkgb2YgdGhlIHVwcGVyIGFuZCBsb3dlciBsaW1iIGFuZCB0aGVpciBhc3NvY2lhdGVkIGdpcmRsZXMuIEFwcGxpY2F0aW9ucyBvZiBhbmF0b21pY2FsIGFuZCBiaW9tZWNoYW5pY2FsIHByaW5jaXBsZXMgaW4gYW5hbHlzaXMgb2YgdXBwZXIgYW5kIGxvd2VyIGxpbWIgZnVuY3Rpb24gYW5kIGR5c2Z1bmN0aW9uIHdpbGwgYWxzbyBiZSBjb3ZlcmVkLg0KMjUNCkludGVybmFsDQpIVU1CMTAwNTtIVU1CMTAwMjtIVU1CMTAwMTtIVU1CMTAwNA0KDQoNCjINCg0KVU5JVA0KSFVNQjIwMTINClBoeXNpb2xvZ2ljYWwgUHJvY2Vzc2VzDQpQaHlzaW9sb2d5IGlzIHRoZSBzdHVkeSBvZiB0aGUgZnVuY3Rpb25zIG9mIGFuIG9yZ2FuaXNtLiBUaGlzIHVuaXQgZXhhbWluZXMgc2V2ZXJhbCBmdW5kYW1lbnRhbCBib2R5IGZ1bmN0aW9ucywgZS5nLiwgYWJzb3JwdGlvbiwgc2VjcmV0aW9uLCBjb21tdW5pY2F0aW9uLCB0cmFuc3BvcnQgYW5kIG1vdmVtZW50LCBmcm9tIGEgcGh5c2lvbG9naWNhbCBwZXJzcGVjdGl2ZS4gVGhlc2UgdGhlbWVzIGFyZSBhZGRyZXNzZWQgd2l0aGluIGZpdmUgbW9kdWxlczogY2VsbHVsYXIgcGh5c2lvbG9neTsgbmVydmUgJiBtdXNjbGUgcGh5c2lvbG9neTsgY2VsbHVsYXIgY29tbXVuaWNhdGlvbjsgZW5kb2NyaW5lIHBoeXNpb2xvZ3kgYW5kIGVuZXJneSBtZXRhYm9saXNtLg0KMjUNCkludGVybmFsDQpIVU1CMTAwMQ0KDQoNCjINCg0KVU5JVA0KRUNFVjMwMDQNCkh1bWFuIEV2b2x1dGlvbg0KRnJvbSB0aGVvcmllcyBvZiBlYXJseSBIb21vIG9yaWdpbnMsIHRvIHRoZSBldm9sdXRpb24gYW5kIG9yaWdpbnMgb2YgbW9kZXJuIGh1bWFucywgd2l0aCBwYXJ0aWN1bGFyIGludGVyZXN0IGluIGFib3JpZ2luYWwgb3JpZ2lucyAoZmlyc3QgcGVvcGxlcyksIHRoaXMgdW5pdCBleHBsb3JlcyB0aGVvcmllcyBvZiBodW1hbiBldm9sdXRpb24sIHByZWhpc3RvcnksIHByaW1hdGUgY2hhcmFjdGVyaXN0aWNzIGFuZCBmb3NzaWwgcmVjb3Jkcy4gTGFib3JhdG9yeSB3b3JrIHJlbGF0ZXMgdG8gdGhlIG1ldGhvZG9sb2d5IG9mIHBoeXNpY2FsIGFudGhyb3BvbG9neSwgY29tcGFyYXRpdmUgYW5hdG9teSwgdGhlIGFuYWx5c2lzIG9mIGJvbmUsIHRlZXRoIGFuZCBzdG9uZSB0b29scy4gTWV0aG9kcyBvZiBwaHlsb2dlbmV0aWMgYW5hbHlzaXMsIGluY2x1ZGluZyBOdW1lcmljYWwgVGF4b25vbXkgYW5kIENsYWRpc3RpY3MgdXNpbmcgY29tcHV0ZXIgc29mdHdhcmUgYXJlIHV0aWxpc2VkIGluIHRoaXMgdW5pdC4gU3R1ZGVudHMgd2lsbCBkZXZlbG9wIGNvbXBldGVuY2UgaW4gZXh0cmFjdGluZyBtYXhpbXVtIGluZm9ybWF0aW9uIGZyb20gbWluaW1hbCB0cmFjZXMsIGFuZCBkZXZlbG9waW5nIGEgY3JpdGljYWwgYXBwcm9hY2ggdG8gbWFraW5nIGluZmVyZW5jZXMuIFBhbGVvbnRvbG9naWNhbCBwZXJzcGVjdGl2ZXMgYXJlIGNvdmVyZWQuDQoyNQ0KSW50ZXJuYWwNCkhVTUIyMDAyO0hVTUIyMDExO0hVTUIyMDEzDQoNCg0KMQ0KDQpVTklUDQpIVU1CMjAwMg0KQW5hdG9teSBvZiB0aGUgTGltYnMNCkFuYXRvbXkgb2YgdGhlIExpbWJzIGV4cGxvcmVzIHRoZSBwcmluY2lwbGVzIG9mIGJpb21lY2hhbmljczogc3BlY2lmaWNhbGx5IGxldmVycywgdG9ycXVlcywgZm9yY2UgdmVjdG9ycyBhbmQgY2VudHJlIG9mIGdyYXZpdHksIGFzIHJlbGF0ZWQgdG8gdGhlIGh1bWFuIGJvZHkuIFRoZSB1bml0IGV4cGxvcmVzLCBpbiBkZXRhaWwsIHRoZSBmdW5jdGlvbmFsIGFuYXRvbXkgb2YgdGhlIHVwcGVyIGFuZCBsb3dlciBsaW1iIGFuZCB0aGVpciBhc3NvY2lhdGVkIGdpcmRsZXMuIEFwcGxpY2F0aW9ucyBvZiBhbmF0b21pY2FsIGFuZCBiaW9tZWNoYW5pY2FsIHByaW5jaXBsZXMgaW4gYW5hbHlzaXMgb2YgdXBwZXIgYW5kIGxvd2VyIGxpbWIgZnVuY3Rpb24gYW5kIGR5c2Z1bmN0aW9uIHdpbGwgYWxzbyBiZSBjb3ZlcmVkLg0KMjUNCkludGVybmFsDQpIVU1CMTAwMjtIVU1CMTAwMTsxNjQ0OzMxMzQwMTszMTMzOTkNCg0KDQoxDQoNClVOSVQNCkhVTUIzMDA5DQpOZXVyb2FuYXRvbXkNCkdyb3NzIG9yZ2FuaXNhdGlvbiBvZiB0aGUgaHVtYW4gYnJhaW4gaW4gcmVsYXRpb24gdG8gaXRzIGVtYnJ5b2xvZ2ljYWwgZGV2ZWxvcG1lbnQ7IEZ1bmN0aW9uYWwgYW5hdG9teSBvZiB0aGUgbXVzY3Vsb3NrZWxldGFsIHN0cnVjdHVyZXMsIHZpc2NlcmEgYW5kIG5lcnZlcyBvZiB0aGUgY3Jhbml1bTsgSW52ZXN0aWdhdGlvbiBvZiB0aGUgbmV1cmFsIHN5c3RlbXMgdGhhdCBzZXJ2ZSB0aGUgc2Vuc2VzIGFuZCBjb21tYW5kIHZvbHVudGFyeSBtb3ZlbWVudDsgSG93IGNoYW5nZXMgdG8gdGhlIGludGVybmFsIGFuZCBleHRlcm5hbCBlbnZpcm9ubWVudCBpbmZsdWVuY2VzIHRoZSBicmFpbjsgRXhwbG9yYXRpb24gb2YgdGhlIG5ldXJvYmlvbG9neSBvZiBodW1hbiBiZWhhdmlvdXIuIEludGVncmF0aW9uIG9mIHRoZSByb2xlIG9mIHN0cnVjdHVyZXMgb2YgdGhlIGhlYWQgd2l0aCBodW1hbiBkZXZlbG9wbWVudCBhbmQgc3Vydml2YWwuIE5ldXJvdmFzY3VsYXIgYW5kIG11c2N1bG9za2VsZXRhbCBjb21wb25lbnRzIG9mIHRoZSBoZWFkIGFyZSBleHBsb3JlZCwgd2l0aCByZWZlcmVuY2UgdG8gZnVuY3Rpb25hbCBjb250cm9sIG1lY2hhbmlzbXMuDQoyNQ0KSW50ZXJuYWwNCkhVTUIxMDA1O0hVTUIxMDAyO0hVTUIxMDAxO0hVTUIxMDA0DQoNCg0KMg0KDQpVTklUDQpCSU9MMzAxMA0KQmlvc2NpZW5jZXMgUmVzZWFyY2ggUHJvamVjdA0KSW4gdGhpcyB1bml0IHN0dWRlbnRzIHdpbGwgYmUgcHJvdmlkZWQgd2l0aCBhbiBpbnRyb2R1Y3Rpb24gdG8gcmVzZWFyY2ggd2l0aGluIHRoZSBCaW9zY2llbmNlcy4gVGhlIHVuaXQgd2lsbCBmb2N1cyBvbiB0aGUgcGhpbG9zb3BoeSBvZiBzY2llbmNlLCByZXNlYXJjaCBkZXNpZ24sIGV0aGljYWwgY29uZHVjdCwgY3JpdGljYWwgYW5hbHlzaXMgb2YgdGhlIHJlbGV2YW50IHNjaWVudGlmaWMgbGl0ZXJhdHVyZSB0byBkZXZlbG9wIGEgbGl0ZXJhdHVyZSByZXZpZXcsIGh5cG90aGVzaXMgYW5kIGFpbXMsIGRhdGEgY29sbGVjdGlvbiBhbmQgYW5hbHlzaXMgYW5kIHJlcG9ydGluZy4NCjI1DQpJbnRlcm5hbA0KSFVNQjMwMDk7R0VORTMwMDANCg0KDQoyDQoNClVOSVQNCkhVTUIzMDAzDQpOZXVyb3NjaWVuY2UNCk5lcnZvdXMgc3lzdGVtIGRldmVsb3BtZW50LCBvdmVydmlldywgcGxhc3RpY2l0eSwgYmxvb2Qgc3VwcGx5LCBtZW5pbmdlcywgQ1NGLCByZWNlcHRvcnMsIHNvbWF0b3NlbnNhdGlvbiwgdmlzdWFsLCBhdWRpdG9yeSB2ZXN0aWJ1bGFyIHBlcmNlcHRpb24sIGNvcnRpY2FsLCBjZXJlYmVsbGFyIGFuZCBicmFpbnN0ZW0gY29udHJvbCBvZiBtb3ZlbWVudC4gSHlwb3RoYWxhbXVzIHN0cnVjdHVyZSBhbmQgcm9sZSB3aXRoIGF1dG9ub21pYyBuZXJ2b3VzIHN5c3RlbSBmdW5jdGlvbiwgY29udHJvbCBhbmQgaW50ZXJhY3Rpb24gd2l0aCBjZXJlYnJhbCBmdW5jdGlvbi4gVGhlIHJvbGUgb2YgdGhlIGxpbWJpYyBzeXN0ZW0gaW4gZW1vdGlvbiwgbGVhcm5pbmcgYW5kIG1lbW9yeS4gQmVoYXZpb3VyLCBzbGVlcCAmIGRyZWFtaW5nLCBodW5nZXIgJiB0aGlyc3QuDQoyNQ0KSW50ZXJuYWwNCkhVTUIyMDAwO0hVTUIzMDA5OzMxNDIzNg0KDQoNCjEyDQoNCk1BSk9SDQpNSlJVLU1PTEdODQpNb2xlY3VsYXIgR2VuZXRpY3MNCk1vbGVjdWxhciBHZW5ldGljcyBpcyBhIHJhcGlkbHkgYWR2YW5jaW5nIGFuZCBleGNpdGluZyBkaXNjaXBsaW5lIGZvciB0aGUgMjFzdCBjZW50dXJ5LiBJbiB0aGlzIG1ham9yLCBzdHVkZW50cyB3aWxsIGxlYXJuIGFib3V0IHVuaXZlcnNhbCBwcmluY2lwbGVzIGFuZCBuZXcgYWR2YW5jZXMgaW4gZ2VuZXRpY3MgYW5kIGdlbm9taWNzLCBhbmQgaG93IHRoZXNlIGNhbiBiZSBhcHBsaWVkIHRvIGltcHJvdmUgaGVhbHRoIG91dGNvbWVzLiBBcmVhcyBvZiBzdHVkeSB3aWxsIGluY2x1ZGUgbW9sZWN1bGFyIGJpb2xvZ3ksIGh1bWFuIGdlbmV0aWMgZGlzZWFzZSwgYmlvaW5mb3JtYXRpY3MgYW5kIGdlbmV0aWMgZW5naW5lZXJpbmcuIFN0dWRlbnRzIHdpbGwgYWxzbyBiZSBpbnRyb2R1Y2VkIHRvIGN1dHRpbmctZWRnZSB0ZWNobm9sb2d5IGZvciBtb2xlY3VsYXIgYW5kIGdlbmV0aWMgYW5hbHlzZXMuIFRocm91Z2ggYSBjb21iaW5hdGlvbiBvZiB0aGVvcmV0aWNhbCBhbmQgcHJhY3RpY2FsIGxhYm9yYXRvcnkgdHJhaW5pbmcsIHN0dWRlbnRzIHdpbGwgYWNxdWlyZSBhIHRob3JvdWdoIHVuZGVyc3RhbmRpbmcgb2YgbW9sZWN1bGFyIGdlbmV0aWNzIGFuZCBhbHNvIGRldmVsb3Agc2tpbGxzIGluIGNyaXRpY2FsIHRoaW5raW5nIGFuZCBzY2llbnRpZmljIGNvbW11bmljYXRpb24uIFRoaXMgY291cnNlIHdpbGwgcHJlcGFyZSBzdHVkZW50cyBmb3IgYSBjYXJlZXIgb3IgZnVydGhlciBzdHVkeSBpbiB0aGUgYmlvbWVkaWNhbCBzY2llbmNlcy4NCjIwMA0KQkNDQjIwMDAsTUVESTIwMTAsQklPTDIwMDEsR0VORTIwMDEsR0VORTMwMDAsR0VORTMwMDIsQklPTDMwMTAsQklPTDMwMTENCg0KU1BVQy1IVU1HTg0KVU5JVA0KQkNDQjIwMDANCkZvdW5kYXRpb25zIG9mIEJpb2NoZW1pc3RyeQ0KVGhpcyB1bml0IGNvdmVycyBib3RoIHRoZW9yZXRpY2FsIGFuZCBwcmFjdGljYWwgYXNwZWN0cyBvZiBiaW9jaGVtaXN0cnkuIFN0cnVjdHVyZSBhbmQgcHJvcGVydGllcyBvZiB3YXRlci4gQ29uY2VwdHMgb2YgcEgsIHBLIGFuZCBidWZmZXJzLiBNb2xlY3VsYXIgc3RydWN0dXJlIGFuZCBjaGVtaWNhbCBib25kcy4gUHJvcGVydGllcywgc3RydWN0dXJlcyBhbmQgZnVuY3Rpb25zIG9mIGFtaW5vIGFjaWRzLCBsaXBpZHMsIGNhcmJvaHlkcmF0ZXMgYW5kIG51Y2xlaWMgYWNpZHMuIFN0cnVjdHVyZSBhbmQgZnVuY3Rpb24gb2YgZ2xvYnVsYXIgYW5kIGZpYnJvdXMgcHJvdGVpbnMuIENvbmNlcHRzIGFuZCBwcm9wZXJ0aWVzIG9mIGVuenltZXMgaW5jbHVkaW5nIGVuenltZSBraW5ldGljcy4gT3ZlcnZpZXcgYW5kIGNvbmNlcHRzIG9mIGJpb2xvZ2ljYWwgdGhlcm1vZHluYW1pY3MsIGVuZXJneSBtZXRhYm9saXNtIGFuZCBtZXRhYm9saWMgcGF0aHdheXMuIEludGVybWVkaWFyeSBtZXRhYm9saXNtIGluY2x1ZGluZyBtZXRhYm9saWMgcGF0aHdheXMgb2YgZ2x5Y29seXNpcywgY2l0cmljIGFjaWQgY3ljbGUsIHBlbnRvc2UgcGhvc3BoYXRlIHBhdGh3YXksIGdsdWNvbmVvZ2VuZXNpcywgYW1pbm8gYWNpZCBtZXRhYm9saXNtLCBmYXR0eSBhY2lkIG1ldGFib2xpc20sIGtldG9uZSBib2R5IG1ldGFib2xpc20sIG94aWRhdGl2ZSBwaG9zcGhvcnlsYXRpb24gYW5kIGVsZWN0cm9uIHRyYW5zcG9ydC4gTW9sZWN1bGFyIHZpc3VhbGlzYXRpb24gb2YgcHJvdGVpbnMuIFByYWN0aWNhbCBza2lsbHMgYW5kIHRlY2huaXF1ZXMuIFVzaW5nIHNjaWVudGlmaWMgaW5zdHJ1bWVudHMgYW5kIGFuYWx5c2luZyBzY2llbnRpZmljIGRhdGEuDQoyNQ0KSW50ZXJuYWwNCkNIRU0xMDAxO0NIRU0xMDA3O0NIRU0xMDAzO0NIRU0xMDAyDQoNCg0KMQ0KDQpVTklUDQpNRURJMjAxMA0KTW9sZWN1bGFyIEN5dG9nZW5ldGljcyBhbmQgRGlhZ25vc3RpY3MNClN0dWRlbnRzIHdpbGwgbGVhcm4gYmFzaWMgaWRlbnRpZmljYXRpb24gb2YgYWxsIGNocm9tb3NvbWVzIGluIHRoZSBodW1hbiBnZW5vbWUsIGxhYm9yYXRvcnkgdGVjaG5pcXVlcyBmb3IgY3VsdHVyZSBhbmQgcHJlcGFyYXRpb24gb2YgaHVtYW4gdGlzc3VlcyBmb3IgY3l0b2dlbmV0aWMgc3R1ZGllcywgYW5kIG1ldGhvZHMgdXNlZCB0byBpZGVudGlmeSBhbmQgYW5hbHlzZSBtb2xlY3VsYXIgYW5kIGN5dG9nZW5ldGljIGFsdGVyYXRpb25zLiBJbiBhZGRpdGlvbiwgc3R1ZGVudHMgd2lsbCBsZWFybiBhYm91dCBtb2xlY3VsYXIgYW5kIGN5dG9nZW5ldGljIG1lY2hhbmlzbXMgb2YgZGlzZWFzZSBleHByZXNzaW9uLCBhbmQgaG93IHRoZXNlIHJlbGF0ZSB0byBjbGluaWNhbCBwaGVub3R5cGUuIE1vbGVjdWxhciBhbmQgY3l0b2dlbmV0aWMgY2hhbmdlcyBpbiBjYW5jZXIgd2lsbCBhbHNvIGJlIGRpc2N1c3NlZC4NCjI1DQpJbnRlcm5hbA0KTUVESTEwMDAsSFVNQjEwMDENCg0KDQoxDQoNClVOSVQNCkJJT0wyMDAxDQpJbnRyb2R1Y3Rpb24gdG8gQmlvaW5mb3JtYXRpY3MNCkluIHRoaXMgdW5pdCBzdHVkZW50cyB3aWxsIGxlYXJuIHRvIHNvdXJjZSBhbmQgaW50ZXJwcmV0IGdlbmV0aWMgYW5kIGdlbm9taWMgZGF0YSB1c2luZyBvbmxpbmUgZGF0YWJhc2VzIGFuZCBzcGVjaWFsaXN0IHNvZnR3YXJlLg0KMjUNCkludGVybmFsDQpHRU5FMTAwMA0KDQoNCjINCg0KVU5JVA0KR0VORTIwMDENClBvcHVsYXRpb24gR2VuZXRpY3MgYW5kIE1vbGVjdWxhciBFdm9sdXRpb24NClRoaXMgdW5pdCBmb2N1c2VzIG9uIHRoZSBmb2xsb3dpbmcgdG9waWNzOiBhbmFseXNpcyBvZiBldm9sdXRpb25hcnkgcHJvY2Vzc2VzLCBzZWxlY3Rpb24sIG11dGF0aW9uLCBtaWdyYXRpb24gYW5kIG1vbGVjdWxhciBhc3BlY3RzIG9mIGV2b2x1dGlvbi4gR2VuZSBmbG93IGluIHBvcHVsYXRpb25zIGFuZCBpbnRyb2R1Y3RvcnkgcG9wdWxhdGlvbiBnZW5ldGljcy4gQXBwbGljYXRpb25zIG9mIHBvcHVsYXRpb24gYW5kIG1vbGVjdWxhciBnZW5ldGljcyB0byBodW1hbiBpZGVudGlmaWNhdGlvbiBieSBETkEgcHJvZmlsaW5nIGFuZCBkaWFnbm9zaXMgb2Ygc29tZSBpbmhlcml0ZWQgZGlzb3JkZXJzLg0KMjUNCkludGVybmFsDQpHRU5FMjAwMDtHRU5FMTAwMDszMTE0MjA7R0VORTIwMDI7MzE0MDAwDQoNCg0KMg0KDQpVTklUDQpHRU5FMzAwMA0KR2VuZXRpYyBFbmdpbmVlcmluZw0KU3R1ZGVudHMgd2lsbCBiZSBpbnRyb2R1Y2VkIHRvIGJvdGggdGhlb3JldGljYWwgYW5kIHByYWN0aWNhbCBhc3BlY3RzIG9mIG1vbGVjdWxhciBnZW5ldGljcyB3aXRoIGEga2V5IGZvY3VzIG9uIG51Y2xlaSBhY2lkIGJhc2VkIHRlY2hub2xvZ2llcy4gU3R1ZGVudHMgd2lsbCBzdHVkeSB0aGUgcHJpbmNpcGxlcyBhbmQgYXBwbGljYXRpb25zIG9mOiBlbnp5bWVzIGFuZCBjbG9uaW5nIHZlY3RvcnMsIHNvdXRoZXJuIGJsb3R0aW5nLCBwb2x5bWVyYXNlIGNoYWluIHJlYWN0aW9uIChQQ1IpLCBnZW5ldGljIGxpYnJhcmllcywgRE5BIGNsb25lcyBhbmQgc2VxdWVuY2luZywgYW5kIHRoZSB1c2Ugb2YgcmFkaW9hY3RpdmUgc3Vic3RhbmNlcy4gSW4gYWRkaXRpb24sIHN0dWRlbnRzIHdpbGwgcGVyZm9ybSBhIHJhbmdlIG9mIG1hdGhlbWF0aWNhbCBjYWxjdWxhdGlvbnMgcmVsYXRlZCB0byB0aGUgbWFuaXB1bGF0aW9uIGFuZCBpbnRlcnByZXRhdGlvbiBvZiBsYWJvcmF0b3J5IGRhdGEuDQoyNQ0KSW50ZXJuYWwNCkdFTkUyMDAwO0dFTkUxMDAwOzMwMjQ4ODszMTE0MjANCg0KDQoxDQoNClVOSVQNCkdFTkUzMDAyDQpIdW1hbiBHZW5ldGljIERpc2Vhc2UNCkluIHRoaXMgdW5pdCBzdHVkZW50cyB3aWxsIHVuZGVyc3RhbmQgdGhlIG1vbGVjdWxhciBiYXNpcyBmb3IgSHVtYW4gZ2VuZXRpYyBkaXNlYXNlcyBhbmQgdHJhaXRzLiBUaGlzIHdpbGwgaW5jbHVkZSBhbiB1bmRlcnN0YW5kaW5nIG9mIGJvdGggTWVuZGVsaWFuIGFuZCBub24gTWVuZGVsaWFuIGdlbmV0aWMgZGlzZWFzZXMsIGNvbXBsZXggZGlzZWFzZXMsIGRpc2Vhc2VzIGNhdXNlZCBieSBlcGlnZW5ldGljIGNoYW5nZXMsIHJpc2sgYW5kIGVudmlyb25tZW50YWwgZmFjdG9ycyBhZmZlY3RpbmcgaHVtYW4gZGlzZWFzZSBwcm9ncmVzc2lvbiBhbmQgdGhlIG1ldGhvZHMgb2YgaW50ZXJwcmV0aW5nIHZhcmlhbnRzIGFzIGEga2V5IG1lbWJlciBvZiBhIG11bHRpZGlzY2lwbGluYXJ5IHRlYW0uDQoyNQ0KRnVsbHkgT25saW5lDQpHRU5FMTAwMA0KDQoNCjENCg0KVU5JVA0KQklPTDMwMTENClByb3RlaW4gU3RydWN0dXJlIGFuZCBJbnRlcmFjdGlvbnMNClRoaXMgdW5pdCBlbXBoYXNpc2VzIHByb3RlaW4gc3RydWN0dXJlLCBkeW5hbWljcyBhbmQgaW50ZXJhY3Rpb25zLiBUaGlzIHVuaXQgZXhwbG9yZXMgdG9waWNzIHN1Y2ggYXMgYmlvbW9sZWN1bGFyIGludGVyYWN0aW9ucywgaGllcmFyY2h5IG9mIHByb3RlaW4gc3RydWN0dXJlcywgZXhwZXJpbWVudGFsIGFuZCB0aGVvcmV0aWNhbCBtZXRob2RzIHRvIHN0dWR5IHByb3RlaW4gc3RydWN0dXJlIGFuZCBpbnRlcmFjdGlvbnMsIG1vbGVjdWxhciBtb2RlbGxpbmcgb2YgcHJvdGVpbiBzdHJ1Y3R1cmUgYW5kIGludGVyYWN0aW9ucyAsIHByb3RlaW4gZm9sZGluZywgdmlzdWFsaXNhdGlvbiBvZiBwcm90ZWluIHN0cnVjdHVyZS4gVGhpcyBlbXBoYXNpcyBvbiBwcm90ZWluIHN0cnVjdHVyZSBhbmQgaW50ZXJhY3Rpb25zIHJlZmxlY3RzIHRoZSBjcnVjaWFsIGltcG9ydGFuY2Ugb2YgcHJvdGVpbnMgdG8gbGlmZS4NCjI1DQpJbnRlcm5hbA0KQkNDQjIwMDAsQklPTDIwMDENCg0KDQoyDQoNCk1BSk9SDQpNSlJVLVBIQ09MDQpQaGFybWFjb2xvZ3kNClBoYXJtYWNvbG9neSBleHBsb3JlcyB0aGUgZWZmZWN0cyBvZiBkcnVncyBvbiBsaXZpbmcgb3JnYW5pc21zLiBBbiBpbi1kZXB0aCB1bmRlcnN0YW5kaW5nIG9mIHBoYXJtYWNvbG9naWNhbCBwcmluY2lwbGVzIGlzIGVzc2VudGlhbCB0byB0aGUgc2FmZSBhbmQgZWZmZWN0aXZlIGFwcGxpY2F0aW9uIG9mIG1lZGljaW5lcyBhaW1lZCB0byBwcmV2ZW50IG9yIHRyZWF0IGRpc2Vhc2UuIEl0IGlzIHRoZSBjb3JuZXJzdG9uZSBmb3IgYSBjYXJlZXIgaW4gZHJ1ZyBkaXNjb3ZlcnkgYW5kIGRldmVsb3BtZW50LCBhbmQgaXMgaGlnaGx5IGNvbXBsZW1lbnRhcnkgdG8gdGhvc2UgcGxhbm5pbmcgb24gYSBjYXJlZXIgaW4gYmlvbWVkaWNhbCBzY2llbmNlcy4gSW4gdGhpcyBtYWpvciwgc3R1ZGVudHMgd2lsbCBsZWFybiBob3cgZHJ1Z3MgdGFyZ2V0IHNwZWNpZmljIHJlY2VwdG9ycyBpbiB0aXNzdWVzIGFuZCBleHBsb3JlIHRoZSBtYWpvciBiaW9jaGVtaWNhbCBwYXRod2F5cyB0aGF0IGFyZSBhY3RpdmF0ZWQuIE90aGVyIHRvcGljcyBpbmNsdWRlIGRvc2UtcmVzcG9uc2UgcmVsYXRpb25zaGlwLCB0b3hpY2l0eSwgZHJ1ZyBtZXRhYm9saXNtIGFuZCBlbGltaW5hdGlvbiwgZHJ1ZyBkZXNpZ24gYW5kIGRldmVsb3BtZW50LCBhbmQgaG93IGdlbmV0aWMgdmFyaWF0aW9uIGJldHdlZW4gcG9wdWxhdGlvbnMgaW5mbHVlbmNlcyBkcnVnIHJlc3BvbnNlLiBXaXRoIHRoZSBpbmNyZWFzZWQgZ2xvYmFsIGNoYWxsZW5nZSB0byBkZXZlbG9wIG5ldyBkcnVncyBhZ2FpbnN0IGluZmVjdGlvdXMgYWdlbnRzLCBhbiBlbXBoYXNpcyBpcyBwbGFjZWQgb24gdGhlIHVuZGVyc3RhbmRpbmcgb2YgZHJ1ZyBhY3Rpb24gYWdhaW5zdCBtaWNyb29yZ2FuaXNtcy4gVGhlb3JldGljYWwga25vd2xlZGdlIGlzIHVuZGVycGlubmVkIHRocm91Z2ggY29tcHV0ZXItYmFzZWQgc2ltdWxhdGlvbnMgYW5kIGhhbmRzLW9uIGxhYm9yYXRvcmllcyBjb3ZlcmluZyBtb2xlY3VsYXIsIGNlbGx1bGFyIGFuZCBwaHlzaW9sb2dpY2FsIHJlc3BvbnNlcywgYW5kIG1vZGVybiBkcnVnIGFuYWx5c2lzIHRlY2huaXF1ZXMuDQoyMDANCkJDQ0IyMDAwLFBIUk0yMDA1LENIRU0xMDA2LFBIUk0yMDA2LElNRUQzMDA5LElNRUQzMDEwLElNRUQzMDA4LFBIUk0zMDA1DQoNClNQVUMtUEhDT0wNClVOSVQNClBIUk0yMDA1DQpGb3VuZGF0aW9ucyBpbiBQaGFybWFjb2xvZ3kNClRoaXMgdW5pdCBpcyBkZWxpdmVyZWQgaW4gNSBtb2R1bGVzIGRlc2lnbmVkIHRvIGludHJvZHVjZSBzdHVkZW50cyB0byB0aGUgZGlzY2lwbGluZSBvZiBwaGFybWFjb2xvZ3kgYW5kIHRoZSBwaGFybWFjZXV0aWNhbCBpbmR1c3RyeSBhbmQgcHJvdmlkZXMgdW5kZXJzdGFuZGluZyBhYm91dCBwYXRob2dlbmljIG1pY3Jvb3JnYW5pc21zLCB0aGUgZGlzZWFzZXMgdGhleSBjYXVzZSBhbmQgcmVzcG9uc2VzIG9mIHRoZSBodW1hbiBpbW11bmUgc3lzdGVtLiBUaHJvdWdoIHRoZSBtb2R1bGVzIHRoZSBkcnVnIGRpc2NvdmVyeSBwcm9jZXNzIGlzIGV4cGxvcmVkLCBoaWdobGlnaHRpbmcgdGhlIGtleSByb2xlIHRoZSBwaGFybWFjZXV0aWNhbCBpbmR1c3RyeSBwbGF5cyBpbiB0aGlzIHByb2Nlc3MgaW5jbHVkaW5nIHByb21pbmVudCBnbG9iYWwgZXRoaWNhbCBpc3N1ZXMuIEtleSBpbW11bm9sb2dpY2FsIG1lY2hhbmlzbXMgdGhhdCBzdG9wIG1pY3JvYmlhbCBpbnZhc2lvbiBhbmQgcmVtb3ZhbCBhcmUgcHJlc2VudGVkIHdpdGhpbiB0aGUgY29udGV4dCBvZiBtaWNyb2JpYWwgcGF0aG9nZW5lc2lzIGFuZCBzdXJ2aXZhbCBzdHJhdGVnaWVzLiBGaW5hbGx5LCBkaXNlYXNlcyBvZiBsb2NhbCBhbmQgZ2xvYmFsIGltcG9ydGFuY2UgYXJlIGRpc2N1c3NlZCBhbG9uZyB3aXRoIHRoZSBwYXRob2dlbnMgdGhhdCBjYXVzZSB0aGVtLg0KMjUNCkludGVybmFsDQpNRURJMTAwMA0KDQoNCjENCg0KVU5JVA0KQ0hFTTEwMDYNClBoYXJtYWNldXRpY2FsIENoZW1pc3RyeQ0KVGhpcyB1bml0IHByb3ZpZGVzIGFuIGludHJvZHVjdGlvbiB0byBjb3JlIGNvbmNlcHRzIHdpdGhpbiBwaGFybWFjZXV0aWNhbCBjaGVtaXN0cnkuIFN0dWRlbnRzIHdpbGwgYmUgaW50cm9kdWNlZCB0byB0aGUgcHJpbmNpcGFsIGxhYm9yYXRvcnkgdGVjaG5pcXVlcyB1c2VkIGZvciBkcnVnIGFuYWx5c2lzIGFuZCBsZWFybiBhYm91dCBhIHJhbmdlIG9mIHBoeXNpby1jaGVtaWNhbCBkcnVnIHByb3BlcnRpZXMgd2hpY2ggaW5mbHVlbmNlIHRoZWlyIHBoYXJtYWNldXRpY2FsIGZvcm11bGF0aW9uLCBwaGFybWFjb2xvZ3kgYW5kIGNsaW5pY2FsIHVzZS4gIFRoaXMgdW5pdCBpcyBkaXZpZGVkIGludG8gdHdvIGxlYXJuaW5nIG1vZHVsZXMuIE1vZHVsZSAxOiBUaXRyaW1ldHJpYyBhbmFseXNpcyBvZiBkcnVncywgc3BlY3Ryb3Bob3RvbWV0cmljIGFuYWx5c2lzIG9mIGRydWdzLCBjaHJvbWF0b2dyYXBoaWMgYW5hbHlzaXMgb2YgZHJ1Z3MsIGFuYWx5c2lzIG9mIGRydWcgZm9ybXVsYXRpb25zLiBNb2R1bGUgMjogS2V5IGZ1bmN0aW9uYWwgZ3JvdXBzIGluIGRydWdzLCBkcnVnIGlvbmlzYXRpb24sIGRydWcgc29sdWJpbGl0eSwgZHJ1ZyBzdGVyZW9jaGVtaXN0cnksIGRydWcgc3RhYmlsaXR5Lg0KMjUNCkludGVybmFsDQpCQ0NCMjAwMA0KDQoNCjINCg0KVU5JVA0KUEhSTTIwMDYNClBoYXJtYWNvbG9neSBQcmluY2lwbGVzDQpUaGlzIHVuaXQgb2YgbGVhcm5pbmcgaW50cm9kdWNlcyBzdHVkZW50cyB0byBlc3NlbnRpYWwgcHJpbmNpcGxlcyBhbmQgY29uY2VwdHMgaW4gdGhlIGRpc2NpcGxpbmUgb2YgcGhhcm1hY29sb2d5OyB0aGUgZmllbGQgb2YgaW5xdWlyeSBkZWFsaW5nIHdpdGggdGhlIGFjdGlvbiBvZiBkcnVncyBvbiB0aGUgaHVtYW4gYm9keS4gVG9waWNzIHRoYXQgYXJlIGNvdmVyZWQgZm9jdXMgb24gZHJ1ZyBhY3Rpb24gYW5kIGhvdyB0aGUgYm9keSBtZXRhYm9saXNlcyBhbmQgZXhjcmV0ZXMgdGhlbTogbW9sZWN1bGFyIG1lY2hhbmlzbXMgb2YgZHJ1ZyBhY3Rpb24gb24gY2VsbHVsYXIgY29tcG9uZW50cywgYWxzbyBjYWxsZWQgcGhhcm1hY29keW5hbWljczsgcHJpbmNpcGxlcywgYXBwbGljYXRpb25zIGFuZCBjYWxjdWxhdGlvbiBza2lsbHMgb2YgZHJ1ZyBhYnNvcnB0aW9uLCBkaXN0cmlidXRpb24gYW5kIGVsaW1pbmF0aW9uLCBjb2xsZWN0aXZlbHkgY2FsbGVkIHBoYXJtYWNva2luZXRpY3M7IGRydWcgdG94aWNpdHkgYW5kIGFuIGludHJvZHVjdGlvbiB0byBwaGFybWFjb2dlbm9taWNzLiBUaGlzIGZvcm1hdGl2ZSBtYXRlcmlhbCwgd2hpbGUgaW50cm9kdWNpbmcgc3R1ZGVudHMgdG8gdGhlIHNjaWVuY2Ugb2YgZHJ1Z3MgYW5kIG1lZGljaW5lcywgZW1waGFzaXNlcyBjb21tb24gbWVjaGFuaXNtcywgcHJvY2Vzc2VzIGFuZCBjb25jZXB0cyByYXRoZXIgdGhhbiBkZXNjcmliaW5nIHRoZSBjb21wbGV4IHByb3BlcnRpZXMgb2YgZHJ1Z3MgdXNlZCBhbmQgYWJ1c2VkIGluIHRvZGF5J3Mgc29jaWV0eS4NCjI1DQpJbnRlcm5hbA0KUEhSTTIwMDUNCg0KDQoyDQoNClVOSVQNCklNRUQzMDA5DQpQaGFybWFjb2xvZ3kgb2YgQW50aW1pY3JvYmlhbCBBZ2VudHMNClRoaXMgdW5pdCBjb21tdW5pY2F0ZXMgdGhlIHByaW5jaXBsZXMgb2YgYW50aW1pY3JvYmlhbCBhY3Rpb24gYW5kIHRyZWF0bWVudCwgaXRzIHBsYWNlIGluIG1lZGljaW5lLCB3aXRoIGNvbnNpZGVyYXRpb25zIHJlbGV2YW50IHRvIGVmZmVjdGl2ZSBhbnRpbWljcm9iaWFsIGFnZW50IHVzZSBhbmQgbWVjaGFuaXNtcyBvZiBhbnRpbWljcm9iaWFsIHJlc2lzdGFuY2UuIFN0dWRlbnRzIGludmVzdGlnYXRlIG1lY2hhbmlzbXMgb2YgYWN0aW9uLCBzcGVjdHJ1bSwgcGhhcm1hY29raW5ldGljcywgYWR2ZXJzZSByZWFjdGlvbnMgYW5kIGRydWcgaW50ZXJhY3Rpb25zIG9mIGFudGltaWNyb2JpYWwgYWdlbnRzLiBUaGUgdW5pdCBpbnRyb2R1Y2VzIHN0dWRlbnRzIHRvIHRoZSBzY29wZSBvZiBhbnRpbWljcm9iaWFsIGNoZW1vdGhlcmFweSBhbmQgY29uc2lkZXJzIGFudGltaWNyb2JpYWwgdHJlYXRtZW50IHRvIGEgcmFuZ2Ugb2YgbG9jYWwgYW5kIGdsb2JhbGx5IHJlbGV2YW50IGluZmVjdGlvbnMuIENvcmUgdW5pdCBjb25jZXB0cyBpbmNsdWRlIGNsYXNzaWZpY2F0aW9uIG9mIGFudGliaW90aWNzLCB0aGVpciBkcnVnIGFjdGlvbiBhbmQgcHJpbmNpcGxlcyBvZiBzZWxlY3RpdmUgdG94aWNpdHkuDQoyNQ0KRnVsbHkgT25saW5lDQpQSFJNMjAwNTtQSFJNMjAwNTtNRURJMjAwMCxNRURJMjAwOTtNRURJMjAwMCxNSUNCMjAwMQ0KDQoNCjENCg0KVU5JVA0KSU1FRDMwMTANClN5c3RlbXMgUGhhcm1hY29sb2d5DQpJbiB0aGlzIHVuaXQgc3R1ZGVudHMgd2lsbCBjb21wYXJlIGFuZCBjb250cmFzdCB0aGUgcGhhcm1hY29sb2d5IG9mIGRydWdzIGFjdGluZyBvbiB0aGUgZW5kb2NyaW5lLCByZXNwaXJhdG9yeSwgbXVzY3Vsb3NrZWxldGFsIGFuZCBnYXN0cm9pbnRlc3RpbmFsIHN5c3RlbXMuIFN0dWRlbnRzIHdpbGwgaW52ZXN0aWdhdGUgZHJ1Z3MgZm9yIHBhaW4gYW5kIGFsbGVyZ3k7IGxvY2FsIGhvcm1vbmVzIHRoYXQgYXJlIG1lZGlhdG9ycyBvZiBpbmZsYW1tYXRpb24gYW5kIGFsbGVyZ3k7IGRydWdzIGFmZmVjdGluZyBibG9vZCBnbHVjb3NlLCB0aHlyb2lkIGZ1bmN0aW9uIGFuZCBib25lIG1ldGFib2xpc20uIE1lY2hhbmlzbXMgb2YgZHJ1ZyBhY3Rpb24sIGFkdmVyc2UgZWZmZWN0cywgZHJ1ZyBpbnRlcmFjdGlvbnMgYW5kIGdlbmVyYWwgQURNRSAoYWJzb3JwdGlvbiwgZGlzdHJpYnV0aW9uLCBtZXRhYm9saXNtIGFuZCBleGNyZXRpb24pIHByb3BlcnRpZXMgd2lsbCBiZSBleGFtaW5lZC4NCjI1DQpGdWxseSBPbmxpbmUNClBIUk0yMDA2DQoNCg0KMQ0KDQpVTklUDQpJTUVEMzAwOA0KQWR2YW5jZWQgUGhhcm1hY29sb2d5DQpJbiB0aGlzIHVuaXQgc3R1ZGVudHMgd2lsbCBjb21wYXJlIGFuZCBjb250cmFzdCB0aGUgcGhhcm1hY29sb2d5IG9mIGRydWdzIGFjdGluZyBvbiB0aGUgYXV0b25vbWljIG5lcnZvdXMgc3lzdGVtIChBTlMpLCBjYXJkaW92YXNjdWxhciwgcmVuYWwsIGFuZCBjZW50cmFsIG5lcnZvdXMgc3lzdGVtIChDTlMpLiBUaGlzIHVuaXQgb2YgbGVhcm5pbmcgd2lsbCBpbnZlc3RpZ2F0ZSBkcnVncyBhZmZlY3RpbmcgbGlwb3Byb3RlaW4gbWV0YWJvbGlzbSwgZGl1cmV0aWNzLCB2YXNvZGlsYXRvcnMsIGNhbGNpdW0gY2hhbm5lbCBibG9ja2VycyBhbmQgYW50aXRocm9tYm90aWNzLCBpbmNsdWRpbmcgZHJ1Z3MgYWZmZWN0aW5nIGhlYXJ0IHJoeXRobS4gUHN5Y2hvc3RpbXVsYW50cyBhbmQgZHJ1Z3Mgb2YgYWJ1c2UgYXJlIGFsc28gZGlzY3Vzc2VkLCBpbmNsdWRpbmcgZHJ1Z3MgZm9yIFBhcmtpbnNvbsOi4oKs4oSicyBhbmQgb3RoZXIgbmV1cm9kZWdlbmVyYXRpdmUgZGlzb3JkZXJzLCBlcGlsZXBzeSwgYW5kIGRydWdzIHVzZWQgdG8gdHJlYXQgYmVoYXZpb3VyYWwgZGlzb3JkZXJzLiBUaGUgdW5pdCBpbmNsdWRlcyBkaXNjdXNzaW9ucyBvbiB0aGUgY2hsb3JpZGUgaW9uLUdBQkEgcmVjZXB0b3IgY29tcGxleCwgYmVuem9kaWF6ZXBpbmUgcmVjZXB0b3IgYWdvbmlzdHMgYW5kIGFudGFnb25pc3RzLiBDYW5jZXIgcHJvZ3Jlc3Npb24gd2lsbCBiZSBpbnZlc3RpZ2F0ZWQgd2l0aCB0aGUgYW50aW5lb3BsYXN0aWMgZHJ1Z3MgY3VycmVudGx5IHVzZWQgdG8gdHJlYXQgY2FuY2VycyBpbiBtdWx0aXBsZSBvcmdhbiBzeXN0ZW1zLiBBYnNvcnB0aW9uLCBkaXN0cmlidXRpb24sIG1ldGFib2xpc20gYW5kIGV4Y3JldGlvbiAoQURNRSksIG1lY2hhbmlzbXMgb2YgYWN0aW9uLCBhZHZlcnNlIGVmZmVjdHMgYW5kIGRldGFpbGVkIGRydWcgaW50ZXJhY3Rpb24gcG90ZW50aWFsIGluY2x1ZGluZyBkcnVncyBjb3ZlcmVkIGluIGFsbCBwcmV2aW91cyBwaGFybWFjb2xvZ3kgdW5pdHMgd2lsbCBiZSBleGFtaW5lZC4NCjI1DQpJbnRlcm5hbA0KSU1FRDMwMTANCg0KDQoyDQoNClVOSVQNClBIUk0zMDA1DQpBZHZhbmNlZCBQaGFybWFjb2tpbmV0aWNzIGFuZCBEcnVnIEJpb2FuYWx5c2lzDQpJbiB0aGlzIHVuaXQgc3R1ZGVudHMgd2lsbCBidWlsZCB1cG9uIHByaW9yIGNvdXJzZSBjb250ZW50IGJhc2VkIHVwb24gcGhhcm1hY29raW5ldGljcyAoUEspIGFuZCBkcnVnIGFuYWx5c2lzLiBUaGlzIHVuaXQgY29tcHJpc2VzIG9mIHR3byBsZWFybmluZyBtb2R1bGVzOiBNb2R1bGUgMSAoYWR2YW5jZWQgUEspIC0gZHJ1ZyBjbGVhcmFuY2UsIGRydWcgbWV0YWJvbGlzbSwgUEsgaW4gcmVuYWwgYW5kIGhlcGF0aWMgZGlzZWFzZSwgbm9ubGluZWFyIFBLLCBwaGFybWFjb2dlbmV0aWNzLCBwaGFybWFjb2R5bmFtaWNzLCBwcmVkaWN0aW9uIG9mIGh1bWFuIGtpbmV0aWNzLCBiaW9lcXVpdmFsZW5jZSwgY2xpbmljYWwgUEsgcmVzZWFyY2ggcHJpbmNpcGxlczsgTW9kdWxlIDIgKGRydWcgYmlvYW5hbHlzaXMpIC0gZnVuZGFtZW50YWxzIG9mIGRydWcgYmlvYW5hbHlzaXMsIGhpZ2ggcHJlc3N1cmUgbGlxdWlkIGNocm9tYXRvZ3JhcGh5IGZvciBkcnVnIGJpb2FuYWx5c2lzLCBoaWdoIHByZXNzdXJlIGNhcGlsbGFyeSBlbGVjdHJvcGhvcmVzaXMsIGltbXVub2Fzc2F5cywgdHJhY2VyIHRlY2huaXF1ZXMgYW5kIGxhYmVsbGVkIGRydWcgc3R1ZGllcywgZmx1b3JpbWV0cnkgYW5kIG1hc3Mgc3BlY3Ryb21ldHJ5Lg0KMjUNCkludGVybmFsDQpDSEVNMTAwNixQSFJNMjAwNg0KDQoNCjINCg0KU1BFQ0lBTElaQVRJT04NClNQVUMtSFVNUFQNCkh1bWFuIFBhdGhvbG9neQ0KVGhpcyBzcGVjaWFsaXNhdGlvbiB3aWxsIGFsbG93IHN0dWRlbnRzIHRvIHB1cnN1ZSB0aGVpciBpbnRlcmVzdCBpbiBiaW9sb2d5IG9mIGh1bWFuIGhlYWx0aCBhbmQgZGlzZWFzZSBhbmQgbW9yZSBicm9hZGx5IHByZXBhcmVzIHRoZW0gZm9yIGEgY2FyZWVyIGluIGNsaW5pY2FsIGhlYWx0aCBzZXJ2aWNlcy4gVGhpcyBzcGVjaWFsaXNhdGlvbiBjb25zaXN0cyBvZiBmb3VyIHBhdGhvbG9neSBhbmQgcGh5c2lvbG9neSB1bml0cyBzdWNoIGFzIEhpc3RvcGF0aG9sb2d5LCBJbW11bm9iaW9sb2d5LCBDbGluaWNhbCBQYXRob3BoeXNpb2xvZ3kgYW5kIE5ldXJvcGh5c2lvbG9neSwNCjEwMA0KVFJVRQ0KUEFUSDIwMDAsTUVESTIwMDAsTUVESTMwMTcsSFVNQjMwMDgNCg0KDQpNSlJVLU1PTEdOLE1KUlUtUEhDT0wNClVOSVQNClBBVEgyMDAwDQpGb3VuZGF0aW9ucyBvZiBIaXN0b3BhdGhvbG9neQ0KVGhpcyB1bml0IGNvdmVycyB0aGUgaGlzdG9sb2d5IG9mIHRoZSBmb2xsb3dpbmcgc3lzdGVtczsgaW50ZWd1bWVudCwgbXVzY3Vsb3NrZWxldGFsLCBjYXJkaW92YXNjdWxhciwgcmVzcGlyYXRvcnksIGRpZ2VzdGl2ZSwgbmVydm91cyBhbmQgdXJvZ2VuaXRhbC4gU2VjdGlvbiBjdXR0aW5nLCBzdGFpbmluZyBhbmQgbWljcm9zY29waWMgaW50ZXJwcmV0YXRpb24gb2Ygc2VsZWN0ZWQgdGlzc3VlcyBhbmQgb3JnYW5zIGZyb20gdGhlc2Ugc3lzdGVtcyB3aWxsIGJlIHVuZGVydGFrZW4uIFN0dWRlbnRzIHdpbGwgc3R1ZHkgdGhlIHByaW5jaXBsZXMgYW5kIGFwcGxpY2F0aW9ucyBvZiByb3V0aW5lIGFuZCBzb21lIHNwZWNpYWwgaGlzdG9sb2dpY2FsIG1ldGhvZHMgZm9yIHN0YWluaW5nIGNvbm5lY3RpdmUgdGlzc3VlLCBtdXNjbGUsIGNhcmJvaHlkcmF0ZXMsIG1pY3JvLW9yZ2FuaXNtcyBhbmQgbmV1cmFsIHRpc3N1ZS4NCjI1DQpJbnRlcm5hbA0KMTY0NCwzMTM0MDA7MTY0NCw3ODQyOzE2NDQsTUVESTEwMDA7MzEzMzk5LDMxMzQwMDszMTMzOTksNzg0MjszMTMzOTksTUVESTEwMDA7SFVNQjEwMDEsMzEzNDAwO0hVTUIxMDAxLDc4NDI7SFVNQjEwMDEsTUVESTEwMDANCg0KDQoxDQoNClVOSVQNCk1FREkyMDAwDQpGb3VuZGF0aW9ucyBvZiBJbW11bm9iaW9sb2d5DQpTdHJ1Y3R1cmUgYW5kIGZ1bmN0aW9ucyBvZiB0aGUgaW1tdW5lIHN5c3RlbSwgaW1tdW5lIHJlc3BvbnNlcywgbHltcGhvY3l0ZSBwaHlzaW9sb2d5IGFuZCB0aGVpciBjZWxsIG1lbWJyYW5lIGFudGlnZW4gc3lzdGVtcywgaW1tdW5nb25lbnMgYW5kIGNoYXJhY3RlcmlzdGljczsgYW50aWJvZHkgc3RydWN0dXJlIGFuZCBmdW5jdGlvbiwgYW50aWJvZHkgc3RydWN0dXJlIGFuZCBmdW5jdGlvbjsgcHJpbmNpcGxlcyBhbmQgYXBwbGljYXRpb25zIG9mIG1vbm9jbG9uYWwgYW50aWJvZHkgdGVjaG5vbG9neSwgQW50aWdlbi1hbnRpYm9keSByZWFjdGlvbnMgYW5kIGltbXVub2Fzc2F5cywgVGhlIE1IQyBDb21wbGV4IGFuZCBpdHMgcm9sZSwgQ3l0b2tpbmVzIGluIGhlYWx0aCBhbmQgZGlzZWFzZSwgdGhlIGNvbXBsZW1lbnQgc3lzdGVtLCBpbW11bm9wYXRob2xvZ3kgLSBoeXBlcnNlbnNpdGl2aXRpZXMsIGltbXVub2xvZ2ljYWwgdG9sZXJhbmNlIGFuZCBhdXRvaW1tdW5lIGRpc2Vhc2VzLCBpbW11bm9kZWZpY2llbmNpZXMsIHR1bW9yIGltbXVub2xvZ3kgaW5jbHVkaW5nIG5lb3BsYXNpYXMgb2YgdGhlIGx5bXBob2lkIHN5c3RlbSwgc3lzdGVtaWMgYW5kIG11Y29zYWwgaW1tdW5pdHkgdG8gYmFjdGVyaWFsLCB2aXJhbCBhbmQgcGFyYXNpdGljIGluZmVjdGlvdXMgZGlzZWFzZXMsIGFuZCBjYXJjaW5vbWFzLg0KMjUNCkludGVybmFsDQpNRURJMTAwMCxIVU1CMTAwMTtNRURJMTAwMCwzMTMzOTk7TUVESTEwMDAsMTY0NDs3ODQyLEhVTUIxMDAxOzc4NDIsMzEzMzk5Ozc4NDIsMTY0NDszMTM0MDAsSFVNQjEwMDE7MzEzNDAwLDMxMzM5OTszMTM0MDAsMTY0NA0KDQoNCjINCg0KVU5JVA0KTUVESTMwMTcNCk1lZGljYWwgUGF0aG9waHlzaW9sb2d5DQpQcmluY2lwbGVzIG9mIGRpc2Vhc2UgcHJvY2Vzc2VzLCBjYXVzZXMsIG1lZGljYWwgcHJvY2VkdXJlcywgY2VsbCBpbmp1cnksIGluZmxhbW1hdGlvbiBhbmQgdGlzc3VlIHJlcGFpciwgYWJub3JtYWwgZ3Jvd3RoIHBhdHRlcm5zLiBJbnRlcm5hdGlvbmFsIHN5c3RlbXMgZm9yIGNsYXNzaWZpY2F0aW9uIGFuZCBjb2Rpbmcgb2YgZGlzZWFzZXMuIERpc2Vhc2VzIG9mIHRoZSBtdXNjdWxhciwgZW5kb2NyaW5lLCBjYXJkaW92YXNjdWxhciwgcHVsbW9uYXJ5LCBkaWdlc3RpdmUgYW5kIG5lcnZvdXMgc3lzdGVtcy4gQ29ycmVsYXRpb24gYmV0d2VlbiBtZWNoYW5pc21zIG9mIGRpc2Vhc2UgYW5kIGNsaW5pY2FsIGFzcGVjdHMgKGRpc2Vhc2UgcGhlbm90eXBlLCBzaWducyBhbmQgc3ltcHRvbXMpLg0KMjUNCkludGVybmFsDQpIVU1CMjAwMyxIVU1CMjAxNDtIVU1CMjAwMyxIVU1CMjAwNDtIVU1CMjAxMixIVU1CMjAxNDtIVU1CMjAxMixIVU1CMjAwNA0KDQoNCjENCg0KVU5JVA0KSFVNQjMwMDgNCkNsaW5pY2FsIE5ldXJvcGh5c2lvbG9neQ0KVG8gb2J0YWluIGFuZCBpbnRlcnByZXQgc2lnbmFscyBnZW5lcmF0ZWQgYnkgdGhlIGJvZHksIGZvciB0aGUgcHVycG9zZSBvZiBhc3Nlc3NpbmcgZnVuY3Rpb24sIGNsaW5pY2FsIG5ldXJvcGh5c2lvbG9naXN0cyBtdXN0IGhhdmUgYSBjbGVhciB1bmRlcnN0YW5kaW5nIG9mIHRoZSB0ZWNobm9sb2d5IGFuZCBtZXRob2RzIHVzZWQgdG8gcmVjb3JkIGFuZCBhbmFseXplIHNpZ25hbHMsIGFuZCB1bmRlcnN0YW5kIHRoZSBiaW9sb2dpY2FsIGFjdGl2aXR5IHVuZGVybHlpbmcgdGhlc2Ugc2lnbmFscy4gVGhpcyB1bml0IGludGVncmF0ZXMgdGhlIGNvcmUgYW5hdG9taWNhbCBhbmQgcGh5c2lvbG9naWNhbCBrbm93bGVkZ2UgcmVxdWlyZWQgZm9yIHRoZSBwcmFjdGljZSBvZiBjbGluaWNhbCBuZXVyb3BoeXNpb2xvZ3ksIGV4YW1pbmluZyB0aGUgYmlvbG9neSB1bmRlcmx5aW5nIHNpZ25hbHMgZ2VuZXJhdGVkIGJ5IHRoZSBib2R5LiBNb3Jlb3ZlciwgdGhpcyB1bml0IGludHJvZHVjZXMgdGhlIHRlY2hub2xvZ3kgYW5kIHRlY2huaXF1ZXMgZm9yIG1lYXN1cmluZyBhbmQgYW5hbHl6aW5nIGJpb2xvZ2ljYWwgc2lnbmFscywgYW5kIGludHJvZHVjZXMgdGhlIHJvbGUgb2YgY2xpbmljYWwgbmV1cm9waHlzaW9sb2d5IGluIGRpYWdub3Npcy4NCjI1DQpJbnRlcm5hbA0KSFVNQjIwMTQsSFVNQjIwMDA7SFVNQjIwMTQsSFVNQjMwMDk7SFVNQjIwMDQsSFVNQjIwMDA7SFVNQjIwMDQsSFVNQjMwMDkNCg0KDQoyDQoNClNQRUNJQUxJWkFUSU9ODQpTUFVDLUlDQklPDQpJbW11bm9sb2d5IGFuZCBDZWxsIEJpb2xvZ3kNClRoaXMgc3BlY2lhbGlzYXRpb24gd2lsbCBhbGxvdyBzdHVkZW50cyB0byBwdXJzdWUgdGhlaXIgaW50ZXJlc3QgaW4gaW1tdW5vbG9neSBhbmQgY2VsbCBiaW9sb2d5LiBJbiB0aGlzIHNwZWNpYWxpc2F0aW9uLCBzdHVkZW50cyB3aWxsIGV4cGxvcmUgY2VsbCBiaW9sb2d5IGNvbmNlcHRzIHN1Y2ggYXMgbWVtYnJhbmUgdHJhbnNwb3J0LCBwcm90ZWluIHNvcnRpbmcgYW5kIG1hdHVyYXRpb24sIHByb3RlaW4gZGVncmFkYXRpb24sIHZlc2ljbGUgdHJhZmZpY2tpbmcgYW5kIGZ1bmRhbWVudGFsIGNvbmNlcHRzIG9mIGNlbGwgc2lnbmFsbGluZy4gU3R1ZGVudHMgd2lsbCBsZWFybiB0aGUgc3RydWN0dXJlIGFuZCBmdW5jdGlvbnMgb2YgdGhlIGltbXVuZSBzeXN0ZW0sIGFudGlib2R5IHN0cnVjdHVyZSBhbmQgZnVuY3Rpb24sIGF1dG9pbW11bmUgZGlzZWFzZXMsIHZpcmFsIGFuZCBwYXJhc2l0aWMgaW5mZWN0aW91cyBkaXNlYXNlcywgYW5kIGNhcmNpbm9tYXMuIFN0dWRlbnRzIHdpbGwgZXhwbG9yZSBjdXJyZW50IGFkdmFuY2VzIGluIGltbXVub2xvZ3kgYW5kIGNlbGwgYmlvbG9neSBjb25jZXB0cyBhbmQgdGVjaG5pcXVlcy4NCjEwMA0KVFJVRQ0KQkNDQjIwMDQsTUVESTIwMDAsTUVESTMwMTYsQkNDQjMwMDENCg0KDQoNClVOSVQNCkJDQ0IyMDA0DQpGb3VuZGF0aW9ucyBvZiBDZWxsIEJpb2xvZ3kNCkluIHRoaXMgdW5pdCwgc3R1ZGVudHMgd2lsbCByZWNlaXZlIGEgY29tcHJlaGVuc2l2ZSBpbnRyb2R1Y3Rpb24gdG8gY2VsbCBiaW9sb2d5IGFuZCBidWlsZCB1cG9uIGZ1bmRhbWVudGFsIGNvbmNlcHRzIHByZXNlbnRlZCBpbiBlYXJsaWVyIHVuaXRzLiBGb3VuZGF0aW9ucyBvZiBDZWxsIEJpb2xvZ3kgZm9jdXNlcyBvbiBob3cgY2VsbHMgcmVndWxhdGUgdGhlaXIgYWN0aXZpdGllcyB0byByZXNwb25kIHRvIHRoZSBleHRlcm5hbCBlbnZpcm9ubWVudC4gQ29yZSBjb25jZXB0cyBleHBsb3JlZCBpbiB0aGlzIHVuaXQgaW5jbHVkZSBtZW1icmFuZSB0cmFuc3BvcnQsIHByb3RlaW4gc29ydGluZyBhbmQgbWF0dXJhdGlvbiwgcHJvdGVpbiBkZWdyYWRhdGlvbiwgdmVzaWNsZSB0cmFmZmlja2luZyBhbmQgZnVuZGFtZW50YWwgY29uY2VwdHMgb2YgY2VsbCBzaWduYWxsaW5nLiBUaGUgbGFib3JhdG9yaWVzIHJlaW5mb3JjZSBsZWN0dXJlIGNvbmNlcHRzIGFuZCBlbmFibGUgc3R1ZGVudHMgdG8gZGV2ZWxvcCBiaW9sb2dpY2FsIGxhYm9yYXRvcnkgc2tpbGxzDQoyNQ0KSW50ZXJuYWwNCkdFTkUxMDAwDQoNCg0KMQ0KDQpVTklUDQpNRURJMzAxNg0KRnJvbnRpZXJzIGluIEltbXVub2xvZ3kNCkluIHRoaXMgdW5pdCBzdHVkZW50cyB3aWxsIGV4cGxvcmUgZnVuZGFtZW50YWwgY29uY2VwdHMgYW5kIGN1cnJlbnQgYWR2YW5jZXMgaW4gaW1tdW5vbG9neS4gVGhpcyBtYXkgaW5jbHVkZSAoYnV0IG5vdCBiZSBsaW1pdGVkIHRvKSBjYW5jZXIgaW1tdW5vdGhlcmFwZXV0aWMgc3RyYXRlZ2llcywgaG93IGFnZWluZyBpbXBhY3RzIGltbXVuZSBmdW5jdGlvbiwgYW5kIHZhY2NpbmVzLiBQcmFjdGljYWwgd29yayB3aWxsIGludm9sdmUgZGVzaWduaW5nIGFuZCBjb25kdWN0aW5nIGltbXVub2xvZ3ktYmFzZWQgYXNzYXlzLiBTdHVkZW50cyB3aWxsIHVuZGVydGFrZSBhIGRpcmVjdGVkIHJlc2VhcmNoIGNvbXBvbmVudCBpbiBvcmRlciB0byBhcHBseSBmdW5kYW1lbnRhbCBrbm93bGVkZ2UgdG8gw6LigqzFk3JlYWwtbGlmZSBzY2VuYXJpb3PDouKCrMKdLg0KMjUNCkludGVybmFsDQpNRURJMjAwMA0KDQoNCjENCg0KVU5JVA0KQkNDQjMwMDENCkZyb250aWVycyBpbiBDZWxsIEJpb2xvZ3kNCkluIHRoaXMgdW5pdCBzdHVkZW50cyB3aWxsIHN0dWR5IGFkdmFuY2VkIGNlbGwgYmlvbG9neSBjb25jZXB0cyBhbmQgdGVjaG5pcXVlcywgYnVpbGRpbmcgb24ga25vd2xlZGdlIGFjcXVpcmVkIGluIEZvdW5kYXRpb25zIG9mIENlbGwgQmlvbG9neS4gQWR2YW5jZWQgdG9waWNzIGNvdmVyZWQgaW4gdGhpcyB1bml0IGluY2x1ZGUgZGV2ZWxvcG1lbnRhbCBhbmQgc3RlbSBjZWxsIGJpb2xvZ3ksIGNlbGwgYmlvbG9neSBvZiBhZ2luZywgY2VsbCB0aGVyYXBpZXMgYW5kIHRpc3N1ZSBlbmdpbmVlcmluZywgb3JnYW5lbGxlIGRlcGVuZGVudCBzaWduYWxsaW5nIGFuZCBkeW5hbWljcywgcmVndWxhdGlvbiBvZiBnZW5lIGV4cHJlc3Npb24sIG51dHJpZW50IGFuZCBlbmVyZ3kgcmVndWxhdGVkIHNpZ25hbGxpbmcsIHRoZSBsaWZlIGN5Y2xlIG9mIGNlbGxzIGFuZCB0aGUgY2VsbCBiaW9sb2d5IG9mIGNhbmNlciBhbmQgZGlzZWFzZS4NCjI1DQpJbnRlcm5hbA0KQkNDQjIwMDQNCg0KDQoyDQoNClNQRUNJQUxJWkFUSU9ODQpTUFVDLU1JQ1JPDQpNaWNyb2Jpb2xvZ3kNClRoaXMgc3BlY2lhbGlzYXRpb24gd2lsbCBhbGxvdyBzdHVkZW50cyB0byBwdXJzdWUgdGhlaXIgaW50ZXJlc3QgaW4gbWljcm9iaW9sb2d5LiBGcm9tIGludmVzdGlnYXRpb25zIGluIGluZmVjdGlvdXMgbWljcm9iaW9sb2d5IHRvIGFkdmFuY2VzIGluIG1vbGVjdWxhciBtaWNyb2Jpb2xvZ3ksIHRoaXMgc3BlY2lhbGlzYXRpb24gb2ZmZXJzIHN0dWRlbnRzIGFuIGluc2lnaHQgaW50byBtaWNyb2Jpb2xvZ2ljYWwgY2VsbCBzdHJ1Y3R1cmVzIGFuZCBmdW5jdGlvbnMsIGFuIHVuZGVyc3RhbmRpbmcgb2YgbWljcm9iaWFsIGdlbmUgcmVndWxhdGlvbiBhbmQgbnVjbGVpYyBhY2lkIHJlcGxpY2F0aW9uLCBwYXRob2dlbmVzaXMgb2YgbWFqb3IgbWljcm9iaWFsIHBhdGhvZ2VucywgdGhlIGltcGFjdCBvZiBtaWNyb2Jpb2xvZ3kgb24gaHVtYW4gaGVhbHRoLCBhbmQgdGhlIHVzZSBvZiBtaWNyb2JlcyBpbiBhZ3JpY3VsdHVyZSwgbWluaW5nLCBhbmQgb3RoZXIgaW5kdXN0cmllcy4gSXQgYWxzbyBpbnRyb2R1Y2VzIHN0dWRlbnRzIHRvIHRoZSBtb2xlY3VsYXIgYmlvbG9neSBvZiB2aXJ1c2VzLCB0aGUgZGV2ZWxvcG1lbnQgb2YgYW50aXZpcmFsIGFnZW50cyBhbmQgdmFjY2luZXMsIGFuZCB0aGUgZXBpZGVtaW9sb2d5IG9mIHZpcmFsIGRpc2Vhc2UuDQoxMDANClRSVUUNCk1FREkyMDA5LE1JQ0IyMDAxLE1JQ0IzMDAwLE1JQ0IzMDAyDQoNCg0KDQpVTklUDQpNRURJMjAwOQ0KSW52ZXN0aWdhdGlvbnMgaW4gSW5mZWN0aW91cyBNaWNyb2Jpb2xvZ3kNClRoaXMgdW5pdCBzdHVkaWVzIG1pY3JvYmlvbG9naWNhbCBjZWxsIHN0cnVjdHVyZXMgYW5kIGZ1bmN0aW9ucywgYW5kIHdvcmtzIG9uIGlkZW50aWZ5aW5nIGFuZCBoaWdobGlnaHRpbmcgdGhlIHZpcnVsZW50IGFzcGVjdHMgb2YgYmFjdGVyaWEgdG8gdW5kZXJzdGFuZCBob3cgdGhlc2UgZmFjdG9ycyBjYW4gaW5mbHVlbmNlIHRoZSBwYXRob2dlbmVzaXMgb2YgaW5mZWN0aW91cyBkaXNlYXNlLiBUaGUgZHluYW1pYyBpbnRlcnJlbGF0aW9uc2hpcCBiZXR3ZWVuIGEgaHVtYW4gaG9zdMOi4oKs4oSicyBkZWZlbnNlIG1lY2hhbmlzbXMgIGFuZCBob3cgdGhlIGltbXVuZSBzeXN0ZW0gZGVhbHMgd2l0aCBwYXRob2dlbnMsIGFuZCBob3cgdGhlIHBhdGhvZ2VucyBkZWFsIHdpdGggdGhlIGhvc3TDouKCrOKEonMgaW1tdW5lIHN5c3RlbSBpcyBleGFtaW5lZC4gVGhlIGRldmVsb3BpbmcgcGF0aG9nZW5lc2lzIG9mIGFuIGluZmVjdGlvdXMgZGlzZWFzZSBpcyBleGFtaW5lZCBhbmQgdW5kZXJzdG9vZCBieSBleHBsb3JpbmcgY2xpbmljYWxseSByZWxldmFudCBjYXNlIHN0dWRpZXMgdXNpbmcgYmFjdGVyaWEgYW5kIHZpcnVzZXMgaW4gYSBsYWJvcmF0b3J5IHNldHRpbmcuIFRoZSBjbGluaWNhbCBkaWFnbm9zdGljIGN5Y2xlIGZvciBkZXNjcmliaW5nLCBjbGFzc2lmeWluZyBhbmQgZGlhZ25vc2luZyBtaWNyb2JpYWwgcGF0aG9nZW5zIGluY2x1ZGVzIHRoZSBjb2xsZWN0aW9uIG9mIHJlbGV2YW50IGh1bWFuIGNsaW5pY2FsIHNwZWNpbWVucywgbGFib3JhdG9yeSBwcm9jZXNzaW5nIG9mIGNvbGxlY3RlZCBzcGVjaW1lbnMsIGN1bHRpdmF0aW9uIGFuZCB0YXhvbm9taWMgaWRlbnRpZmljYXRpb24gb2YgcGF0aG9nZW5zIGFuZCBwb3NzaWJsZSB0cmVhdG1lbnQgYXZlbnVlcyAoYW50aWJpb3RpYyBzdXNjZXB0aWJpbGl0eSB0ZXN0aW5nKS4gVGhpcyB1bml0IGFsc28gY292ZXJzIHRoZSBpbXBvcnRhbnQgdG9waWMgb2YgYW50aWJpb3RpYyB0aGVyYXB5IGFzIHdlbGwgYXMgYW4gaW50cm9kdWN0aW9uIHRvIGVwaWRlbWlvbG9neSBjb3ZlcmluZyBkaXNlYXNlIGRpc3RyaWJ1dGlvbiwgY2F1c2FsaXR5LCBtb25pdG9yaW5nIGRpc2Vhc2Ugb2Ygb3V0YnJlYWtzIGFuZCB0aGUgY29udHJvbCBvZiBpbmZlY3Rpb3VzIGRpc2Vhc2VzIHdpdGhpbiB0aGUgZnJhbWV3b3JrIG9mIGhlYWx0aC4NCjI1DQpJbnRlcm5hbA0KQkNDQjEwMDA7TUVESTEwMDANCg0KDQoxDQoNClVOSVQNCk1JQ0IyMDAxDQpUcmFuc2xhdGlvbmFsIE1pY3JvYmlvbG9neQ0KTWljcm9iaWFsbHkgcHJvZHVjZWQgY29tcG91bmRzIGluY2x1ZGluZyBhbnRpYmlvdGljcywgZW56eW1lcyBhbmQgYmlvZnVlbHMgcGxheSBzaWduaWZpY2FudCByb2xlcyBpbiBnbG9iYWwgaGVhbHRoIG91dGNvbWVzIGFuZCBlY29ub21pYyBwcm9ncmVzc2lvbi4gVGhlIHJlbGV2YW5jZSBvZiBiYWN0ZXJpYSB0byBtb2xlY3VsYXIgYmlvdGVjaG5vbG9neSBpcyBpbGx1c3RyYXRlZCB3aXRoIGV4YW1wbGVzIG9mIG1lZGljaW5lLCBwdWJsaWMgaGVhbHRoLCBpbmR1c3RyaWFsIGZlcm1lbnRhdGlvbnMsIGJpb3Byb3NwZWN0aW5nLCBiaW9yZW1lZGlhdGlvbiwgYmlvcGVzdGljaWRlcywgYW5kIGFncmljdWx0dXJlIGFwcGxpY2F0aW9ucy4gVGhlIGltcGFjdCBvZiBtaWNyb2Jpb2xvZ3kgb24gaHVtYW4gaGVhbHRoIHdpbGwgYmUgc3R1ZGllZCBieSBleGFtaW5pbmcgaW50ZXJhY3Rpb25zIGJldHdlZW4gbWljcm9iaWFsIGNvbW11bml0aWVzIGFuZCB0aGVpciBlbnZpcm9ubWVudCwgd2l0aCBlbXBoYXNpcyBvbiBtaWNyb2JpYWwgZGl2ZXJzaXR5IGFuZCB0aGVpciBtZXRhYm9saWMgYWN0aXZpdGllcy4gVGhpcyBpbnRlcmRpc2NpcGxpbmFyeSB1bml0IHdpbGwgYWxsb3cgc3R1ZGVudHMgdG8gZXhwbG9yZSBhbmQgdXRpbGl6ZSBnZW5ldGljIHJlc2VhcmNoLCBtb2xlY3VsYXIgYmlvbG9neSwgY2hlbWlzdHJ5LCBhbmQgZW52aXJvbm1lbnRhbCBtaWNyb2Jpb2xvZ3kgZm9jdXNpbmcgb24gaG93IHRvIHR1cm4gbGFiIGJhc2VkIGRpc2NvdmVyaWVzIGludG8gdGFuZ2libGUgc29sdXRpb25zIGZvciByZWFsIHdvcmxkIGlzc3Vlcy4NCjI1DQpJbnRlcm5hbA0KTUVESTEwMDANCg0KDQoyDQoNClVOSVQNCk1JQ0IzMDAwDQpNb2xlY3VsYXIgVmlyb2xvZ3kNClRoaXMgdW5pdCBleGFtaW5lcyB0aGUgbW9sZWN1bGFyIGJpb2xvZ3kgb2YgdmlydXNlcywgd2l0aCB0aGUgYWltIG9mIGluY3JlYXNpbmcgc3R1ZGVudCB1bmRlcnN0YW5kaW5nIG9mIGdlbmUgcmVndWxhdGlvbiBhbmQgbnVjbGVpYyBhY2lkIHJlcGxpY2F0aW9uIHRvIGFuIGFkdmFuY2VkIGxldmVsLiBBbmltYWwsIHBsYW50LCBpbnNlY3QgYW5kIGJhY3RlcmlhbCB2aXJ1c2VzIGFyZSBzdHVkaWVkLCBhbG9uZyB3aXRoIHN0cmF0ZWdpZXMgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBhbnRpdmlyYWwgYWdlbnRzIGFuZCB2YWNjaW5lcywgY2xvbmluZyBhbmQgZXhwcmVzc2lvbiB2ZWN0b3JzLCBiaW9sb2dpY2FsIGNvbnRyb2wgb2YgaW5zZWN0cyBhbmQgcGVzdHMsIHN0cmF0ZWdpZXMgZm9yIHN0dWR5aW5nIG9uY29nZW5lc2lzIGFuZCBjZWxsIGFwb3B0b3NpcyBhbmQgdG9vbHMgZm9yIGRpYWdub3NpbmcgdmlyYWwgaW5mZWN0aW9uIGFuZCBhbmFseXNpbmcgdGhlIGVwaWRlbWlvbG9neSBvZiB2aXJhbCBkaXNlYXNlLg0KMjUNCkludGVybmFsDQpNRURJMjAwMztNRURJMjAwOTszMTE0MDU7MzAyNDY2DQoNCg0KMQ0KDQpVTklUDQpNSUNCMzAwMg0KQWR2YW5jZXMgaW4gTW9sZWN1bGFyIE1pY3JvYmlvbG9neQ0KQW4gYWR2YW5jZWQgY291cnNlIGluIHRoZSBzdHVkeSBvZiBtb2xlY3VsYXIgYmlvbG9neSBhbmQgcGF0aG9nZW5lc2lzIG9mIG1ham9yIGJhY3RlcmlhbCBwYXRob2dlbnMuIFRoZXJlIGlzIGFuIGVtcGhhc2lzIG9uIG5ldyBhbmQgZW1lcmdpbmcgaW5mZWN0aW9ucyBhcyB3ZWxsIGFzIHRob3NlIHRoYXQgaGF2ZSBwcmV2aW91c2x5IGhhZCBtYWpvciBnbG9iYWwgaW1wYWN0cyBvZiBjbGluaWNhbCBhbmQgZWNvbm9taWMgcmVsZXZhbmNlLiBNb2xlY3VsYXIgbWljcm9iaW9sb2d5IGFuZCBiaW90ZWNobm9sb2d5IHVzZXMgdGhpcyBpbmZvcm1hdGlvbiB0byBpbXByb3ZlIGRpYWdub3NpcywgdHJlYXRtZW50LCBlcGlkZW1pb2xvZ2ljYWwgYW5hbHlzaXMsIGNvbnRyb2wgYW5kIHByZXZlbnRpb24gb2YgaW5mZWN0aW91cyBkaXNlYXNlcy4gQ29yZSB0b3BpY3MgY292ZXJlZCBpbmNsdWRlIGJhY3RlcmlhbCBnZW5ldGljcyBhbmQgdGhlIGV2b2x1dGlvbiBvZiByZXNpc3RhbmNlIHRvIGFudGltaWNyb2JpYWwgYWdlbnRzLCB0aGUgbWVjaGFuaXNtcyBvZiByZXNpc3RhbmNlIHRvIGFudGltaWNyb2JpYWwgYWdlbnRzLCBhbmQgdGhlIHNwcmVhZCBhbmQgZXBpZGVtaW9sb2d5IG9mIGFudGltaWNyb2JpYWwgcmVzaXN0YW5jZSBnZW5lcy4gVGhlIGxlY3R1cmUgcHJvZ3JhbSB3aWxsIGZlYXR1cmUgZ3Vlc3Qgc3BlYWtlcnMgZnJvbSByZXNlYXJjaCBhbmQgaW5kdXN0cnkgdG8gaGlnaGxpZ2h0IGN1cnJlbnQgYXNwZWN0cyBpbiBtaWNyb2Jpb2xvZ3kuIFRoZSBwcmFjdGljYWwgY29tcG9uZW50IGZvY3Vzc2VzIG9uIHVuZGVyc3RhbmRpbmcgdGhlIHByaW5jaXBsZXMgYW5kIHByYWN0aWNlcyBvZiBsYWJvcmF0b3J5IGRpYWdub3N0aWNzIHVzaW5nIGN1cnJlbnQgbW9sZWN1bGFyIGFwcHJvYWNoZXMuIFNlbWluYXJzIHdpbGwgYmUgY29uZHVjdGVkIGFzIHRlYW0gcHJlc2VudGF0aW9ucyB0byBleHBsb3JlIGN1cnJlbnQgdG9waWNzIG9uIGluZmVjdGlvdXMgZGlzZWFzZXMgaW4gZGVwdGguIFRoaXMgcHJvZ3Jlc3NpdmUgdW5pdCBhaW1zIHRvIGV4cG9zZSBzdHVkZW50cyB0byB0aGUgbXVsdGktZmFjZXRlZCBhcHByb2FjaGVzIHJlcXVpcmVkIHdoZW4gZW5nYWdpbmcgaXNzdWVzIGluIG1vbGVjdWxhciBtaWNyb2Jpb2xvZ3kuDQoyNQ0KSW50ZXJuYWwNCk1FREkyMDAzO01FREkyMDA5DQoNCg0KMg0KDQpTUEVDSUFMSVpBVElPTg0KU1BVQy1IVU1HTg0KSHVtYW4gR2VuZXRpY3MgYW5kIEdlbm9taWNzDQpUaGlzIHNwZWNpYWxpc2F0aW9uIHdpbGwgYWxsb3cgc3R1ZGVudHMgdG8gcHVyc3VlIHRoZWlyIGludGVyZXN0IGluIGh1bWFuIGdlbmV0aWNzIGFuZCBnZW5vbWljcy4gSW4gdGhpcyBzcGVjaWFsaXNhdGlvbiwgc3R1ZGVudHMgd2lsbCBsZWFybiB0aGUgYmFzaWMgaWRlbnRpZmljYXRpb24gb2YgYWxsIGNocm9tb3NvbWVzIGluIHRoZSBodW1hbiBnZW5vbWUgYW5kIHVuZGVyc3RhbmQgdGhlIGNoYXJhY3RlcmlzdGljcyBvZiwgYW5kIG1vbGVjdWxhciBiYXNpcyBmb3IsIGh1bWFuIGdlbmV0aWMgZGlzZWFzZXMgYW5kIHRyYWl0cy4gU3R1ZGVudHMgd2lsbCBhbHNvIGxlYXJuIHRvIHNvdXJjZSBhbmQgaW50ZXJwcmV0IGdlbmV0aWMgYW5kIGdlbm9taWMgZGF0YSB1c2luZyBvbmxpbmUgZGF0YWJhc2VzIGFuZCBzcGVjaWFsaXN0IHNvZnR3YXJlLg0KMTAwDQpUUlVFDQpNRURJMjAxMCxHRU5FMjAwMSxHRU5FMzAwMixCSU9MMjAwMQ0KDQoNCk1KUlUtTU9MR04NClNQRUNJQUxJWkFUSU9ODQpTUFVDLVBIQ09MDQpQaGFybWFjb2xvZ3kNClRoaXMgc3BlY2lhbGlzYXRpb24gd2lsbCBhbGxvdyBzdHVkZW50cyB0byBwdXJzdWUgdGhlaXIgaW50ZXJlc3QgaW4gcGhhcm1hY29sb2d5LiBJdCBpcyBkZXNpZ25lZCB0byBpbnRyb2R1Y2Ugc3R1ZGVudHMgZnJvbSBlc3NlbnRpYWwgdGhyb3VnaCBhZHZhbmNlZCBwcmluY2lwbGVzIGFuZCBjb25jZXB0cyBpbiBwaGFybWFjb2xvZ3ksIGFuZCBjb21wYXJlcyBhbmQgY29udHJhc3RzIGRydWdzIHRoYXQgYWN0IG9uIHRoZSBjYXJkaW92YXNjdWxhciwgcmVzcGlyYXRvcnksIGdhc3Ryb2ludGVzdGluYWwsIHJlbmFsLCBtdXNjdWxvc2tlbGV0YWwsIGFuZCBlbmRvY3JpbmUgc3lzdGVtcywgYW5kIHRoZSBhdXRvbm9taWMgYW5kIGNlbnRyYWwgbmVydm91cyBzeXN0ZW1zLg0KMTAwDQpUUlVFDQpQSFJNMjAwNSxQSFJNMjAwNixJTUVEMzAxMCxJTUVEMzAwOA0KDQoNCk1KUlUtUEhDT0wNClNQRUNJQUxJWkFUSU9ODQpTUFVDLUlMTFVTDQpJbGx1c3RyYXRpb24NClRoaXMgc3BlY2lhbGlzYXRpb24gd2lsbCBwcm92aWRlIGEgdGhlb3JldGljYWwgYW5kIHByYWN0aWNhbCBlZHVjYXRpb24gZXhwZXJpZW5jZSBhaW1lZCBhdCBkZXZlbG9waW5nIHRoZSBlc3NlbnRpYWwgY3JlYXRpdmUgYW5kIHByYWN0aWNhbCBza2lsbHMgYW5kIGtub3dsZWRnZSBpbiBpbGx1c3RyYXRpb24uDQoxMDANCkZBTFNFDQpHUkRFMTAxNSxHUkRFMjAxNyxHUkRFMjAzMSxHUkRFMzAxOA0KDQoNCg0KVU5JVA0KR1JERTEwMTUNCklsbHVzdHJhdGlvbiBGdW5kYW1lbnRhbHMNClRoaXMgdW5pdCBpbnRyb2R1Y2VzIHN0dWRlbnRzIHRvIHRoZSBmdW5kYW1lbnRhbCBwcmluY2lwbGVzIGFuZCB0ZWNobmljYWwgcHJvY2Vzc2VzIG9mIGlsbHVzdHJhdGlvbiBkZXNpZ24uIFN0dWRlbnRzIHdpbGwgbGVhcm4gaG93IHRvIHZpc3VhbGlzZSBhbmQgY29tbXVuaWNhdGUgbmFycmF0aXZlIGNvbmNlcHRzLCBkZXZlbG9waW5nIHRoZWlyIGFiaWxpdGllcyBhcyBza2lsbGVkIHRlY2huaWNhbCBwcmFjdGl0aW9uZXJzIGFuZCB2aXN1YWwgY29tbXVuaWNhdG9ycy4NCjI1DQpJbnRlcm5hbA0KDQoNCg0KMTINCg0KVU5JVA0KR1JERTIwMTcNCklsbHVzdHJhdGlvbiBDb25jZXB0cyBhbmQgUHJvY2Vzc2VzDQpJbGx1c3RyYXRpb24gcHJhY3RpY2UgaW52b2x2ZXMgdGhlIGV4cGxvcmF0aW9uIGFuZCBkZXZlbG9wbWVudCBvZiBpZGVhcyBieSB1c2luZyBhIHdpZGUgcmFuZ2Ugb2Ygc2tpbGxzLCB0ZWNobmlxdWVzIGFuZCBwcm9jZXNzZXMuIFRocm91Z2hvdXQgdGhpcyB1bml0IHN0dWRlbnRzIGFyZSBlbmNvdXJhZ2VkIHRvIGV4cGVyaW1lbnQgd2l0aCBhcyBtYW55IGRpZmZlcmVudCB0ZWNobmlxdWVzIGFzIHBvc3NpYmxlLiBUaGlzIGVuYWJsZXMgc3R1ZGVudHMgdG8gY29udmV5IG1lc3NhZ2VzIGluIGFwcHJvcHJpYXRlIGFuZCBlZmZlY3RpdmUgd2F5cyB0byBhIHNlcmllcyBvZiBkZXNpZ24gYnJpZWZzLg0KMjUNCkludGVybmFsDQpHUkRFMTAxNTtHUkRFMTAwMjszMTAxMzENCg0KDQoxMg0KDQpVTklUDQpHUkRFMjAzMQ0KRGlnaXRhbCBJbGx1c3RyYXRpb24gUHJvZHVjdGlvbg0KVGhpcyB1bml0IGZvY3VzZXMgb24gdGhlIGxlYXJuaW5nIG9mIGNvbnRlbXBvcmFyeSBkaWdpdGFsIHRlY2huaXF1ZXMgdXNlZCB0byBleGVjdXRlIGNvbW1lcmNpYWwgaWxsdXN0cmF0aW9ucy4gU3R1ZGVudHMgYXJlIGluc3RydWN0ZWQgaW4gYW5kIHN0dWR5IHRoZSBhZHZhbmNlZCB0ZWNobmljYWwgcHJvY2Vzc2VzIHVzZWQgYnkgaW5kdXN0cnkgcHJvZmVzc2lvbmFscyBhY3Jvc3MgdGhlIGlsbHVzdHJhdGlvbiBpbmR1c3RyeS4NCjI1DQpJbnRlcm5hbA0KDQoNCg0KMTINCg0KVU5JVA0KR1JERTMwMTgNCklsbHVzdHJhdGlvbiBhbmQgVmlzdWFsIERldmVsb3BtZW50DQpUaGlzIHVuaXQgZXhwbG9yZXMgdGhlIGJlbmVmaXRzIG9mIHRoZSByb2xlIG9mIHRoZSBjb21wdXRlciBpbiBtb2Rlcm4gaW1hZ2UgbWFraW5nIHRlY2huaXF1ZXMuIEl0IHNlcnZlcyB0byBicmVhayBkb3duIHRoZSB0cmFkaXRpb25hbCBiYXJyaWVycyBiZXR3ZWVuIGlsbHVzdHJhdGlvbiBhbmQgcGhvdG9ncmFwaHkgYnkgc3ludGhlc2lzaW5nIHRoZSBjb21tb24gZ3JvdW5kIGluIGJvdGggZmllbGRzIG9mIGltYWdlIGNyZWF0aW9uIGFuZCBlbmhhbmNlbWVudC4NCjI1DQpJbnRlcm5hbA0KR1JERTIwMTk7R1JERTIwMTc7MzEzMzA2DQoNCg0KMTINCg0KU1BFQ0lBTElaQVRJT04NClNQVUMtQVNJQU4NCkFzaWFuIFN0dWRpZXMNClRoaXMgc3BlY2lhbGlzYXRpb24gcHJvdmlkZXMgc3R1ZGVudHMgd2l0aCBhbiBpbnRyb2R1Y3Rpb24gdG8gQXNpYW4gc3R1ZGllcywgaW5jbHVkaW5nIENoaW5lc2UgYW5kIEphcGFuZXNlIGxhbmd1YWdlLg0KMTAwDQpGQUxTRQ0KQVNJQTIwMDMsQVNJQTMwMDEsQ0hJTjEwMDAsSkFQTjEwMDANCg0KDQoNClVOSVQNCkFTSUEyMDAzDQpTb2NpYWwgSW1wYWN0IG9mIEVjb25vbWljIENoYW5nZXMgaW4gQ2hpbmEgYW5kIEphcGFuDQpBIGNvbXBhcmF0aXZlIHBlcnNwZWN0aXZlIG9uIGVjb25vbWljIGdyb3d0aCBhbmQgc29jaWFsIHRyYW5zZm9ybWF0aW9uIGlzIG9mZmVyZWQgaW4gdGhpcyB1bml0LCB3aXRoIHNwZWNpYWwgZW1waGFzaXMgb24gQ2hpbmEgYW5kIEphcGFuLiBUaGUgdW5pdCBleHBsYWlucyB0aGUgZGl2ZXJzZSBwYXRocyBvZiBBc2lhbiBjb3VudHJpZXMgdG8gbW9kZXJuaXR5LCBhbmQgdG9waWNzIGluY2x1ZGU6IEFzaWFuIHBlcnNwZWN0aXZlcyBvZiBlY29ub21pYyBkZXZlbG9wbWVudCwgc3RhdGUtbGVkIG1hcmtldCBlY29ub21pZXMsIHN0YXRlIHBvd2VyIGFuZCBwb2xpdGljYWwgY3VsdHVyZXMsIGNpdmlsIHNvY2lldHkgYW5kIGdvdmVybm1lbnQgcG9saWNpZXMsIHN1c3RhaW5hYmxlIGRldmVsb3BtZW50IGFuZCBzb2NpYWwgbW92ZW1lbnRzLCBwdWJsaWMgb3BpbmlvbiBpbiBlbnZpcm9ubWVudGFsIGRlYmF0ZXMsIGhpc3RvcmljYWwgaXNzdWVzIGFuZCByZWdpb25hbCB0ZW5zaW9uIGluIEFzaWE7IHRoZSBpbXBhY3Qgb2YgbmF0aW9uYWxpc20sIHJlZ2lvbmFsaXNtIGFuZCBnbG9iYWxpc2F0aW9uIG9uIGludGVyLXN0YXRlIGNvbmZsaWN0OyBhbmQgcmVnaW9uYWwgaW50ZWdyYXRpb24gaW4gdGhlIEFzaWFuIDIxc3QgY2VudHVyeS4NCjI1DQpJbnRlcm5hbA0KDQoNCg0KMg0KDQpVTklUDQpBU0lBMzAwMQ0KQXNpYW4gQ2VudHVyeSBJc3N1ZXMgYW5kIFBlcnNwZWN0aXZlcw0KVGhpcyB1bml0IGV4YW1pbmVzIHRoZSB3YXlzIGluIHdoaWNoIHNwZWNpYWxpc3RzIGluIGFyZWEgc3R1ZGllcyBoYXZlIGNvbmR1Y3RlZCByZXNlYXJjaCwgdGhyb3VnaCBlbmdhZ2VtZW50cyB3aXRoIGlkZWFzIGFuZCBib2RpZXMgb2YgZXZpZGVuY2UuIEl0IGFsc28gZXhwbG9yZXMgdGhlIHdheXMgaW4gd2hpY2ggYXJlYSBzcGVjaWFsaXN0cycga25vd2xlZGdlIGlzIGFwcGxpZWQgaW4gdGhlIHdvcmtwbGFjZSBhbmQgYnVzaW5lc3MgZW52aXJvbm1lbnRzIG9mIEFzaWEuIFRoZSB1bml0IGRldmVsb3BzIHJlZmxlY3RpdmUgdW5kZXJzdGFuZGluZ3Mgb2YgZG9pbmcgcmVzZWFyY2ggb24gQXNpYS1mb2N1c2VkIGlzc3VlcyBhbmQgcGVyc3BlY3RpdmVzLg0KMjUNCkludGVybmFsDQoNCg0KDQoxDQoNClVOSVQNCkNISU4xMDAwDQpCZWdpbm5pbmcgQ2hpbmVzZQ0KVGhpcyB1bml0IGludHJvZHVjZXMgYmFzaWMgY29tbXVuaWNhdGl2ZSBza2lsbHMgaW4gTWFuZGFyaW4gQ2hpbmVzZSBhdCBhbiBlbGVtZW50YXJ5IGxldmVsLiBTdHVkZW50cyBhY3F1aXJlIHRoZSBmb3VyIGVzc2VudGlhbCBsYW5ndWFnZSBza2lsbHMgb2Ygc3BlYWtpbmcsIGxpc3RlbmluZywgcmVhZGluZyBhbmQgd3JpdGluZyB0aHJvdWdoIGFtcGxlIHByYWN0aWNlIGluIGNvbW11bmljYXRpdmUgYWN0aXZpdGllcyBzdXBwb3J0ZWQgYnkgZGlnaXRhbCB0ZWNobm9sb2d5LiBTdHVkZW50cyB3aWxsIGFsc28gYmUgaW50cm9kdWNlZCB0byBDaGluZXNlIHNvY2lldHksIENoaW5lc2UgY3VsdHVyZSBhbmQgdGhlIHN0cnVjdHVyZSBvZiB0aGUgQ2hpbmVzZSBsYW5ndWFnZSB0aHJvdWdoIG1pbmktbGVjdHVyZXMsIGF1ZGlvLXZpc3VhbCBwcmVzZW50YXRpb25zIGFuZCByZWFsLXRpbWUgY2xhc3Nyb29tLWJhc2VkIG9yIG9ubGluZSB0dXRvcmlhbHMuDQoyNQ0KSW50ZXJuYWwsRnVsbHkgT25saW5lDQoNCg0KMTIzMjENCjEyDQoNClVOSVQNCkpBUE4xMDAwDQpCZWdpbm5pbmcgSmFwYW5lc2UNClRoaXMgdW5pdCBpbnRyb2R1Y2VzIGJhc2ljIGNvbW11bmljYXRpdmUgc2tpbGxzIGluIEphcGFuZXNlIGF0IGFuIGVsZW1lbnRhcnkgbGV2ZWwuIFN0dWRlbnRzIGFjcXVpcmUgdGhlIGZvdXIgZXNzZW50aWFsIGxhbmd1YWdlIHNraWxscyBvZiBzcGVha2luZywgbGlzdGVuaW5nLCByZWFkaW5nIGFuZCB3cml0aW5nIGNoYXJhY3RlcnMgKEhpcmFnYW5hLCBLYXRha2FuYSwgYW5kIEthbmppKSB0aHJvdWdoIGFtcGxlIHByYWN0aWNlIGluIGNvbW11bmljYXRpdmUgYWN0aXZpdGllcyBzdXBwb3J0ZWQgYnkgZGlnaXRhbCB0ZWNobm9sb2d5LiBTdHVkZW50cyB3aWxsIGFsc28gYmUgaW50cm9kdWNlZCB0byBKYXBhbmVzZSBzb2NpZXR5IGFuZCBjdWx0dXJlIHRocm91Z2ggbWluaS1sZWN0dXJlcywgYXVkaW8tdmlzdWFsIHByZXNlbnRhdGlvbnMgYW5kIHZpcnR1YWwgcmVhbC10aW1lIGNsYXNzcm9vbS1iYXNlZCBvciBvbmxpbmUgdHV0b3JpYWxzLg0KMjUNCkludGVybmFsLEZ1bGx5IE9ubGluZQ0KDQoNCjExMjY1DQoxMg0KDQpTUEVDSUFMSVpBVElPTg0KU1BVQy1DSE5TRQ0KQ2hpbmVzZSBMYW5ndWFnZQ0KVGhpcyBzcGVjaWFsaXNhdGlvbiBwcm92aWRlcyBzdHVkZW50cyB3aXRoIGFuIGludHJvZHVjdGlvbiB0byB0aGUgQ2hpbmVzZSBsYW5ndWFnZS4NCjEwMA0KRkFMU0UNCkNISU4xMDAwLENISU4xMDAxLENISU4yMDAxLENISU4yMDAyDQoNCg0KDQpVTklUDQpDSElOMTAwMQ0KQmVnaW5uaW5nIENoaW5lc2UgRGV2ZWxvcGluZw0KVGhpcyB1bml0IGNvdmVycyBib3RoIHdyaXR0ZW4gYW5kIHNwb2tlbiBDaGluZXNlIGF0IGFuIGludHJvZHVjdG9yeSBsZXZlbCB0aGF0IGJ1aWxkcyBvbiBwcmlvciBrbm93bGVkZ2UgZ2FpbmVkIGluIENISU4xMDAwLiAgQSBjb21tdW5pY2F0aW9uLW9yaWVudGVkIGFwcHJvYWNoIGlzIHVzZWQgdG8gaGVscCBzdHVkZW50cyBkZXZlbG9wIGNvbmZpZGVuY2UgaW4gc3BlYWtpbmcsIGxpc3RlbmluZywgcmVhZGluZyBhbmQgd3JpdGluZyBTdGFuZGFyZCBNb2Rlcm4gQ2hpbmVzZSBzbyB0aGF0IHRoZXkgd2lsbCBiZSBhYmxlIHRvIGludGVyYWN0IHdpdGggc3BlYWtlcnMgb2YgQ2hpbmVzZSBpbiBzaW1wbGUgZGF5LXRvLWRheSBzaXR1YXRpb25zLiBBIHdpZGVyIHJhbmdlIG9mIHRvcGljcyBvbiBDaGluZXNlIHNvY2lldHkgYW5kIGN1bHR1cmUgd2lsbCBhbHNvIGJlIGludHJvZHVjZWQgdGhyb3VnaCBtaW5pLWxlY3R1cmVzLCBhdWRpby12aXN1YWwgcHJlc2VudGF0aW9ucyBhbmQgcmVhbC10aW1lIGNsYXNzcm9vbS1iYXNlZCBvciBvbmxpbmUgdHV0b3JpYWxzLg0KMjUNCkludGVybmFsLEZ1bGx5IE9ubGluZQ0KDQoNCjEyMzIyDQoyDQoNClVOSVQNCkNISU4yMDAxDQpQcmUtSW50ZXJtZWRpYXRlIENoaW5lc2UNCkZ1cnRoZXIgZGV2ZWxvcHMgc3R1ZGVudHMnIGNvbW11bmljYXRpdmUgY29tcGV0ZW5jZSBpbiB0aGUgQ2hpbmVzZSBsYW5ndWFnZSBvdmVyIGEgd2lkZXIgcmFuZ2Ugb2Ygc2l0dWF0aW9ucy4gQ29udmVyc2F0aW9uLCByZWFkaW5ncywgZGlzY3Vzc2lvbnMgYW5kIHJlcG9ydCB3cml0aW5nIHdpbGwgYmUgY29uZHVjdGVkIG9uIHRvcGljcyBpbiByZWxhdGlvbiB0byBjb250ZW1wb3JhcnkgQ2hpbmVzZSBzb2NpZXR5IGFuZCBjdWx0dXJlLiBUaGUgY3VsdHVyYWwgc2lnbmlmaWNhbmNlIG9mIGxhbmd1YWdlIHVzYWdlIHdpbGwgYmUgZXhhbWluZWQsIHRvZ2V0aGVyIHdpdGggc3lzdGVtYXRpYyBkaXNjdXNzaW9uIG9mIGFwcHJvcHJpYXRlIG1hbm5lcnMgYW5kIHNvY2lhbCBldGlxdWV0dGUgdG8gZW5hYmxlIGVmZmVjdGl2ZSBjb21tdW5pY2F0aW9uIHdpdGggQ2hpbmVzZSBzcGVha2Vycy4NCjI1DQpJbnRlcm5hbA0KDQoNCg0KMQ0KDQpVTklUDQpDSElOMjAwMg0KUHJlLUludGVybWVkaWF0ZSBDaGluZXNlIERldmVsb3BpbmcNCkZ1cnRoZXIgZGV2ZWxvcHMgY29tbXVuaWNhdGl2ZSBjb21wZXRlbmNlIGluIHRoZSBDaGluZXNlIGxhbmd1YWdlIHRocm91Z2ggY29sbGFib3JhdGl2ZSBhbmQgc2VsZi1kaXJlY3RlZCBsZWFybmluZyBhY3Rpdml0aWVzLiBTdHVkZW50cyB3aWxsIGFjcXVpcmUgc2tpbGxzIGluIGhhbmRsaW5nIHNob3J0IHdyaXR0ZW4gdGV4dHMgb24gdG9waWNzIHJlbGF0aW5nIHRvIGNvbnRlbXBvcmFyeSBDaGluZXNlIHNvY2lldHkuIFRoZXkgd2lsbCBiZSBlbmNvdXJhZ2VkIHRvIGV4cHJlc3Mgb3BpbmlvbnMsIGNvbmR1Y3QgZGlzY3Vzc2lvbnMgYW5kIHByZXNlbnQgcmVwb3J0cy4gUmVsZXZhbnQgY3VsdHVyYWwgYW5kIHNvY2lhbCBpc3N1ZXMgd2lsbCBiZSBkaXNjdXNzZWQuDQoyNQ0KSW50ZXJuYWwNCjEyMzA5O0NISU4yMDAxDQoNCjEyMzI0DQoyDQoNClNQRUNJQUxJWkFUSU9ODQpTUFVDLUpBUEFODQpKYXBhbmVzZSBMYW5ndWFnZQ0KVGhpcyBzcGVjaWFsaXNhdGlvbiBwcm92aWRlcyBzdHVkZW50cyB3aXRoIGFuIGludHJvZHVjdGlvbiB0byB0aGUgSmFwYW5lc2UgbGFuZ3VhZ2UuDQoxMDANCkZBTFNFDQpKQVBOMjAwMSxKQVBOMjAwMixKQVBOMzAwMCxKQVBOMzAwMQ0KDQoNCg0KVU5JVA0KSkFQTjIwMDENCkludGVybWVkaWF0ZSBKYXBhbmVzZTogRXZlcnlkYXkgQ29udGV4dHMNClRoaXMgdW5pdCBoYXMgYW4gZW1waGFzaXMgb24gdGhlIGludGVyYWN0aXZlIHVzZSBvZiB0aGUgSmFwYW5lc2UgbGFuZ3VhZ2UgYW5kIGlzIGFpbWVkIGF0IGluY3JlYXNpbmcgc3R1ZGVudCBjb21tdW5pY2F0aXZlIGNvbXBldGVuY2UgaW4gbGlzdGVuaW5nLCBzcGVha2luZywgcmVhZGluZyBhbmQgd3JpdGluZy4gSXQgcHJvdmlkZXMgc3R1ZGVudHMgd2l0aCBvcHBvcnR1bml0aWVzIHRvIGVzdGFibGlzaCBlc3NlbnRpYWwgc2tpbGxzIHdpdGggYSBmb2N1cyBvbiBwcmFjdGljYWwsIGV2ZXJ5ZGF5IHVzZSBvZiB0aGUgSmFwYW5lc2UgbGFuZ3VhZ2UuIFN0dWRlbnRzIGFyZSBhYmxlIHRvIGNvbXBhcmUgYW5kIGNvbnRyYXN0IEphcGFuZXNlIGN1bHR1cmUgd2l0aCB0aGVpciBvd24sIGFuZCBvdGhlciBjdWx0dXJlcyB0aHJvdWdoIHNpdHVhdGluZyB0aGUgdXNlIG9mIHRoZSBKYXBhbmVzZSBsYW5ndWFnZSBpbiByZWxldmFudCBzb2NpYWwgYW5kIGN1bHR1cmFsIGNvbnRleHRzLg0KMjUNCkludGVybmFsDQoNCg0KDQoxDQoNClVOSVQNCkpBUE4yMDAyDQpJbnRlcm1lZGlhdGUgSmFwYW5lc2U6IEV4dGVuZGluZyBFdmVyeWRheSBDb250ZXh0cw0KVGhpcyB1bml0IGhhcyBhbiBlbXBoYXNpcyBvbiB0aGUgaW50ZXJhY3RpdmUgdXNlIG9mIHRoZSBKYXBhbmVzZSBsYW5ndWFnZSBhbmQgZnVydGhlciBkZXZlbG9wcyBjb21tdW5pY2F0aXZlIGNvbXBldGVuY2UgaW4gc3BlYWtpbmcsIGxpc3RlbmluZywgcmVhZGluZywgd3JpdGluZyBhbmQgY3VsdHVyYWwga25vd2xlZGdlLiBJdCBwcm92aWRlcyBzdHVkZW50cyB3aXRoIG9wcG9ydHVuaXRpZXMgdG8gYXBwbHkgYW5kIGV4dGVuZCBza2lsbHMgd2l0aCBhIGZvY3VzIG9uIHByYWN0aWNhbCwgZXZlcnlkYXkgdXNlIG9mIHRoZSBKYXBhbmVzZSBsYW5ndWFnZS4gU3R1ZGVudHMgYXJlIGFibGUgdG8gY29tcGFyZSBhbmQgY29udHJhc3QgSmFwYW5lc2UgY3VsdHVyZSB3aXRoIHRoZWlyIG93biwgYW5kIG90aGVyIGN1bHR1cmVzIHRocm91Z2ggc2l0dWF0aW5nIHRoZSB1c2Ugb2YgdGhlIEphcGFuZXNlIGxhbmd1YWdlIGluIHJlbGV2YW50IHNvY2lhbCBhbmQgY3VsdHVyYWwgY29udGV4dHMuDQoyNQ0KSW50ZXJuYWwNCg0KDQoNCjINCg0KVU5JVA0KSkFQTjMwMDANCkludGVybWVkaWF0ZSBKYXBhbmVzZQ0KQ29tbXVuaWNhdGl2ZSBjb252ZXJzYXRpb24gYW5kIGF1cmFsIGNvbXByZWhlbnNpb24gYXQgdGVydGlhcnkgZWR1Y2F0aW9uIGxldmVsLCBmb3Igbm9uLW5hdGl2ZSBzcGVha2VycyBvZiBKYXBhbmVzZSwgZXF1aXZhbGVudCB0byBsZXZlbCBOMyBvZiB0aGUgSmFwYW5lc2UgTGFuZ3VhZ2UgUHJvZmljaWVuY3kgVGVzdC4gUmVhZGluZyBtYXRlcmlhbHMgZGlyZWN0bHkgcmVsYXRlZCB0byBldmVyeWRheSBsaWZlIG9mIHVuaXZlcnNpdHkgc3R1ZGVudHMgaW4gSmFwYW4gY29udGFpbmluZyBwb3N0IGhpZ2ggc2Nob29sIGxldmVsIHNlbnRlbmNlIHN0cnVjdHVyZXMgYW5kIGlkaW9tYXRpYyBleHByZXNzaW9ucy4gVXNlIG9mIEphcGFuZXNlIGxhbmd1YWdlIGZvbnQgb24gYSBjb21wdXRlci4NCjI1DQpJbnRlcm5hbA0KDQoNCg0KMTINCg0KVU5JVA0KSkFQTjMwMDENCkludGVybWVkaWF0ZSBKYXBhbmVzZSBEZXZlbG9waW5nDQpDb252ZXJzYXRpb24gYW5kIGF1cmFsIGNvbXByZWhlbnNpb24gYXQgcG9zdCBoaWdoIHNjaG9vbCBsZXZlbCwgZm9yIG5vbi1uYXRpdmUgc3BlYWtlcnMgb2YgSmFwYW5lc2UsIGVxdWl2YWxlbnQgdG8gbGV2ZWwgTjMgb2YgdGhlIEphcGFuZXNlIExhbmd1YWdlIFByb2ZpY2llbmN5IFRlc3QuIFJlYWRpbmcgbGl0ZXJhdHVyZSBvbiBKYXBhbmVzZSBjdWx0dXJlIGNvbnRhaW5pbmcgY29tcGxleCBzZW50ZW5jZSBzdHJ1Y3R1cmVzIGFuZCBoaWdobHkgaWRpb21hdGljIGV4cHJlc3Npb25zLiBJbnRyb2R1Y3Rpb24gb2YgYW4gYWRkaXRpb25hbCAxMDAgSmFwYW5lc2UgY2hhcmFjdGVycyAoS2FuamkpLiBQcmFjdGljZSBvbiB2YXJpb3VzIGZvcm1zIHJlcHJlc2VudGluZyBzcGVlY2ggbGV2ZWxzLg0KMjUNCkludGVybmFsDQoNCg0KDQoyDQoNClNQRUNJQUxJWkFUSU9ODQpTUFVDLUNPUlBHDQpDb3Jwb3JhdGUgR292ZXJuYW5jZQ0KVGhpcyBzcGVjaWFsaXNhdGlvbiBwcm92aWRlcyBzdHVkZW50cyB3aXRoIHRoZSByZWxldmFudCBrbm93bGVkZ2UgYWJvdXQgdGhlIHJvbGUgb2YgY29ycG9yYXRlIGdvdmVybmFuY2UuDQoxMDANCkZBTFNFDQpCTEFXMjAwNixCTEFXMjAxMSxCTEFXMTAwNixCTEFXMzAwNA0KDQoNCg0KVU5JVA0KQkxBVzIwMDYNCkNvbXBhbnkgTGF3IGZvciBCdXNpbmVzcw0KVGhlIHVuaXQgYWltcyB0byBwcm92aWRlIHN0dWRlbnRzIHdpdGggYSBzb2xpZCBmb3VuZGF0aW9uIG9mIGZ1bmRhbWVudGFsIHByaW5jaXBsZXMgb2YgY29tcGFueSBsYXcuIFRvcGljcyBpbmNsdWRlOiB0aGUgY29udGV4dCBvZiBjb21wYW55IGxhdywgdGhlIHJvbGUgYW5kIGZ1bmN0aW9ucyBvZiB0aGUgQXVzdHJhbGlhbiBTZWN1cml0aWVzIGFuZCBJbnZlc3RtZW50cyBDb21taXNzaW9uLCB0eXBlcyBvZiBidXNpbmVzcyBzdHJ1Y3R1cmVzLCBpbmNvcnBvcmF0aW9uIGFuZCByZWdpc3RyYXRpb24sIHRoZSBkb2N0cmluZSBvZiBsZWdhbCBwZXJzb25hbGl0eSwgY29ycG9yYXRlIGZ1bmQgcmFpc2luZyBhbmQgc2hhcmUgY2FwaXRhbCwgbGVnYWwgcnVsZXMgcmVsYXRpbmcgdG8gc2hhcmVzIGFuZCBkaXZpZGVuZHMsIHRoZSBpbnRlcm5hbCBtYW5hZ2VtZW50IG9mIGNvbXBhbmllcywgcG93ZXJzIGFuZCBkdXRpZXMgb2YgdmFyaW91cyBzdGFrZWhvbGRlcnMsIHJpZ2h0cyBhbmQgcmVtZWRpZXMgb2YgbWVtYmVycywgY29tcGFueSBpbnNvbHZlbmN5IGFuZCBkZXJlZ2lzdHJhdGlvbi4NCjI1DQpJbnRlcm5hbCxGdWxseSBPbmxpbmUNCg0KDQoyODQ0DQoxMg0KDQpVTklUDQpCTEFXMjAxMQ0KU2FmZXR5IGFuZCBFbnZpcm9ubWVudGFsIEhlYWx0aCBMYXcNClRoZSBjb21tb24gbGF3IGxlZ2FsIHN5c3RlbSwgaW5jbHVkaW5nIHBhcmxpYW1lbnRhcnksIGdvdmVybm1lbnQgYW5kIGNvdXJ0IHN5c3RlbXMuIFNwZWNpZmljIGFyZWFzIG9mIGxhdyBpbiBXZXN0ZXJuIEF1c3RyYWxpYSBpbmNsdWRpbmcgbmVnbGlnZW5jZSwgZW1wbG95ZXIncyBsaWFiaWxpdHkgZm9yIGluanVyaWVzIHRvIHdvcmtlcnMsIHdvcmtlcnMgY29tcGVuc2F0aW9uLCBvY2N1cGF0aW9uYWwgaGVhbHRoIGFuZCBzYWZldHkgbGF3cyBhbmQgZW52aXJvbm1lbnRhbCBsYXdzLg0KMjUNCkludGVybmFsLEZ1bGx5IE9ubGluZQ0KDQoNCg0KMQ0KDQpVTklUDQpCTEFXMTAwNg0KSW50cm9kdWN0aW9uIHRvIEJ1c2luZXNzIExhdw0KQW4gaW50cm9kdWN0aW9uIHRvIGxhdyB3aXRoIGEgYnVzaW5lc3MgZm9jdXMuIEluIHRoaXMgdW5pdCwgc3R1ZGVudHMgd2lsbCBleGFtaW5lIHRoZSBuYXR1cmUgYW5kIHNvdXJjZXMgb2YgbGF3IGluIEF1c3RyYWxpYS4gS2V5IGFzcGVjdHMgb2YgY2l2aWwgbGF3IGFzIHRoZXkgcmVsYXRlIHRvIGJ1c2luZXNzIG9wZXJhdGlvbnMgYXJlIGV4cGxvcmVkIGluY2x1ZGluZyBpbnN1cmFuY2UgYW5kIGZpbmFuY2UuDQoyNQ0KSW50ZXJuYWwsRnVsbHkgT25saW5lDQoNCg0KDQoyDQoNClVOSVQNCkJMQVczMDA0DQpCdXNpbmVzcyBJbnRlbGxlY3R1YWwgUHJvcGVydHkNClRoaXMgdW5pdCBwcm92aWRlcyBhbiBvdmVydmlldyBvZiBjb3B5cmlnaHQsIGRlc2lnbiwgcGF0ZW50IGFuZCB0cmFkZW1hcmsgbGVnaXNsYXRpb24gYW5kIGFuIGV4YW1pbmF0aW9uIG9mIGhvdyBidXNpbmVzc2VzIGNhbiBwcm90ZWN0IHRoZWlyIGludGVsbGVjdHVhbCBwcm9wZXJ0eS4gSXQgYWxzbyBpbnRyb2R1Y2VzIHRoZSBjb21tb24gbGF3IHRvcnRzIG9mIGJyZWFjaCBvZiBjb25maWRlbmNlIGFuZCBwYXNzaW5nIG9mZiBhbmQgc29tZSBvZiB0aGUgY3VsdHVyYWwgaW1wbGljYXRpb25zIGFzc29jaWF0ZWQgd2l0aCBpbnRlbGxlY3R1YWwgcHJvcGVydHkgcmlnaHRzLg0KMjUNCkludGVybmFsLEZ1bGx5IE9ubGluZQ0KQkxBVzIwMDY7QkxBVzEwMDY7QkxBVzEwMDQNCg0KDQoxDQoNClNQRUNJQUxJWkFUSU9ODQpTUFVDLUlORU5UDQpJbm5vdmF0aW9uIGFuZCBFbnRyZXByZW5ldXJzaGlwDQpUaGlzIHNwZWNpYWxpc2F0aW9uIHByb3ZpZGVzIGJyZWFkdGggaW4gaW5ub3ZhdGlvbiwgZW50cmVwcmVuZXVyc2hpcCwgY3JlYXRpdml0eSwgZGVzaWduIHRoaW5raW5nIGFuZCBwcm90b3R5cGluZyBmb3IgaW5ub3ZhdGl2ZSBpbmRpdmlkdWFscyBvciB0aG9zZSB3aXNoaW5nIHRvIHdvcmsgYXMgaW50ZXJuYWwgY29ycG9yYXRlIGVudHJlcHJlbmV1cnMNCjEwMA0KRkFMU0UNCk1HTVQzMDA3LE1HTVQzMDA0LE1HTVQyMDA0LE1HTVQzMDAyDQoNCg0KDQpVTklUDQpNR01UMzAwNw0KTWFuYWdlbWVudCBvZiBJbm5vdmF0aW9uDQpUaGlzIHVuaXQgZm9jdXNlcyBvbiB0aGUgbWFuYWdlbWVudCBvZiBpbm5vdmF0aW9uLiAgVGhlIGZ1bmRhbWVudGFsIGlkZWFzIHVuZGVybHlpbmcgdGhpcyB1bml0IGFyZSB0aGF0ICgxKSBpbm5vdmF0aW9uIGlzIHRoZSBkcml2aW5nIGZvcmNlIGluIGVzdGFibGlzaGluZyBhIGZpcm3DouKCrOKEonMgY29tcGV0aXRpdmUgYWR2YW50YWdlLCAoMikgaW5ub3ZhdGlvbiBpcyBtYW5hZ2VkIGJ5IGxlYWRlcnMgYW5kIHRlYW1zIHdpdGggbXVsdGlwbGUgY29tcGV0ZW5jaWVzLCBhbmQgKDMpIGEgZmlybcOi4oKs4oSicyBpbm5vdmF0aW9uIHN0cmF0ZWd5IGVtZXJnZXMgZnJvbSBpdHMgY29tcGV0ZW5jaWVzIGFuZCBjYXBhYmlsaXRpZXMuIFRoZXNlIGZ1bmRhbWVudGFscyBhcmUgdGhlbiBhcHBsaWVkIHRvIG5ldyB2ZW50dXJlIGNyZWF0aW9uIHRocm91Z2ggZmlyc3QgaGFuZCBpbnRlcmFjdGlvbiB3aXRoIGlubm92YXRpdmUgZW50cmVwcmVuZXVycyBkZXZlbG9waW5nIG5ldyBpbm5vdmF0aW9ucyBhbmQgdGVjaG5vbG9naWVzIGZyb20gdGhlIGJ1c2luZXNzIGNvbW11bml0eSBhcyB3ZWxsIGFzIHVuaXZlcnNpdHkgZGV2ZWxvcGVkIGludmVudGlvbnMgd2l0aCBpbnRlbnQgdG8gY29tbWVyY2lhbGlzZSB0aGVpciBJbnRlbGxlY3R1YWwgUHJvcGVydHkuIFRoaXMgYWxsb3dzIHRoZSByZWFsIHdvcmxkIG9mIHRoZSBpbm5vdmF0aXZlIGVudHJlcHJlbmV1ciB0byByZWluZm9yY2UgYW5kIHNvbWV0aW1lcyBjaGFsbGVuZ2UgYWNjZXB0ZWQgdGhlb3JpZXMgb2YgaW5ub3ZhdGlvbiBhbmQgZW50cmVwcmVuZXVyc2hpcC4NCjI1DQpJbnRlcm5hbA0KDQoNCg0KMQ0KDQpVTklUDQpNR01UMzAwNA0KRW50cmVwcmVuZXVyc2hpcA0KVGhlIHVuaXQgaXMgcmVzZWFyY2ggYW5kIHRoZW9yeS1iYXNlZCBidXQgcHJhY3RpY2Utb3JpZW50ZWQuIFV0aWxpc2luZyBmaWVsZHdvcmsgaW50ZXJ2aWV3cyB3aXRoIHJlYWwtbGlmZSBlbnRyZXByZW5ldXJzIGl0IGFpbXMgdG8gZW5zdXJlIHRoYXQgc3R1ZGVudHMgYXJlIGZ1bGx5IGF3YXJlIG9mIHRoZSBpc3N1ZXMgYW5kIGNoYWxsZW5nZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSB0b3VnaCBidXNpbmVzcyByZWFsaXRpZXMgb2YgYmVpbmcgYW4gZW50cmVwcmVuZXVyLiBUaGlzIGlzIGFjaGlldmVkIGJ5IGV4YW1pbmluZyBhbmQgYW5hbHlzaW5nIHRoZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgdGhlIGVudHJlcHJlbmV1ciBhbmQgdGhlaXIgbmV3IGFuZC9vciBncm93aW5nIGJ1c2luZXNzLg0KMjUNCkludGVybmFsDQoNCg0KDQoxMg0KDQpVTklUDQpNR01UMjAwNA0KQnVzaW5lc3MgYW5kIFN1c3RhaW5hYmxlIERldmVsb3BtZW50DQpUaGlzIGlzIGFuIGludHJvZHVjdGlvbiB0byBjb250ZW1wb3JhcnkgZW52aXJvbm1lbnRhbCBpc3N1ZXMgcmVsZXZhbnQgdG8gbWFuYWdlcnMgb2YgdG9kYXnDouKCrOKEonMgYW5kIHRvbW9ycm93w6LigqzihKJzIGJ1c2luZXNzIG9yZ2FuaXNhdGlvbnMuIEl0IHN1cnZleXMgY3VycmVudCBlbnZpcm9ubWVudGFsIHByb2JsZW1zLCByZXN1bHRhbnQgYnVzaW5lc3MgcmVzcG9uc2liaWxpdGllcyBhbmQgcG9zc2libGUgcmVzcG9uc2VzLiBUaGUgdW5pdCBzaGVkcyBsaWdodCBvbiB0aGUgaW50ZXJkZXBlbmRlbmNpZXMgdGhhdCBleGlzdCBiZXR3ZWVuIHRoZSBlY29ub215LCBzb2NpZXR5IGFuZCBuYXR1cmUsIGhpZ2hsaWdodGluZyBlY29sb2dpY2FsIG5lZWRzIGFuZCByZWFsaXRpZXMgYW5kIGNvbXBhcmluZyB0aG9zZSB0byB0aGUgbmVlZHMgb2YgY29tbXVuaXRpZXMsIGJ1c2luZXNzIG9wZXJhdG9ycywgZ292ZXJubWVudHMgYW5kIGJ1c2luZXNzIHN0YWtlaG9sZGVycy4gWW91IHdpbGwgYmUgc2hvd24gaG93IHRvIGlkZW50aWZ5IGFuZCB1bmRlcnN0YW5kIGVudmlyb25tZW50YWwgcHJvYmxlbXMgYW5kIHRvIGRldmVsb3AgYW4gdW5kZXJzdGFuZGluZyBvZiB0aGUgcm9sZXMgb2YsIGFuZCBvcHBvcnR1bml0aWVzIGZvciwgYnVzaW5lc3Mgd2l0aGluIHRoZSBjb250ZXh0IG9mIGdyb3dpbmcgZW52aXJvbm1lbnRhbCBjb25zdHJhaW50cy4NCjI1DQpJbnRlcm5hbCxGdWxseSBPbmxpbmUNCg0KDQoNCjEyDQoNClVOSVQNCk1HTVQzMDAyDQpNYW5hZ2luZyBDaGFuZ2UNClRoZSB1bml0IGV4YW1pbmVzIHRoZSB0aGVvcmV0aWNhbCBhbmQgcHJhY3RpY2FsIHBlcnNwZWN0aXZlcyB1c2VkIGFzIGEgZnJhbWV3b3JrIHRvIGlkZW50aWZ5IGNoYW5nZS4gVGhlIGNoYW5nZSBzdHJhdGVneSwgdG9vbHMgYW5kIG1lYXN1cmVtZW50IG9mIGNoYW5nZSBhcmUgYW5hbHlzZWQuDQoyNQ0KSW50ZXJuYWwsRnVsbHkgT25saW5lDQoNCg0KDQoxMg0KDQpTUEVDSUFMSVpBVElPTg0KU1BVQy1TTUJVUw0KU21hbGwgQnVzaW5lc3MgU3RhcnQtVXANClRoaXMgc3BlY2lhbGlzYXRpb24gaXMgZGVzaWduZWQgZm9yIGVudGVycHJpc2luZyBpbmRpdmlkdWFscyB3aG8gd2FudCB0byBzdGFydCB0aGVpciBvd24gYnVzaW5lc3MsIG9yIHdvcmsgYXMgaW50ZXJuYWwgY29ycG9yYXRlIGVudHJlcHJlbmV1cnMuDQoxMDANCkZBTFNFDQpNR01UMzAwNCxNR01UMzAwMyxNR01UMzAwNyxNR01UMjAwMQ0KDQoNCg0KVU5JVA0KTUdNVDMwMDMNClNtYWxsIEJ1c2luZXNzIEdyb3d0aA0KVGhpcyB1bml0IGZvY3VzZXMgb24gaW50ZWdyYXRpb24gYW5kIGFuYWx5c2lzIG9mIGtleSBmdW5jdGlvbnMsIGNvbmNlcHRzIGFuZCBzdHJhdGVnaWVzIGZvciBncm93dGgtb3JpZW50ZWQgU21hbGwgYW5kIE1lZGl1bSBFbnRlcnByaXNlcyAoU01FcykuIFRoZSB1bml0IGhhcyBhIHNpZ25pZmljYW50IGZpZWxkd29yayBjb21wb25lbnQgd2hlcmUgc3R1ZGVudHMgd29yayBpbiB0ZWFtcyBvciBpbmRpdmlkdWFsbHkgdG8gaWRlbnRpZnkgYSBzbWFsbCBidXNpbmVzcyBvd25lciB0aGF0IHRoZXkgY2FuIHdvcmsgd2l0aCB0aHJvdWdob3V0IHNlbWVzdGVyIHRvIGRldmVsb3AgYSB0YWlsb3JlZCByZXBvcnQgdG8gd2hpY2ggdGhlc2Uga2V5IGZ1bmN0aW9ucywgc3RyYXRlZ2llcyBhbmQgY29uY2VwdHMgYXJlIGFwcGxpZWQuIFRoZSBvd25lcnMgYXJlIGludml0ZWQgdG8gcHJvdmlkZSBpbnB1dCBpbnRvIHRoZSBhc3Nlc3NtZW50IG9mIHRoZSByZXBvcnQgdG8gcmV0YWluIHRoZSByZWFsaXR5LWJhc2VkIGFwcHJvYWNoIG9mIHRoaXMgbGl2ZSBjYXNlLg0KMjUNCkludGVybmFsDQoNCg0KDQoyDQoNClVOSVQNCk1HTVQyMDAxDQpTdGFydC1VcCBCdXNpbmVzcyBQbGFubmluZw0KVGhlIHVuaXQgZXhhbWluZXMgU21hbGwgYW5kIE1lZGl1bSBFbnRlcnByaXNlcyAoU01FcykgZnJvbSBhIHByYWN0aWNhbCBwZXJzcGVjdGl2ZSBhbmQgcHJvdmlkZXMgc3R1ZGVudHMgd2l0aCBhICZxdW90O2hhbmRzIG9uIGFwcHJvYWNoJnF1b3Q7IHRvIHRoZSBhcnQgb2Ygc21hbGwgYnVzaW5lc3MgcGxhbm5pbmcuIFRoaXMgaW5jbHVkZXMgY3JlYXRpbmcgYSBidXNpbmVzcyBwbGFuIGluIHRlYW1zIHRoYXQgY29uc2lkZXJzIHRoZSBtYWluIGZ1bmN0aW9uYWwgYXJlYXMgbmVjZXNzYXJ5IGZvciB0aGUgZXN0YWJsaXNobWVudCBhbmQgY29udGludW91cyBvcGVyYXRpb24gb2YgYSBzbWFsbCBidXNpbmVzcy4NCjI1DQpJbnRlcm5hbA0KDQoNCg0KMTINCg0KU1BFQ0lBTElaQVRJT04NClNQVUMtQURWUlQNClRoZSBCdXNpbmVzcyBvZiBBZHZlcnRpc2luZw0KVGhpcyBzcGVjaWFsaXNhdGlvbiBpcyBkZXNpZ25lZCB0byBwcm92aWRlIHN0dWRlbnRzIHdpdGggYW4gdW5kZXJzdGFuZGluZyBvZiB0aGUgYnVzaW5lc3MgcHJvY2VzcyB1bmRlcnBpbm5pbmcgYWR2ZXJ0aXNpbmcgd2hpbHN0IGFsc28gcHJvdmlkaW5nIGFuIGluc2lnaHQgYW5kIGFwcHJlY2lhdGlvbiBmb3IgdGhlIGNyZWF0aXZlIGVsZW1lbnRzIG9mIGFkdmVydGlzaW5nLg0KMTAwDQpGQUxTRQ0KTUtURzIwMDAsTUtURzIwMDEsTUtURzMwMDIsTUtURzIwMDYNCg0KDQoNClVOSVQNCk1LVEcyMDAwDQpJbnRlZ3JhdGVkIE1hcmtldGluZyBDb21tdW5pY2F0aW9ucw0KVGhpcyBpcyBhbiBpbnRyb2R1Y3RvcnkgdW5pdCB3aGljaCBleHBsb3JlcyB0aGUgaW1wb3J0YW5jZSBvZiBtYXJrZXRpbmcgY29tbXVuaWNhdGlvbiwgdGhlIGNvbmNlcHRzIHVuZGVybHlpbmcgIGVmZmVjdGl2ZSBtYXJrZXRpbmcgY29tbXVuaWNhdGlvbiBhbmQgdGhlIHNraWxscyBuZWVkZWQgdG8gY3JlYXRlIHNpbXBsZSBpbnRlZ3JhdGVkIG1hcmtldGluZyBjb21tdW5pY2F0aW9uIChJTUMpIGNhbXBhaWducy4NCjI1DQpJbnRlcm5hbCxGdWxseSBPbmxpbmUNCg0KDQoNCjEyDQoNClVOSVQNCk1LVEcyMDAxDQpCcmFuZCBNYW5hZ2VtZW50DQpUaGlzIHVuaXQgZXh0ZW5kcyBvbiB0aGUgdmFyaW91cyBhc3BlY3RzIG9mIGFkdmVydGlzaW5nIGFuZCBtYXJrZXRpbmcgYW5kIGFwcGxpZXMgdGhlc2UgY29uY2VwdHMgdG8gYSBicmFuZCBlcXVpdHkgcGVyc3BlY3RpdmUuIFRoZSB0b3BpY3Mgd2lsbCBiZSBidWlsdCBhcm91bmQgdGhlIHByb2R1Y3QvYnJhbmQgbWFuYWdlbWVudCBkZWNpc2lvbnMgYW5kIHRocm91Z2ggc2VtaW5hcnMsIGNhc2UgYW5hbHlzZXMgYW5kIGEgYnJhbmQgYXVkaXQgcHJvamVjdC4gVGhlIHVuaXQgZXhhbWluZXMgc3BlY2lmaWMgYWR2ZXJ0aXNpbmcgYW5kIG1hcmtldGluZyB0b3BpY3MgcmVsYXRlZCB0byBidWlsZGluZywgbWVhc3VyaW5nLCBhbmQgbWFuYWdpbmcgYnJhbmQgZXF1aXR5LiBTcGVjaWZpY2FsbHksIHRoZSB1bml0IGV4YW1pbmVzIHZhcmlvdXMgYnJhbmQgbWFuYWdlbWVudCBkZWNpc2lvbnMgYW5kIHRoZSBzdHJhdGVnaWVzIGFuZCB0YWN0aWNzIHRvIGJ1aWxkIG1lYXN1cmUgYW5kIG1hbmFnZSBicmFuZCBlcXVpdHkuIFRoZXNlIGluY2x1ZGUgKGEpIGRpcmVjdCBhbmQgaW5kaXJlY3QgbWVhc3VyZXMgb2YgYnJhbmQgZXF1aXR5LCAoYikgc3RydWN0dXJlcyBvZiBkZXNpcmVkIGJyYW5kIGtub3dsZWRnZSwgKGMpIGNob2ljZSBvZiBicmFuZCBlbGVtZW50cywgKGQpIGRldmVsb3BtZW50IG9mIHN1cHBvcnRpbmcgbWFya2V0aW5nIHByb2dyYW1zLCAoZSkgaW50cm9kdWN0aW9uIG9mIG5ldyBwcm9kdWN0cyBuYW1pbmcsIGNvcnBvcmF0ZSBwZXJzcGVjdGl2ZXMgYW5kIChmKSBtYW5hZ2VtZW50IG9mIGJyYW5kcyBvdmVyIHRpbWUgYW5kIGdlb2dyYXBoaWNhbCBib3VuZGFyaWVzLg0KMjUNCkludGVybmFsDQoNCg0KDQoxMg0KDQpVTklUDQpNS1RHMzAwMg0KQWNjb3VudCBNYW5hZ2VtZW50DQpUaGlzIGlzIGEgc3RyYXRlZ2ljIGFjY291bnQgbWFuYWdlbWVudCB1bml0IHdoaWNoIGV4cGxvcmVzIHRoZSB0aGVvcmllcyBiZWhpbmQgYW5kIHByb2Nlc3NlcyBpbnZvbHZlZCBpbiBkZXZlbG9waW5nIGFuZCBpbXBsZW1lbnRpbmcgaW50ZWdyYXRlZCBtYXJrZXRpbmcgY29tbXVuaWNhdGlvbiBjYW1wYWlnbnMuIFNwZWNpZmljYWxseSwgc3R1ZGVudHMgbGVhcm4gYWJvdXQgdGhlIHJhdGlvbmFsZSBmb3Igc2VsZWN0aW5nIGEgZ2l2ZW4gY3JlYXRpdmUgYW5kIG1lZGlhIHN0cmF0ZWd5IGFzIGEgcmVzdWx0IG9mIGNvbXByZWhlbmRpbmcgdGhlIGxpbmthZ2VzIHdpdGggYnJhbmQgcG9zaXRpb25pbmcsIGF1ZGllbmNlIHByb2Nlc3NpbmcsIHNlbWlvdGljcywgZWxhYm9yYXRpb24gbGlrZWxpaG9vZCBhbmQgaGllcmFyY2h5IG9mIGVmZmVjdCBvYmplY3RpdmVzLiBTdHVkZW50IGxlYXJuaW5nIG9mIHRoZXNlIGxpbmthZ2VzIGlzIGVuYWJsZWQgdGhyb3VnaCBhcHBsaWNhdGlvbiBvZiB0aGVzZSB0aGVvcmllcyB0byBhbiBpbmR1c3RyeSBiYXNlZCBjbGllbnQgd2hlcmUgc3R1ZGVudHMgZW5nYWdlIGluIGEgaGFuZHMtb24gdGFzayB0byBkZXZlbG9wIGFuIGFkdmVydGlzaW5nIHBsYW4gdGhhdCBjb25zaXN0cyBvZiBhbmFseXNpcyBhbmQgcmF0aW9uYWxlIGZvciBoYXZpbmcgc2VsZWN0ZWQgYSBnaXZlbiBjcmVhdGl2ZSBhbmQgbWVkaWEgc3RyYXRlZ3kuIFN0dWRlbnRzIGFyZSBhYmxlIHRvIHVzZSB0aGVpciB0aGVvcmV0aWNhbCBrbm93bGVkZ2UgdG8ganVzdGlmeSBhbmQgcHJvdmlkZSByYXRpb25hbGUgZm9yIHRoZWlyIGNyZWF0aXZlIGFuZCBtZWRpYSByZWNvbW1lbmRhdGlvbnMuDQoyNQ0KSW50ZXJuYWwNCjExMDE2O01LVEcyMDAwDQoNCg0KMTINCg0KVU5JVA0KTUtURzIwMDYNCk1hbmFnaW5nIFNvY2lhbCBNZWRpYSBQbGF0Zm9ybXMNClRoaXMgdW5pdCBwcm92aWRlcyBzdHVkZW50cyB3aXRoIGJvdGggYSB0aGVvcmV0aWNhbCBhbmQgYXBwbGllZCB1bmRlcnN0YW5kaW5nIG9mIG1hbmFnaW5nIHNvY2lhbCBtZWRpYSBwbGF0Zm9ybXMuIFRoZSB1bml0IHJldmlld3Mgc29jaWFsIG1lZGlhIHBsYXRmb3JtcywgY3JpdGljYWwgcmVzZWFyY2ggYW5kIGFnZW5jeSBiZXN0IHByYWN0aWNlIGluIHNvY2lhbCBtZWRpYSBtYXJrZXRpbmcuIFN0dWRlbnRzIHdpbGwgZGV2ZWxvcCBhbiB1bmRlcnN0YW5kaW5nIG9mIHRoZSBzb2NpYWwgbWVkaWEgbGFuZHNjYXBlLCBzb2NpYWwgbWVkaWEgcGxhdGZvcm1zLCBkZXZlbG9wIGRpZ2l0YWwgbGl0ZXJhY3kgYXMgd2VsbCBhcyBhbiB1bmRlcnN0YW5kaW5nIG9mIGV0aGljYWwgYW5kIHJlZ3VsYXRvcnkgY29uZHVjdCBpbiB0aGUgc29jaWFsIG1lZGlhIHNwYWNlLg0KMjUNCkludGVybmFsLEZ1bGx5IE9ubGluZQ0KDQoNCg0KMTINCg0KU1BFQ0lBTElaQVRJT04NClNQVUMtTVJLVEcNCk1hcmtldGluZyBGb3VuZGF0aW9ucw0KVGhpcyBzcGVjaWFsaXNhdGlvbiBwcmVwYXJlcyBzdHVkZW50cyB0byBvcmdhbmlzZSBhbmQgY29udHJvbCBtYXJrZXRpbmcgYWN0aXZpdGllcyBlZmZpY2llbnRseSBpbiBhIGhpZ2hseSBjb21wZXRpdGl2ZSBhbmQgdm9sYXRpbGUgZW52aXJvbm1lbnQuDQoxMDANCkZBTFNFDQpNS1RHMjAwMixNS1RHMjAwNCxNS1RHMzAwMyxNS1RHMTAwMA0KDQoNCg0KVU5JVA0KTUtURzIwMDINCk1hcmtldGluZyBBY3Jvc3MgQm9yZGVycw0KQ292ZXJzIHRvcGljcyByZWxhdGVkIHRvIHRoZSBpbnRlcm5hdGlvbmFsIG1hcmtldHBsYWNlLCBtdWx0aS1uYXRpb25hbCwgZ2xvYmFsIGFuZCB0cmFuc25hdGlvbmFsIGNvcnBvcmF0aW9ucyBhbmQgaW50ZXJuYXRpb25hbCB0cmFkaW5nIGNvbXBhbmllcy4gS25vd2xlZGdlIGlzIGdhaW5lZCBpbiB3b3JsZCBvcmdhbmlzYXRpb25hbCBvciByZWdpb25hbCB0cmFkZSwgdHJhZGUgYmxvY2tzIGFuZCBpbnRlcm5hdGlvbmFsIG1hcmtldGluZyBvcHBvcnR1bml0aWVzLCBhbmQgZGV2ZWxvcGVkIGFuZCBsZXNzIGRldmVsb3BlZCBjb3VudHJ5IGNvdW50ZXIgdHJhZGUuDQoyNQ0KRnVsbHkgT25saW5lLEludGVybmFsDQoNCg0KDQoxMg0KDQpVTklUDQpNS1RHMjAwNA0KQ29uc3VtZXIgQmVoYXZpb3VyDQpJbnRyb2R1Y2VzIHRoZSByb2xlIG9mIGNvbnN1bWVyIGJlaGF2aW91ciBhbmQgaG93IGl0IGlzIHNoYXBlZCBieSB0aGUgc29jaWFsIGFuZCBjdWx0dXJhbCBlbnZpcm9ubWVudCBhbmQgdGhlIHBzeWNob2xvZ2ljYWwgZm91bmRhdGlvbnMuIFRoZSB1bml0IGluIGVzc2VuY2UgZm9jdXNlcyBvbiB0aGUgZGVjaXNpb24gcHJvY2Vzc2VzIGluIGNvbnN1bXB0aW9uIGJlaGF2aW91ciBpbiBkaWZmZXJlbnQgYnV5aW5nIHNpdHVhdGlvbnMuIFRoaXMgZGV2ZWxvcHMgdGhlIHN0dWRlbnQncyBhYmlsaXR5IHRvIGludGVncmF0ZSBtYXJrZXRpbmcgcHJvY2Vzc2VzIGF0IGEgaGlnaGVyIGxldmVsLiBGb3IgbWFya2V0ZXJzLCBhbiB1bmRlcnN0YW5kaW5nIG9mIGhvdyBhIGNvbnN1bWVyIHNlbGVjdHMsIHB1cmNoYXNlcywgdXNlcyBhbmQgZGlzcG9zZXMgb2YgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIGlzIHBlcnRpbmVudCB0byBzdWNjZXNzZnVsbHkgbWFuYWdpbmcgdGhlIG1hcmtldGluZyBmdW5jdGlvbi4gQ29uY2VwdHMgZHJhd24gZnJvbSB2YXJpb3VzIGRpc2NpcGxpbmVzIHN1Y2ggYXMgcHN5Y2hvbG9neSwgZWNvbm9taWNzIGFuZCBhbnRocm9wb2xvZ3kgYXJlIGFsc28gZXhhbWluZWQuDQoyNQ0KRnVsbHkgT25saW5lLEludGVybmFsDQoNCg0KDQoxMg0KDQpVTklUDQpNS1RHMzAwMw0KRGlnaXRhbCBNYXJrZXRpbmcgU3RyYXRlZ3kNClRoaXMgdW5pdCBpbnRyb2R1Y2VzIHN0dWRlbnRzIHRvIHRoZSB3b3JsZCBvZiBkaWdpdGFsIG1hcmtldGluZy4gSXQgYnJvYWRlbnMgdW5kZXJzdGFuZGluZyBvZiB0aGUgbm9uLXRlY2huaWNhbCBhc3BlY3RzIG9mIHRoZSBpbnRlcm5ldCBhbmQgaXRzIHN0cmF0ZWdpYyBtYXJrZXRpbmcgYXBwbGljYXRpb25zLiBUaGUgdW5pdCBjb3ZlcnMgaG93IHRoZSBkaWdpdGFsIGVudmlyb25tZW50IGFmZmVjdHMgbWFya2V0aW5nIGRlY2lzaW9ucyB0aHJvdWdoIGlkZW50aWZ5aW5nIHdlYi1iYXNlZCBvcHBvcnR1bml0aWVzIGFuZCB0aHJlYXRzIGZvciBmaXJtcy4gRnVydGhlcm1vcmUsIHRoZSB1bml0IGZvY3VzZXMgb24gbWFqb3IgZGlnaXRhbCBtYXJrZXRpbmcgdG9vbHMgYW5kIHN0cmF0ZWdpZXMgKGUuZy4sIEdvb2dsZSBBZFdvcmRzIGFuZCBTZWFyY2ggRW5naW5lIE9wdGltaXphdGlvbikgdGhhdCBhIGZpcm0gb3IgYnJhbmQgY2FuIGFkb3B0IHRvIGVuZ2FnZSB3aXRoIGNvbnN1bWVycyBhY3Jvc3MgdGhlaXIgcHVyY2hhc2Ugam91cm5leSB1c2luZyB2YXJpb3VzIGRpZ2l0YWwgY2hhbm5lbHMgc3VjaCBhcyBwYWlkLCBvd25lZCwgYW5kIGVhcm5lZCBtZWRpYS4NCjI1DQpGdWxseSBPbmxpbmUsSW50ZXJuYWwNCg0KDQoNCjEyDQoNClVOSVQNCk1LVEcxMDAwDQpEaXNjb3ZlcmluZyBNYXJrZXRpbmcNClVuZGVyc3RhbmRpbmcgdGhlIHJvbGUgbWFya2V0aW5nIHBsYXlzIGluIGJ1c2luZXNzIGFuZCBzb2NpZXR5OyBUaGUgZ2xvYmFsIG1hcmtldGluZyBlbnZpcm9ubWVudDsgQ29uc3VtZXIgYnV5ZXIgYmVoYXZpb3VyOyBNYXJrZXQgc2VnbWVudGF0aW9uLCB0YXJnZXQgbWFya2V0aW5nIGFuZCBwb3NpdGlvbmluZzsgTmV3IHByb2R1Y3QgZGV2ZWxvcG1lbnQgYW5kIHRoZSBwcm9kdWN0IGxpZmUgY3ljbGU7IE1hcmtldGluZyBTdHJhdGVnaWVzICh0aGUgNCBQJ3MpIC0gcHJvZHVjdCwgcHJpY2UsIHBsYWNlIGFuZCBwcm9tb3Rpb247IEV0aGljcyBpbiBtYXJrZXRpbmcuDQoyNQ0KSW50ZXJuYWwsRnVsbHkgT25saW5lDQoNCg0KDQoxMg0KDQpTUEVDSUFMSVpBVElPTg0KU1BVQy1KT1VSTA0KSm91cm5hbGlzbQ0KVGhpcyBzcGVjaWFsaXNhdGlvbiBzZXRzIHRoZSBmb3VuZGF0aW9ucyBmb3IgdGhlIHN0dWR5IG9mIHByYWN0aWNhbCBqb3VybmFsaXNtIGxlYWRpbmcgdG8gdGhlIGFjcXVpc2l0aW9uIG9mIHNraWxscyByZWxldmFudCB0byB0aGUgam91cm5hbGlzbSBwcm9mZXNzaW9uLg0KMTAwDQpGQUxTRQ0KSk9VUjEwMDEsSk9VUjIwMDAsSk9VUjIwMDIsSk9VUjIwMDMNCg0KDQoNClVOSVQNCkpPVVIxMDAxDQpJbnRyb2R1Y3Rpb24gdG8gSm91cm5hbGlzbSAtIEJyb2FkY2FzdA0KQW4gZXhhbWluYXRpb24gb2YgdGhlIG5hdHVyZSwgaGlzdG9yeSBhbmQgZnVuY3Rpb24gb2YgYnJvYWRjYXN0IGpvdXJuYWxpc20gaW4gQXVzdHJhbGlhIGJ5IGFuYWx5c2luZyBhbmQgZXZhbHVhdGluZyB0aGUgcHVibGljLCBjb21tdW5pdHkgYW5kIGNvbW1lcmNpYWwgc2VjdG9ycy4gU3R1ZGVudHMgd2lsbCBkaXNzZWN0IGFuZCBldmFsdWF0ZSBhbGwgYXNwZWN0cyBvZiBicm9hZGNhc3Qgam91cm5hbGlzbSBhbmQgZGV2ZWxvcCB0aGVpciBtdWx0aS1wbGF0Zm9ybSBqb3VybmFsaXN0aWMgc2tpbGxzZXQgYnkgcHJvZHVjaW5nIHJlY29yZGVkIHJhZGlvIHN0b3JpZXMgYW5kIGEgc21hcnQtcGhvbmUgZXNzYXkuDQoyNQ0KSW50ZXJuYWwNCg0KDQpKT1VSNTAxMw0KMTINCg0KVU5JVA0KSk9VUjIwMDANClJhZGlvIE5ld3MNClRoaXMgdW5pdCBlcXVpcHMgc3R1ZGVudHMgdG8gd29yayBpbiBhIHJhZGlvIG5ld3Nyb29tIGVudmlyb25tZW50IHBlcmZvcm1pbmcgYSByYW5nZSBvZiB0YXNrcyBpbiB0aGUgZGV2ZWxvcG1lbnQgb2YgY29tcGxleCByYWRpbyBuZXdzIHN0b3JpZXMuIFN0dWRlbnRzIHdpbGwgdW5kZXJ0YWtlIGludGVuc2l2ZSB0dWl0aW9uIGluIGRpZ2l0YWwgcmVjb3JkaW5nLCBlZGl0aW5nIGFuZCBwcm9kdWN0aW9uIHVzaW5nIGluZHVzdHJ5IHN0YW5kYXJkIGVxdWlwbWVudCwgZW5zdXJpbmcgdGhleSBhcmUgYWJsZSB0byByZWFjdCB0byB0aGUgZGVtYW5kcyBvZiB0aGUgbW9kZXJuIG5ld3MgZW52aXJvbm1lbnQuIFRoZSB1bml0IHdpbGwgZW5jb3VyYWdlIHN0dWRlbnRzIHRvIGRldmVsb3AgY3JpdGljYWwgdGhpbmtpbmcgc2tpbGxzIGFuZCBlc3RhYmxpc2ggcHJvZmVzc2lvbmFsIHByYWN0aWNlcyB3aXRoaW4gam91cm5hbGlzbSdzIGV0aGljYWwgYW5kIGxlZ2FsIHBhcmFtZXRlcnMsIHdoaWxlIHdvcmtpbmcgYm90aCBpbmRlcGVuZGVudGx5IGFuZCBjb2xsYWJvcmF0aXZlbHkgd2l0aGluIGEgbmV3cyB0ZWFtLg0KMjUNCkludGVybmFsDQpKT1VSMTAwMTsxNTY0DQoNCkpPVVI1MDAyDQoxDQoNClVOSVQNCkpPVVIyMDAyDQpWaWRlbyBOZXdzDQpUaGlzIHVuaXQgaW50cm9kdWNlcyBzdHVkZW50cyB0byB0aGUgdGhlb3J5IGFuZCBwcmFjdGljZSBvZiB2aWRlbyBuZXdzIHByb2R1Y3Rpb24gZm9yIHRoZSB3ZWIgYW5kIHRlbGV2aXNpb24uIEl0IGVxdWlwcyBzdHVkZW50cyB3aXRoIHRoZSBjYXBhY2l0eSB0byBkZXZlbG9wIHJlc2VhcmNoLCB3cml0aW5nLCBpbnRlcnZpZXdpbmcgYW5kIHByZXNlbnRhdGlvbiBza2lsbHMgZm9yIHZpZGVvIG5ld3MgcHJvZHVjdGlvbnMgYWNyb3NzIHBsYXRmb3Jtcy4gVGhpcyB1bml0IGFsc28gaW50cm9kdWNlcyBiYXNpYyBjb21wZXRlbmNpZXMgaW4gY2FtZXJhd29yayBhbmQgZWRpdGluZy4NCjI1DQpJbnRlcm5hbA0KSk9VUjEwMDE7MTU2NA0KDQpKT1VSNTAwNQ0KMTINCg0KVU5JVA0KSk9VUjIwMDMNCk5ld3MgV3JpdGluZyBhbmQgUmVwb3J0aW5nDQpBbiBpbnRyb2R1Y3Rpb24gdG8gbmV3cyB3cml0aW5nIGFuZCByZXBvcnRpbmcgZm9yIHB1YmxpY2F0aW9uLCB3aGVyZWJ5IHN0dWRlbnRzIGRldmVsb3AgbmV3cyBnYXRoZXJpbmcsIHdyaXRpbmcgYW5kIHJlc2VhcmNoIHNraWxscyBhbmQgYW4gYXdhcmVuZXNzIG9mIGRpZmZlcmVudCBzdHlsZXMgYW5kIGdlbnJlcyB3aXRoaW4gcHJpbnQgYW5kIG9ubGluZSBqb3VybmFsaXNtLiAgU3R1ZGVudHMgbGVhcm4gaG93IHRvIGdlbmVyYXRlIGlkZWFzLCB1bmRlcnRha2UgcmVzZWFyY2gsIGNvbmR1Y3QgaW50ZXJ2aWV3cyBhbmQgd3JpdGUgaW4gbmV3cyBzdHlsZSB0byB0aWdodCBkZWFkbGluZXMuICBUaGUgaGlnaGx5IHByYWN0aWNhbCBuYXR1cmUgb2YgdGhlIHVuaXQgcHJvdmlkZXMgc3R1ZGVudHMgdGhlIG9wcG9ydHVuaXR5IHRvIGV4cGVyaWVuY2Ugd29yay1pbnRlZ3JhdGVkIGxlYXJuaW5nIHRocm91Z2ggYWN0aW5nIGFzIHJlcG9ydGVycyBmb3IgdGhlIERlcGFydG1lbnQgb2YgSm91cm5hbGlzbcOi4oKs4oSicyBvbmxpbmUgcHVibGljYXRpb24uDQoyNQ0KSW50ZXJuYWwNCkpPVVIxMDAxDQoNCkpPVVI1MDAzDQoyDQoNClNQRUNJQUxJWkFUSU9ODQpTUFVDLVBSV1JJDQpQcm9mZXNzaW9uYWwgV3JpdGluZw0KVGhpcyBzcGVjaWFsaXNhdGlvbiBjb3ZlcnMgdGhlIHN0dWR5IGFuZCBwcmFjdGljZSBvZiBhIHJhbmdlIG9mIGRpZmZlcmVudCB3cml0aW5nIGZvcm1zIGluY2x1ZGluZyBub24tZmljdGlvbiB3cml0aW5nLCBlZGl0aW5nIGFuZCBwdWJsaXNoaW5nIHNraWxscy4NCjEwMA0KRkFMU0UNClBXUlAxMDAwLFBXUlAxMDAzLFBXUlAyMDAxLFBXUlAyMDAwDQoNCg0KDQpVTklUDQpQV1JQMTAwMA0KSW50cm9kdWN0aW9uIHRvIENyZWF0aXZlIGFuZCBQcm9mZXNzaW9uYWwgV3JpdGluZw0KVGhpcyB1bml0IGV4cGxvcmVzIHJlcHJlc2VudGF0aW9uIGluIHdyaXRpbmcgYW5kIGhvdyB0aGUgZHluYW1pYyByZWxhdGlvbnNoaXAgYmV0d2VlbiBTZWxmIGFuZCBPdGhlciBwbGF5cyBhIGNlbnRyYWwgcm9sZSBpbiB0aGUgd3JpdGluZyBwcm9jZXNzLiBUaGUgcmVwcmVzZW50YXRpb24gb2YgdGhlIHNlbGYgYW5kIG9mIG90aGVycyBpcyBjZW50cmFsIHRvIGEgYnJvYWQgcmFuZ2Ugb2Ygd3JpdHRlbiBnZW5yZXMgYW5kIGZvcm1zLiBTdHVkZW50cyBvZiB3cml0aW5nIHdpbGwgZmluZCB0aGF0IHRoZSB1bml0IGludHJvZHVjZXMgdGhlbSB0byBhIHZhcmlldHkgb2YgZ2VucmVzIGFuZCBmb3JtcyBlc3NlbnRpYWwgdG8gdGhlIHBvcnRmb2xpbyBvZiBhIHByb2Zlc3Npb25hbCB3cml0ZXIsIGFuZCB3aWxsIGRpc2NvdmVyIGhvdyBjcmVhdGl2ZSB3cml0aW5nIHRlY2huaXF1ZXMgY2FuIGVucmljaCB0aGVpciBwcm9mZXNzaW9uYWwgd29yay4NCjI1DQpJbnRlcm5hbA0KDQoNClBXUlA1MDIxDQoxDQoNClVOSVQNClBXUlAxMDAzDQpXcml0aW5nLCBSaGV0b3JpYyBhbmQgUGVyc3Vhc2lvbg0KVGhpcyB1bml0IGludHJvZHVjZXMgc3R1ZGVudHMgdG8gdGhlIHJvbGUgb2YgdGhlIHByb2Zlc3Npb25hbCB3cml0ZXIgaW4gdGhlIGZpZWxkIG9mIHB1YmxpYyBkaXNjb3Vyc2UuIEl0IG9mZmVycyBjcml0aWNhbCBhbmQgZXRoaWNhbCBwZXJzcGVjdGl2ZXMgb24gcmhldG9yaWMgYW5kIHBlcnN1YXNpb24sIGFuZCBpbnRyb2R1Y2VzIHN0dWRlbnRzIHRvIHRoZSBzdHJ1Y3R1cmluZyBvZiBhcmd1bWVudHMsIGFuZCB0aGUgZnJhbWluZyBhbmQgY29tbXVuaWNhdGlvbiBvZiBpc3N1ZXMgb24gYmVoYWxmIG9mIGdvdmVybm1lbnQsIGluZHVzdHJ5LCBub24tZ292ZXJubWVudCBvcmdhbmlzYXRpb25zLCBhbmQgaW5kaXZpZHVhbHMuDQoyNQ0KSW50ZXJuYWwNCg0KDQpQV1JQNTAyMg0KMg0KDQpVTklUDQpQV1JQMjAwMQ0KV3JpdGluZywgRWRpdGluZyBhbmQgUHVibGlzaGluZw0KVGhpcyB1bml0IHByb3ZpZGVzIGEgcHJhY3RpY2FsIGludHJvZHVjdGlvbiB0byBlZGl0aW5nLiBTdHVkZW50cyBsZWFybiBhYm91dCB0aGUgZWRpdG9yw6LigqzihKJzIHJvbGUgYW5kIHByb2Zlc3Npb24sIHRoZSBwdWJsaXNoaW5nIHByb2Nlc3MsIGFuZCBlZGl0b3JpYWwgcHJvamVjdCBtYW5hZ2VtZW50OyBhbmQgdGhleSBsZWFybiBhbmQgcHJhY3RpY2UgdGhlIHNraWxscyBuZWVkZWQgZm9yIHByb2Zlc3Npb25hbCBwcm9vZnJlYWRpbmcgYW5kIGNvcHllZGl0aW5nLCBpbmNsdWRpbmcgbGFuZ3VhZ2Ugc2tpbGxzLCBvbiB0aGUgcGFnZSBhbmQgdGhlIHNjcmVlbi4gU3R1ZGVudCBsZWFybmluZyBpcyBncmFkdWF0ZWQgdGhyb3VnaCBhIHNlcmllcyBvZiBzdWNjZXNzaXZlbHkgaGlnaGVyLWxldmVsIGVkaXRpbmcgdGFza3MsIHdoaWNoIHN0dWRlbnRzIHByYWN0aWNlIHRob3JvdWdobHkgaW4gd29ya3Nob3BzLCBhbmQgYXJlIGFzc2Vzc2VkIGluIGJlZm9yZSBtb3ZpbmcgdG8gYSBoaWdoZXIgbGV2ZWwuDQoyNQ0KSW50ZXJuYWwNCg0KDQpQV1JQNTAwMw0KMQ0KDQpVTklUDQpQV1JQMjAwMA0KVHJpY2tzIG9mIFRydXRoIGFuZCBBdXRoZW50aWNpdHkNClRoaXMgdW5pdCBleHBsb3JlcyBpc3N1ZXMgb2YgdHJ1dGggYW5kIGF1dGhlbnRpY2l0eSBpbiBwcm9mZXNzaW9uYWwgd3JpdGluZyBhbmQgcHVibGlzaGluZywgcHJvdmlkaW5nIHN0dWRlbnRzIHdpdGggYW4gdW5kZXJzdGFuZGluZyBvZiB0aGUgY3VsdHVyYWwsIGV0aGljYWwgYW5kIGxlZ2FsIGlzc3VlcyBvZiB3cml0aW5nIGZvciBwdWJsaWNhdGlvbi4gSGlzdG9yaWNhbCBhbmQgY29udGVtcG9yYXJ5IGNhc2VzIG9mIGZyYXVkLCBmYWtlZCBpZGVudGl0eSwgcGxhZ2lhcmlzbSwgaG9heCwgdGhlIHJvbGUgb2YgdGhlIGF1dGhvciBhbmQgdGhlIGJsdXJyaW5nIG9mIGdlbnJlIGJvdW5kYXJpZXMgYXJlIHVzZWQgdG8gaGlnaGxpZ2h0IHRoZSBwcm9mZXNzaW9uYWwgYW5kIHBlcnNvbmFsIHJlc3BvbnNpYmlsaXRpZXMgYW5kIGRpbGVtbWFzIG9mIHdyaXRpbmcgYW5kIHB1Ymxpc2hpbmcgaW4gdGhlIHB1YmxpYyBkb21haW4uDQoyNQ0KSW50ZXJuYWwNCg0KDQpQV1JQNTAwMQ0KMg0KDQpTUEVDSUFMSVpBVElPTg0KU1BVQy1ITFREQQ0KSGVhbHRoIERhdGENClRoaXMgc3BlY2lhbGlzYXRpb24gYWxsb3dzIHVuZGVyZ3JhZHVhdGUgc3R1ZGVudHMgdG8gY29tYmluZSBzdHVkaWVzIGluIGhlYWx0aCBkYXRhIChpbmNsdWRpbmcgYmlvc3RhdGlzdGljcywgZXBpZGVtaW9sb2d5LCByZXNlYXJjaCBkZXNpZ24gYW5kIGhlYWx0aCBjYXJlIHN5c3RlbXMpLiBUaGUgc3BlY2lhbGlzYXRpb24gY29uc2lzdHMgb2YgZm91ciB1bml0cyBkZWFsaW5nIHdpdGggYmlnIGRhdGEsIGhlYWx0aCBnb3Zlcm5hbmNlLCBHZW9ncmFwaGljIEluZm9ybWF0aW9uIFN5c3RlbSAoR0lTKSwgdmlzdWFsaXNhdGlvbiBhbmQgdGhlIGFwcGxpY2F0aW9uIG9mIGhlYWx0aCBkYXRhIHByb2R1Y2VkIGJ5IG1hY2hpbmUgbGVhcm5pbmcgYW5kIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlLiBUaGUgc3R1ZGVudHMgZW5yb2xsZWQgaW4gdGhlIHNwZWNpYWxpc2F0aW9uIHdpbGwgYWxzbyBzdHVkeSBleGlzdGluZyB1bml0cyBpbiBiaW9zdGF0aXN0aWNzLCBlcGlkZW1pb2xvZ3ksIHJlc2VhcmNoIGRlc2lnbiBhbmQgaGVhbHRoIGNhcmUgc3lzdGVtcy4NCjEwMA0KRkFMU0UNClBVQkgyMDA1LFNQQVQxMDA3LFBVQkgyMDA2LFBVQkgzMDA2DQoNCg0KDQpVTklUDQpQVUJIMjAwNQ0KQmlnIERhdGEgYW5kIEhlYWx0aA0KVGhpcyB1bml0IHdpbGwgcHJvdmlkZSB0aGUgb3Bwb3J0dW5pdHkgZm9yIHN0dWRlbnRzIHRvIGxlYXJuIGhvdyB0byB1c2UgYmlnIGRhdGEgdG8gY29tcHJlaGVuZCBjb21wbGV4IHJlYWwtd29ybGQgaGVhbHRoIGNoYWxsZW5nZXMuIEl0IHByb3ZpZGVzIGFuIGludHJvZHVjdGlvbiB0byBob3cgZGF0YSBhcmUgZ2VuZXJhdGVkIGFuZCB1c2VkIGluIGhlYWx0aCBjb250ZXh0cy4gSXQgZ2l2ZXMgc3R1ZGVudHMgdGhlIG9wcG9ydHVuaXR5IHRvIGludmVzdGlnYXRlIHRoZSBtYWpvciBzb3VyY2VzIG9mIGRhdGEgcmVsZXZhbnQgdG8gaGVhbHRoIGFuZCBleHBsb3JlIGhvdyB0aGlzIGluZm9ybWF0aW9uIGNhbiBiZSB1c2VkIHRvIGNyZWF0ZSBldmlkZW5jZSBmb3IgcG9saWN5LCByZXNlYXJjaCBhbmQgaW5kaXZpZHVhbCBiZWhhdmlvdXIgY2hhbmdlLg0KMjUNCkZ1bGx5IE9ubGluZSxJbnRlcm5hbA0KDQoNCg0KMQ0KDQpVTklUDQpTUEFUMTAwNw0KRnVuZGFtZW50YWxzIG9mIEdlb2dyYXBoaWMgSW5mb3JtYXRpb24gU3lzdGVtcw0KVGhpcyB1bml0IGlzIGFuIGludHJvZHVjdGlvbiB0byB0aGUgYXBwbGljYXRpb24sIHN0cnVjdHVyZSBhbmQgZnVuY3Rpb24gb2YgZ2VvZ3JhcGhpYyBpbmZvcm1hdGlvbiBzeXN0ZW1zIChHSVMpLiBTdHVkZW50cyB3aWxsIGRldmVsb3Agc2tpbGxzIGFuZCBrbm93bGVkZ2UgYXJvdW5kIHRoZSBpbnB1dCBhbmQgbWFuYWdlbWVudCwgYW5hbHlzaXMgYW5kIHByZXNlbnRhdGlvbiBvZiBnZW9ncmFwaGljIGRhdGEgYW5kIHJlbGF0aW9uc2hpcHMuIFRoZXkgd2lsbCBhbHNvIGRldmVsb3AgZXhwZXJ0aXNlIGluIHRoZSBzdG9yYWdlIGFuZCBzaW1wbGUgbWFuaXB1bGF0aW9uIG9mIHNwYXRpYWwgZGF0YSB0b2dldGhlciB3aXRoIHRoZSBpbnRlZ3JhdGlvbiBhbmQgbWFuYWdlbWVudCBvZiBzcGF0aWFsIGFuZCBhdHRyaWJ1dGUgZGF0YS4gVGhlcmUgd2lsbCBiZSBhIHBhcnRpY3VsYXIgZm9jdXMgaW4gdGhpcyB1bml0IG9uIHRoZSBhcHBsaWNhdGlvbiBvZiB0aGUgcHJpbmNpcGxlcyBvZiBhY2FkZW1pYyBpbnRlZ3JpdHkgYW5kIGFjYWRlbWljIHJlZmVyZW5jaW5nIGNvbnZlbnRpb25zLg0KMjUNCkZ1bGx5IE9ubGluZSxJbnRlcm5hbA0KDQoNClNQQVQ1MDA2LFNQQVQyMDExDQoxDQoNClVOSVQNClBVQkgyMDA2DQpQcml2YWN5IGFuZCBDeWJlciBTZWN1cml0eTogSGVhbHRoIERhdGEgR292ZXJuYW5jZQ0KVGhpcyB1bml0IHdpbGwgaW50cm9kdWNlIHN0dWRlbnRzIHRvIGhlYWx0aCBkYXRhIGdvdmVybmFuY2UsIGluY2x1ZGluZyByZWxldmFudCBwcml2YWN5IGFuZCBkYXRhIHByb3RlY3Rpb24gbGF3LiBTdHVkZW50cyB3aWxsIGV4cGxvcmUgY29udGVtcG9yYXJ5IGNvbmNlcm5zIGFib3V0IHRoZSBjb2xsZWN0aW9uLCBsaW5rYWdlLCBzdG9yYWdlIGFuZCB1c2Ugb2YgaGVhbHRoIGRhdGEgaW5jbHVkaW5nIHRyYW5zcGFyZW5jeSwgaW5mb3JtZWQgY29uc2VudCwgY29uZmlkZW50aWFsaXR5LCB0aGlyZCBwYXJ0eSBhY2Nlc3MgYW5kIHRoZSBhcHBsaWNhdGlvbiBvZiBhcnRpZmljaWFsIGludGVsbGlnZW5jZS4gVGhleSB3aWxsIGFsc28gZW5nYWdlIHdpdGggaXNzdWVzIG9mIGRhdGEgcHJpdmFjeSBhbmQgcHJvdGVjdGlvbi4NCjI1DQpJbnRlcm5hbCxGdWxseSBPbmxpbmUNCg0KDQoNCjENCg0KVU5JVA0KUFVCSDMwMDYNCkludHJvZHVjdGlvbiB0byBBcnRpZmljaWFsIEludGVsbGlnZW5jZSwgTWFjaGluZSBMZWFybmluZyBhbmQgSGVhbHRoDQpUaGlzIHVuaXQgaW50cm9kdWNlcyBzdHVkZW50cyB0byB0aGUgZnVuZGFtZW50YWwgY29uY2VwdHMgb2YgbWFjaGluZSBsZWFybmluZyAoTUwpIGFuZCBhcnRpZmljaWFsIGludGVsbGlnZW5jZSAoQUkpLiBTdHVkZW50cyB3aWxsIGhhdmUgdGhlIG9wcG9ydHVuaXR5IHRvIGV4cGxvcmUgdGhlIHVzZXMgYW5kIGltcGFjdCBvZiBtYWNoaW5lIGxlYXJuaW5nIGFuZCBhcnRpZmljaWFsIGludGVsbGlnZW5jZSBpbiBwdWJsaWMgaGVhbHRoIGFuZCBoZWFsdGggY2FyZS4gVGhleSB3aWxsIGFkZHJlc3MgdGhlIGFkdmFudGFnZXMsIGxpbWl0YXRpb25zIGFuZCBzY29wZSBvZiBNTC9BSSBmcm9tIGEgaGVhbHRoIHBlcnNwZWN0aXZlLiBUaGUgdW5pdCB3aWxsIGFsc28gaGF2ZSBhIHByYWN0aWNhbCBjb21wb25lbnQgaW4gd2hpY2ggc3R1ZGVudHMgdXNlIHRoZSBkYXRhIGdlbmVyYXRlZCBieSBNTC9BSSB0byBleHBsb3JlIGNvbnRlbXBvcmFyeSBoZWFsdGggaXNzdWVzLg0KMjUNCkludGVybmFsDQpQVUJIMjAwNQ0KDQoNCjINCg0KVU5JVA0KRk9SUzEwMDUNCkZvdW5kYXRpb25zIG9mIEZvcmVuc2ljIFNjaWVuY2UNCkZvdW5kYXRpb25zIG9mIEZvcmVuc2ljIFNjaWVuY2UgaXMgYSBnZW5lcmFsIGludHJvZHVjdGlvbiB0byB0aGUgaGlzdG9yeSwgdW5kZXJseWluZyBwcmluY2lwbGVzIGFuZCBjb250ZW1wb3JhcnkgaXNzdWVzIGluIGZvcmVuc2ljIHNjaWVuY2UuIEl0IHdpbGwgcHJvdmlkZSBhbiBvdmVydmlldyBvZiB0aGUgZm9yZW5zaWMgcHJvY2VzcyBmcm9tIGNyaW1lIHNjZW5lIHRvIGNvdXJ0IGFuZCB0aGUgcm9sZSBvZiB0aGUgZm9yZW5zaWMgc2NpZW50aXN0IGFzIGFuIGV4cGVydCB3aXRuZXNzLiBJdCBhbHNvIGluY2x1ZGVzIGFuIGludHJvZHVjdGlvbiB0byBmb3JlbnNpYyBhbmFseXNpcyBhbmQgaW50ZXJwcmV0YXRpb24gYXMgaWxsdXN0cmF0ZWQgYnkgc2VsZWN0ZWQgY2FzZSBzdHVkaWVzLiBTdHVkZW50cyBhdHRlbmQgYSB0d28taG91ciBzZW1pbmFyIHBlciB3ZWVrIGFuZCBhIG9uZS1ob3VyIHdvcmtzaG9wIGZvcnRuaWdodGx5IHdpdGggc3VwcG9ydGluZyBvbmxpbmUgbWF0ZXJpYWwuDQoyNQ0KSW50ZXJuYWwNCg0KDQoNCjENCg0KVU5JVA0KUFNZQzEwMDANCkludHJvZHVjdGlvbiB0byBQc3ljaG9sb2d5DQpCcm9hZCBvdXRsaW5lIG9mIHRoZSBuYXR1cmUsIG1ldGhvZHMsIGFuZCBmaWVsZHMgb2YgcHN5Y2hvbG9neS4gSW50cm9kdWN0aW9uIHRvIHBzeWNob2xvZ3kgYW5kIG1ldGhvZG9sb2dpY2FsIGlzc3VlcyByZWxhdGVkIHRvIHRoZSBzdHVkeSBvZiBodW1hbiBiZWluZ3MgYW5kIHRoZSByZWxldmFuY2Ugb2YgYm90aCBmb3IgaW50ZXJhY3Rpb25zIHdpdGggaW5kaXZpZHVhbHMgYW5kIGdyb3Vwcy4gSW50cm9kdWN0aW9uIHRvIHNvY2lhbCBwc3ljaG9sb2d5LCBwZXJzb25hbGl0eSwgZGV2ZWxvcG1lbnQsIGxlYXJuaW5nLCBtZW1vcnksIGFuZCBtb3RpdmF0aW9uLg0KMjUNCkludGVybmFsLEZ1bGx5IE9ubGluZQ0KDQoNCg0KMTINCg0KVU5JVA0KQ0hFTTEwMDYNClBoYXJtYWNldXRpY2FsIENoZW1pc3RyeQ0KVGhpcyB1bml0IHByb3ZpZGVzIGFuIGludHJvZHVjdGlvbiB0byBjb3JlIGNvbmNlcHRzIHdpdGhpbiBwaGFybWFjZXV0aWNhbCBjaGVtaXN0cnkuIFN0dWRlbnRzIHdpbGwgYmUgaW50cm9kdWNlZCB0byB0aGUgcHJpbmNpcGFsIGxhYm9yYXRvcnkgdGVjaG5pcXVlcyB1c2VkIGZvciBkcnVnIGFuYWx5c2lzIGFuZCBsZWFybiBhYm91dCBhIHJhbmdlIG9mIHBoeXNpby1jaGVtaWNhbCBkcnVnIHByb3BlcnRpZXMgd2hpY2ggaW5mbHVlbmNlIHRoZWlyIHBoYXJtYWNldXRpY2FsIGZvcm11bGF0aW9uLCBwaGFybWFjb2xvZ3kgYW5kIGNsaW5pY2FsIHVzZS4gIFRoaXMgdW5pdCBpcyBkaXZpZGVkIGludG8gdHdvIGxlYXJuaW5nIG1vZHVsZXMuIE1vZHVsZSAxOiBUaXRyaW1ldHJpYyBhbmFseXNpcyBvZiBkcnVncywgc3BlY3Ryb3Bob3RvbWV0cmljIGFuYWx5c2lzIG9mIGRydWdzLCBjaHJvbWF0b2dyYXBoaWMgYW5hbHlzaXMgb2YgZHJ1Z3MsIGFuYWx5c2lzIG9mIGRydWcgZm9ybXVsYXRpb25zLiBNb2R1bGUgMjogS2V5IGZ1bmN0aW9uYWwgZ3JvdXBzIGluIGRydWdzLCBkcnVnIGlvbmlzYXRpb24sIGRydWcgc29sdWJpbGl0eSwgZHJ1ZyBzdGVyZW9jaGVtaXN0cnksIGRydWcgc3RhYmlsaXR5Lg0KMjUNCkludGVybmFsDQpCQ0NCMjAwMA0KDQoNCjINCg0KVU5JVA0KUEhBUjIwMDANCkZvdW5kYXRpb25zIG9mIFBoYXJtYWNldXRpY3MNClRoaXMgdW5pdCBpbnRyb2R1Y2VzIHN0dWRlbnRzIHRvIHRoZSBwaGFybWFjZXV0aWNhbCBzY2llbmNlIGFuZCBmb3JtdWxhdGlvbiBvZiBsaXF1aWQgYW5kIHNvbGlkIGRvc2FnZSBmb3JtcyBQaGFybWFjZXV0aWNhbCBzY2llbmNlIGFzcGVjdHM6IFBoeXNpY29jaGVtaWNhbCBwcm9wZXJ0aWVzIG9mIHBoYXJtYWNldXRpY2FsIHNvbGlkcyBpbmNsdWRpbmcgY3J5c3RhbGxpbmUgZm9ybSwgc29sdWJpbGl0eSBhbmQgZGlzdHJpYnV0aW9uLiBQb3dkZXIgdGVjaG5vbG9neSBpbmNsdWRpbmcgcGFydGljbGUgc2l6ZSBhbmFseXNpcywgcGFydGljbGUgc2l6ZSByZWR1Y3Rpb24sIHBvd2RlciBtaXhpbmcgYW5kIGRyeWluZy4gUGh5c2ljb2NoZW1pY2FsIHByb3BlcnRpZXMgb2YgcGhhcm1hY2V1dGljYWwgc29sdXRpb25zIGluY2x1ZGluZyBzb2x2ZW50cywgZWZmZWN0cyBvZiBwSCwgYnVmZmVycywgcGhhc2UgcnVsZSBhbmQgcGhhc2UgZGlhZ3JhbXMuIEZvcm11bGF0aW9uIGFzcGVjdHM6IEZvcm11bGF0aW9uLCBwcmVwYXJhdGlvbiBhbmQgZXZhbHVhdGlvbiBvZiBzb2xpZCBvcmFsIGRvc2FnZSBmb3JtcyBhbmQgcGhhcm1hY2V1dGljYWwgc29sdXRpb25zLiBQcmluY2lwbGVzIG9mIHByZXNlcnZhdGlvbiwgZmxhdm91cmluZywgY29sb3VyaW5nIGFuZCBzdGFiaWxpc2F0aW9uIG9mIHBoYXJtYWNldXRpY2FsIHNvbHV0aW9ucy4NCjI1DQpJbnRlcm5hbA0KQ0hFTTEwMDYNCg0KDQoxDQoNClVOSVQNClBIQVIyMDAxDQpQaGFybWFjZXV0aWNhbCBGb3JtdWxhdGlvbg0KVGhpcyB1bml0IGludHJvZHVjZXMgc3R1ZGVudHMgdG8gdGhlIHBoYXJtYWNldXRpY2FsIHNjaWVuY2UgYW5kIGZvcm11bGF0aW9uIG9mIGxpcXVpZC1pbi1saXF1aWQsIHNvbGlkLWluLWxpcXVpZCwgc29saWQgYW5kIHNlbWktc29saWQgZG9zYWdlIGZvcm1zLiBQaGFybWFjZXV0aWNhbCBTY2llbmNlIGFzcGVjdHM6IHN1cmZhY2UgcGhlbm9tZW5hLCBzdXJmYWNlIGFuZCBpbnRlcmZhY2lhbCB0ZW5zaW9uOyBzdXJmYWN0YW50cywgbWljZWxsZSBmb3JtYXRpb247IHByb3BlcnRpZXMgb2YgY29sbG9pZHMgYW5kIHJoZW9sb2d5LiBGb3JtdWxhdGlvbiBBc3BlY3RzOiBGb3JtdWxhdGlvbiwgcHJlcGFyYXRpb24gYW5kIGV2YWx1YXRpb24gb2Ygc2VtaS1zb2xpZCBkb3NhZ2UgZm9ybXMsIHN1cHBvc2l0b3JpZXMgYW5kIHR3byBwaGFzZSBsaXF1aWQtYmFzZWQgcHJlcGFyYXRpb25zLiBQcmVzZXJ2YXRpb24gb2YgdHdvIHBoYXNlIHN5c3RlbXMuDQoyNQ0KSW50ZXJuYWwNClBIQVIyMDAwOzMxMDM4NA0KDQoNCjINCg0KVU5JVA0KUFVCSDEwMDENCkludHJvZHVjdGlvbiB0byBIZWFsdGgsIFNhZmV0eSBhbmQgRW52aXJvbm1lbnQNCkEgYnJvYWQgb3ZlcnZpZXcgb2Ygc2VsZWN0ZWQgZGlzY2lwbGluZXMgd2l0aGluIHRoZSBmaWVsZCBvZiBoZWFsdGgsIHNhZmV0eSBhbmQgZW52aXJvbm1lbnQuDQoyNQ0KSW50ZXJuYWwsRnVsbHkgT25saW5lDQoNCg0KDQoxDQoNClVOSVQNClNUQVQxMDAzDQpJbnRyb2R1Y3Rpb24gdG8gRGF0YSBTY2llbmNlDQpUaGlzIHVuaXQgd2lsbCBwcm92aWRlIGEgYnJvYWQgaW50cm9kdWN0aW9uIHRvIGZvdXIga2V5IGFzcGVjdHMgb2YgZGF0YSBzY2llbmNlOiBkYXRhIHJldHJpZXZhbCBhbmQgbWFuaXB1bGF0aW9uLCBkYXRhIHZpc3VhbGlzYXRpb24sIHN0YXRpc3RpY2FsIGNvbXB1dGF0aW9uIGFuZCBtYWNoaW5lIGxlYXJuaW5nLCBhbmQgcHJlc2VudGF0aW9uIGFuZCBjb21tdW5pY2F0aW9uLiBTdHVkZW50cyB3aWxsIHVzZSBkYXRhIGZyb20gYSB2YXJpZXR5IG9mIHNvdXJjZXMsIGJlIGludHJvZHVjZWQgdG8gY29udGVtcG9yYXJ5IGNvbXB1dGluZyBhbmQgZGF0YWJhc2UgZW52aXJvbm1lbnRzIHN1Y2ggYXMgUiBhbmQgU1FMLCBhbmQgYmUgZXhwb3NlZCB0byBjYXNlIHN0dWRpZXMgZnJvbSBvdXRzaWRlIHRoZSBjbGFzc3Jvb20uIFRocm91Z2ggdGhpcyB1bml0IHN0dWRlbnRzIHdpbGwgYmVjb21lIGFjcXVhaW50ZWQgd2l0aCB0aGUgY2hhbGxlbmdlcyBvZiBjb250ZW1wb3JhcnkgZGF0YSBzY2llbmNlIGFuZCBnYWluIGFuIGFwcHJlY2lhdGlvbiBvZiB0aGUgZm91bmRhdGlvbmFsIHNraWxscyBuZWNlc3NhcnkgdG8gdHVybiBkYXRhIGludG8gaW5mb3JtYXRpb24uDQoyNQ0KSW50ZXJuYWwNCg0KDQoNCjENCg0KVU5JVA0KSVNFQzIwMDENCkZ1bmRhbWVudGFsIENvbmNlcHRzIG9mIERhdGEgU2VjdXJpdHkNClRoaXMgdW5pdCB3aWxsIGNvdmVyIHRoZSBjb3JlIGluZm9ybWF0aW9uIHNlY3VyaXR5IHByaW5jaXBsZXMgb2YgY29uZmlkZW50aWFsaXR5LCBpbnRlZ3JpdHkgYW5kIGF2YWlsYWJpbGl0eS4gVGhlc2UgY29yZSBwcmluY2lwbGVzIHdpbGwgYmUgYXBwbGllZCB0byB0aGUgY29uY2VwdHMgb2YgaW5mb3JtYXRpb24gcmlzayBtYW5hZ2VtZW50LCBhbmQgdGhlIGFuYWx5c2lzIGFuZCBoYW5kbGluZyBvZiBjb21wcm9taXNlZCBzeXN0ZW1zLiBUaGUgZXRoaWNzIGFyb3VuZCBjb21wdXRlciBjcmltZSwgcHJpdmFjeSwgYW5kIGludGVsbGVjdHVhbCBwcm9wZXJ0eSBhcmUgY292ZXJlZCBpbiBkZXRhaWwuIEZpbmFsbHksIHRoZSB1bml0IHdpbGwgY292ZXIgdGhlIGNyaXRlcmlhIGFuZCBjb250cm9scyBmb3IgaW5mb3JtYXRpb24gY2xhc3NpZmljYXRpb24uDQoyNQ0KSW50ZXJuYWwNCg0KDQoNCjENCg0KVU5JVA0KQ09NUDEwMDUNCkZ1bmRhbWVudGFscyBvZiBQcm9ncmFtbWluZw0KVGhpcyB1bml0IGFpbXMgYXQgZXF1aXBwaW5nIHN0dWRlbnRzIHdpdGggdGhlIGFiaWxpdHkgdG8gd3JpdGUgc2ltcGxlIHByb2dyYW1zIGFzIHBhcnQgb2YgbWFuYWdpbmcgbGFyZ2Ugdm9sdW1lcyBvZiBkYXRhLiBUb3BpY3MgaW5jbHVkZSBkYXRhIHJlcHJlc2VudGF0aW9uIGluIGEgY29tcHV0ZXIsIGFsZ29yaXRobSBkZXNpZ24sIHN1Ym1vZHVsZXMsIEJvb2xlYW4gZXhwcmVzc2lvbnMsIHNlbGVjdGlvbiBhbmQgcmVwZXRpdGlvbiBjb250cm9sIHN0cnVjdHVyZXMsIGJhc2ljIE9iamVjdCBPcmllbnRlZCBwcm9ncmFtbWluZyBkZXNpZ24gYW5kIEZpbGUgSS9PLiBUaGVzZSB3aWxsIGJlIGRpc2N1c3NlZCBpbiB0aGUgY29udGV4dCBvZiBpbXBsZW1lbnRhdGlvbiBpbiB0aGUgUHl0aG9uIHByb2dyYW1taW5nIGxhbmd1YWdlLg0KMjUNCkludGVybmFsDQoNCg0KQ09NUDEwMDE7Q09NUDEwMDc7Q09NUDUwMDUNCjEyDQoNClVOSVQNCkJJT0wyMDA0DQpSZXNlYXJjaCBTa2lsbHMgZm9yIEJpb21lZGljYWwgU2NpZW5jZXMNCkluIHRoaXMgdW5pdCwgc3R1ZGVudHMgd2lsbCBjb250aW51ZSB0aGVpciBqb3VybmV5IHRvIGJlY29taW5nIGJpb21lZGljYWwgc2NpZW5jZSByZXNlYXJjaGVycyBnYWluaW5nIGludHJvZHVjdG9yeSBza2lsbHMgYW5kIHByYWN0aWNhbCBleHBlcmllbmNlIGVuYWJsaW5nIHRoZW0gdG8gdW5kZXJzdGFuZCBob3cgdG8gYXBwbHkgcmVzZWFyY2ggbWV0aG9kcyB0byBldmFsdWF0ZSB0aGUgYm9keSBvZiBldmlkZW5jZSBpbiBiaW9tZWRpY2luZS4gVGhlIHVuaXQgd2lsbCBjb21tZW5jZSB3aXRoIGFuIGludHJvZHVjdGlvbiB0byBzY2llbnRpZmljIG1ldGhvZHMsIHdoZXJlIHByYWN0aWNhbCBleHBlcmllbmNlIGluIHRoZSBkZXZlbG9wbWVudCBvZiByZXNlYXJjaCBxdWVzdGlvbnMsIHJlc2VhcmNoIGV0aGljcywgcmVndWxhdG9yeSBjb25zaWRlcmF0aW9uLCBhbmQgcmlzayBtYW5hZ2VtZW50IHdpbGwgYmUgdW5kZXJ0YWtlbi4gVGhpcyB3aWxsIGJlIGNvbXBsZW1lbnRlZCBieSBmdXJ0aGVyIGRldmVsb3BtZW50IG9mIHNraWxscyBpbiBzY2llbnRpZmljIHJlYWRpbmcgYW5kIHdyaXRpbmcsIHdoZXJlIHN0dWRlbnRzIHdpbGwgbGVhcm4gaG93IHRvIGlkZW50aWZ5IGFuZCBjcml0aWNhbGx5IHJldmlldyBsaXRlcmF0dXJlIGFuZCB3cml0ZSBzY2llbnRpZmljYWxseSBmb3IgZGlzcGFyYXRlIGF1ZGllbmNlLiBUaGUgYXJ0IG9mIGNyaXRpY2FsIHRoaW5raW5nLCBkYXRhIGFuYWx5c2lzIGFuZCBwcmVzZW50YXRpb24gc2tpbGxzIHdpbGwgYWxzbyBiZSBpbnRyb2R1Y2VkLiAgU3R1ZGVudHMgd2lsbCBiZSBleHBvc2VkIHRvIGF1dGhlbnRpYyByZXNlYXJjaCBhY3Rpdml0aWVzIGFuZCB3aWxsIGJlZ2luIHRvIGRldmVsb3AgbGVhZGVyc2hpcCBhbmQgZW50cmVwcmVuZXVyaWFsIHNraWxscy4NCjI1DQpJbnRlcm5hbCxPbmxpbmUNCg0KDQoNCjEyDQoNClVOSVQNCkJJT0wzMDA5DQpBZHZhbmNlZCBNb2xlY3VsYXIgVGVjaG5pcXVlcw0KVGhpcyB1bml0IGFkZHJlc3NlcyB0aGUgcHJpbmNpcGxlcyBhbmQgYXBwbGljYXRpb25zIG9mIGVtZXJnaW5nIGFuZCBiZXN0LXByYWN0aWNlIGFkdmFuY2VkIGJpb21vbGVjdWxhciB0ZWNobmlxdWVzLiAgSW4gYSBzZXJpZXMgb2YgY2FzZS1zdHVkaWVzIGludm9sdmluZyBib3RoIGhhbmRzLW9uIGFuZCB0aGVvcmV0aWNhbCBpbnZvbHZlbWVudCwgc3R1ZGVudHMgd2lsbCBsZWFybiB0aGUgYXBwcm9wcmlhdGUgdXRpbGlzYXRpb24gb2YgbWV0aG9kcyBmb3Igc3R1ZHlpbmcgY2VsbHMgYW5kIG1vbGVjdWxlcy4gVGhpcyB3aWxsIGluY2x1ZGUsIGJ1dCBub3QgYmUgbGltaXRlZCB0byBtZXRob2RzIHVzZWQgaW46IHRpc3N1ZSBjdWx0dXJlIGFuZCBjZWxsIGJhc2VkIGFzc2F5czsgcHJvdGVpbiBleHByZXNzaW9uOyBhbmQgZ2VuZXRpYyBhbmFseXNlcyBhbmQgZ2VuZXRpYyBtYW5pcHVsYXRpb24uDQoyNQ0KSW50ZXJuYWwNCkdFTkUzMDAwDQoNCg0KMQ0KDQpVTklUDQpCSU9MMzAwOA0KQWR2YW5jZWQgQmlvaW5mb3JtYXRpY3MNCkluIHRoaXMgdW5pdCwgc3R1ZGVudHMgd2lsbCB1c2UgdGhlIGNvbW1hbmQgbGluZSB0byB1bmRlcnRha2UgdGhlIGFuYWx5c2lzIG9mIHNlcXVlbmNlIGRhdGEgYW5kIHRoZW4gZGVyaXZlIGJpb2xvZ2ljYWwgaW5mZXJlbmNlIGFuZCBpbnRlcnByZXRhdGlvbiBmcm9tIHRob3NlIGRhdGEsIHVzaW5nIGRpdmVyc2UgcHJvZ3JhbXMgYW5kIHNjcmlwdGluZy4gIFRvcGljcyBpbmNsdWRlIHNlcXVlbmNlIHF1YWxpdHkgY29udHJvbCwgbWFwcGluZywgdmFyaWFudCBjYWxsaW5nLCBkaWZmZXJlbnRpYWwgZXhwcmVzc2lvbiBhbmQgdmlzdWFsaXNhdGlvbjsgYXMgYXBwbGllZCB0byB0aGUgd2hvbGUgZ2Vub21lLCB0aGUgZXBpZ2Vub21lIGFuZCB0aGUgdHJhbnNjcmlwdG9tZS4gIFRoZSByYXBpZCBhbmQgbGFyZ2Utc2NhbGUgYWNxdWlzaXRpb24gb2YgZGF0YSByZW5kZXJzIGJpb2luZm9ybWF0aWNzIGFuIGVzc2VudGlhbCBza2lsbCBmb3IgbW9kZXJuIEJpb2xvZ2lzdHMuDQoyNQ0KT25saW5lDQpCSU9MMjAwMQ0KDQoNCjEyDQoNClVOSVQNCk1FRFMzMDA1DQpIdW1hbiBSZXByb2R1Y3RpdmUgU2NpZW5jZQ0KVGhpcyB1bml0IHdpbGwgZXhwbG9yZSBodW1hbiByZXByb2R1Y3RpdmUgYW5hdG9teSwgcGh5c2lvbG9neSBhbmQgaGlzdG9sb2d5LiBTdHVkZW50cyB3aWxsIGJlIGludHJvZHVjZWQgdG8gbW9kZXJuIGNvbnRyYWNlcHRpdmUgbWV0aG9kcywgcHJlZ25hbmN5IGFuZCBlYXJseSBodW1hbiBkZXZlbG9wbWVudCwgYmlydGggYW5kIGxhY3RhdGlvbiwgYW5kIHJlcHJvZHVjdGl2ZSBwYXRob2xvZ2llcy4gQXNzaXN0ZWQgcmVwcm9kdWN0aXZlIHRlY2hub2xvZ3kgKEFSVCkgYW5kIGl0cyBhc3NvY2lhdGVkIGV0aGljcywgd2lsbCBiZSBleHBsb3JlZCBpbiBkZXRhaWwsIHdpdGggYW4gaW5kdXN0cnkgc2l0ZSB2aXNpdC4gU3R1ZGVudHMgd2lsbCBiZSByZXF1aXJlZCB0byByZXNlYXJjaCBhbmQgY29tbXVuaWNhdGUgdGhlaXIgZmluZGluZ3Mgb24gYSBjb250ZW1wb3JhcnkgdG9waWMgaW4gaHVtYW4gcmVwcm9kdWN0aXZlIGhlYWx0aC4NCjI1DQpJbnRlcm5hbA0KSFVNQjEwMDE7SFVNQjIwMDEsQkNDQjIwMDAsSFVNQjIwMDMsSFVNQjIwMTIsSFVNQjIwMTMNCg0KDQoyDQoNClVOSVQNCkhVTUIyMDAwDQpBbmF0b215IGFuZCBOZXVyb3NjaWVuY2UNCkdyb3NzIG9yZ2FuaXNhdGlvbiBvZiB0aGUgaHVtYW4gYnJhaW4gaW4gcmVsYXRpb24gdG8gaXRzIGVtYnJ5b2xvZ2ljYWwgZGV2ZWxvcG1lbnQ7IEZ1bmN0aW9uIGFuYXRvbXkgb2YgdGhlIG11c2N1bG9za2VsZXRhbCBzdHJ1Y3R1cmVzLCB2aXNjZXJhIGFuZCBuZXJ2ZXMgb2YgdGhlIGNyYW5pdW07IEludmVzdGlnYXRpb24gb2YgdGhlIG5ldXJhbCBzeXN0ZW1zIHRoYXQgc2VydmUgdGhlIHNlbnNlcyBhbmQgY29tbWFuZCB2b2x1bnRhcnkgbW92ZW1lbnQ7IEhvdyBjaGFuZ2VzIHRvIHRoZSBpbnRlcm5hbCBhbmQgZXh0ZXJuYWwgZW52aXJvbm1lbnQgaW5mbHVlbmNlcyB0aGUgYnJhaW47IEV4cGxvcmF0aW9uIG9mIHRoZSBuZXVyb2Jpb2xvZ3kgb2YgaHVtYW4gYmVoYXZpb3VyLiBIVU1CMjAwMCBBbmF0b215IGFuZCBOZXVyb3NjaWVuY2UgaW50ZWdyYXRlcyB0aGUgcm9sZSBvZiBzdHJ1Y3R1cmVzIG9mIHRoZSBoZWFkIHdpdGggaHVtYW4gZGV2ZWxvcG1lbnQgYW5kIHN1cnZpdmFsLiBOZXVyb3Zhc2N1bGFyIGFuZCBtdXNjdWxvc2tlbGV0YWwgY29tcG9uZW50cyBvZiB0aGUgaGVhZCBhcmUgZXhwbG9yZWQsIHdpdGggcmVmZXJlbmNlIHRvIHRoZSBmdW5jdGlvbmFsIGNvbnRyb2wgbWVjaGFuaXNtcy4NCjI1DQpJbnRlcm5hbA0KNzY4OSwzMTMzOTk7NzY4OSwxNjQ0Ozc2ODksSFVNQjEwMDE7SFVNQjIwMDIsMzEzMzk5O0hVTUIyMDAyLDE2NDQ7SFVNQjIwMDIsSFVNQjEwMDENCg0KDQoyDQoNCg==\" }"
}