AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  CSVParser
  
  Parse CSV to effect DB

Globals:
  Function:
    Timeout: 180 # Way Bigger Timeout As were doing a long process

Parameters:

  Authentication:
    Type: String
    Description: Disable Authentication (True) or Leave It (False)
    Default: "true"

Resources:
  CSVParsingAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Cors:
        AllowMethods: "'POST, OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
        AllowOrigin: "'*'"
      GatewayResponses:
        DEFAULT_4XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              Access-Control-Allow-Methods: "'OPTIONS,POST'"
        DEFAULT_5XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'"
              Access-Control-Allow-Methods: "'OPTIONS,POST'"
  CSVParser: # Just make it public and add auth
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /{operation+}
            Method: ANY
            RestApiId: !Ref CSVParsingAPI
      Environment:
        Variables:
          DisableAuthentication: !Ref Authentication
    Metadata:
      DockerTag: go1.x-v1
      DockerContext: ./CSVParser
      Dockerfile: Dockerfile

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CSVParserPrivateAPI:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${PrivateAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

  CSVParserFunction:
    Description: "CSV Lambda Function ARN"
    Value: !GetAtt CSVParser.Arn

  CSVParserFunctionIamRole:
    Description: "Implicit IAM Role created for Social Events function"
    Value: !GetAtt CSVParser.Arn