image: atlassian/default-image:2
pipelines:
  pull-requests:
    '**':
      - parallel: # INFRASTRUCTURE i.e NO DEPENDENCIES AND NO TESTING
          - step:
              name: "Deploy User Accounts"
              image: atlassian/pipelines-awscli
              script:
                - chmod +x ./SetupAWSPipeline.sh
                - ./SetupAWSPipeline.sh
                - echo "Deploying User Accounts"
                - aws cloudformation deploy --template-file "./Infrastructure Templates/RootTemplate.yaml" --stack-name Capstone-3-Developers --no-fail-on-empty-changeset --capabilities CAPABILITY_NAMED_IAM
          - step:
              name: "Deploy Databases"
              image: atlassian/pipelines-awscli
              script:
                - chmod +x ./SetupAWSPipeline.sh
                - ./SetupAWSPipeline.sh
                - echo "Deploying Developer Databases"
                - aws cloudformation deploy --template-file "./Infrastructure Templates/DevDatabases.yaml" --stack-name DevDB --no-fail-on-empty-changeset
          - step:
              name: "Deploy Userpools"
              image: atlassian/pipelines-awscli
              script:
                - chmod +x ./SetupAWSPipeline.sh
                - ./SetupAWSPipeline.sh
                - echo "Deploying Userpools"
                - aws cloudformation deploy --template-file "./Infrastructure Templates/Userpools.yaml" --stack-name Userpools --no-fail-on-empty-changeset
          - step:
              name: "Deploy Public Repositories"
              image: atlassian/pipelines-awscli
              script:
                - chmod +x ./SetupAWSPipeline.sh
                - ./SetupAWSPipeline.sh
                - echo "Deploying Public Repositories"
                - aws cloudformation deploy --template-file "./Infrastructure Templates/ECRRepositories.yaml" --stack-name ECRRepositories --no-fail-on-empty-changeset
      - parallel:   # TESTING/BUILDING/DEPLOY STAGES
          - step: 
              name: "Build, Test, Deploy Unit Admin API"
              image: python:3.7.2
              script:
                - apt-get update
                - apt-get install -y golang-go
                - pip install awscli
                - pip install aws-sam-cli
                - chmod +x ./SetupAWSPipeline.sh
                - ./SetupAWSPipeline.sh
                - cd UnitAdminAPI
                - chmod +x ./BuildTestDeploy.sh
                - chmod +x ./RunSamTests.sh
                - ./BuildTestDeploy.sh
              services:
                - docker
          - step: 
              name: "Build, Test, Deploy Career Admin API"
              image: python:3.7.2
              script:
                - apt-get update
                - pip install awscli
                - pip install aws-sam-cli
                - chmod +x ./SetupAWSPipeline.sh
                - ./SetupAWSPipeline.sh
                - cd CareersAdminAPI
                - chmod +x ./BuildTestDeploy.sh
                - chmod +x ./UnitTestsHandler.sh
                - ./BuildTestDeploy.sh
              services:
                - docker
          - step: 
              name: "Build, Test, Deploy Careers API"
              image: node:14
              script:
                - apt-get -y update
                - apk add python
                - pip install awscli
                - pip install aws-sam-cli
                - chmod +x ./SetupAWSPipeline.sh
                - ./SetupAWSPipeline.sh
                - cd CareersApi
                - chmod +x ./BuildTestDeploy.sh
                - chmod +x ./CareerApiTests.sh
                - ./BuildTestDeploy.sh
              services:
                - docker